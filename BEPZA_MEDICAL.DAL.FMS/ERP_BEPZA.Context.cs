//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BEPZA_MEDICAL.DAL.FMS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERP_BEPZAFMSEntities : DbContext
    {
        public ERP_BEPZAFMSEntities()
            : base("name=ERP_BEPZAFMSEntities")
        {
            // Get the ObjectContext related to this DbContext
            var objectContext = (this as IObjectContextAdapter).ObjectContext;

            // Sets the command timeout for all the commands
            objectContext.CommandTimeout = 3600;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FMS_FixedDepositInfoInstallmentSchedule> FMS_FixedDepositInfoInstallmentSchedule { get; set; }
        public virtual DbSet<FMS_FixedDepositTypeInfo> FMS_FixedDepositTypeInfo { get; set; }
        public virtual DbSet<FMS_FDRInstallmentInfo> FMS_FDRInstallmentInfo { get; set; }
        public virtual DbSet<FMS_BankInfoBranchDetail> FMS_BankInfoBranchDetail { get; set; }
        public virtual DbSet<FMS_FDRType> FMS_FDRType { get; set; }
        public virtual DbSet<FMS_SourceofFund> FMS_SourceofFund { get; set; }
        public virtual DbSet<FMS_FixedDepositInfo> FMS_FixedDepositInfo { get; set; }
        public virtual DbSet<FMS_FDRClosingInfo> FMS_FDRClosingInfo { get; set; }
        public virtual DbSet<FMS_BankInfo> FMS_BankInfo { get; set; }
        public virtual DbSet<FMS_BankWiseOfferRate> FMS_BankWiseOfferRate { get; set; }
        public virtual DbSet<acc_Cost_Centre_or_Institute_Information> acc_Cost_Centre_or_Institute_Information { get; set; }
        public virtual DbSet<FMS_CPFInterestReceivable> FMS_CPFInterestReceivable { get; set; }
    
        public virtual ObjectResult<SP_FMS_FDRInterestReceivable_Result> SP_FMS_FDRInterestReceivable(string zoneList, string fDRNo, Nullable<System.DateTime> fDRDateFrom, Nullable<System.DateTime> fDRDateTo, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var fDRDateFromParameter = fDRDateFrom.HasValue ?
                new ObjectParameter("FDRDateFrom", fDRDateFrom) :
                new ObjectParameter("FDRDateFrom", typeof(System.DateTime));
    
            var fDRDateToParameter = fDRDateTo.HasValue ?
                new ObjectParameter("FDRDateTo", fDRDateTo) :
                new ObjectParameter("FDRDateTo", typeof(System.DateTime));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRInterestReceivable_Result>("SP_FMS_FDRInterestReceivable", zoneListParameter, fDRNoParameter, fDRDateFromParameter, fDRDateToParameter, interestRateFromParameter, interestRateToParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRClosingInfo_Result> SP_FMS_FDRClosingInfo(string zoneList, string fDRNo, Nullable<System.DateTime> fDRDateFrom, Nullable<System.DateTime> fDRDateTo, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<System.DateTime> maturityDateFrom, Nullable<System.DateTime> maturityDateTo, Nullable<System.DateTime> closingDateFrom, Nullable<System.DateTime> closingDateTo, Nullable<int> bankId, Nullable<int> branchId, string bankType)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var fDRDateFromParameter = fDRDateFrom.HasValue ?
                new ObjectParameter("FDRDateFrom", fDRDateFrom) :
                new ObjectParameter("FDRDateFrom", typeof(System.DateTime));
    
            var fDRDateToParameter = fDRDateTo.HasValue ?
                new ObjectParameter("FDRDateTo", fDRDateTo) :
                new ObjectParameter("FDRDateTo", typeof(System.DateTime));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var maturityDateFromParameter = maturityDateFrom.HasValue ?
                new ObjectParameter("MaturityDateFrom", maturityDateFrom) :
                new ObjectParameter("MaturityDateFrom", typeof(System.DateTime));
    
            var maturityDateToParameter = maturityDateTo.HasValue ?
                new ObjectParameter("MaturityDateTo", maturityDateTo) :
                new ObjectParameter("MaturityDateTo", typeof(System.DateTime));
    
            var closingDateFromParameter = closingDateFrom.HasValue ?
                new ObjectParameter("ClosingDateFrom", closingDateFrom) :
                new ObjectParameter("ClosingDateFrom", typeof(System.DateTime));
    
            var closingDateToParameter = closingDateTo.HasValue ?
                new ObjectParameter("ClosingDateTo", closingDateTo) :
                new ObjectParameter("ClosingDateTo", typeof(System.DateTime));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRClosingInfo_Result>("SP_FMS_FDRClosingInfo", zoneListParameter, fDRNoParameter, fDRDateFromParameter, fDRDateToParameter, interestRateFromParameter, interestRateToParameter, maturityDateFromParameter, maturityDateToParameter, closingDateFromParameter, closingDateToParameter, bankIdParameter, branchIdParameter, bankTypeParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRInfoInstallmentSchedule_Result> SP_FMS_FDRInfoInstallmentSchedule(Nullable<int> fixedDepositInfo)
        {
            var fixedDepositInfoParameter = fixedDepositInfo.HasValue ?
                new ObjectParameter("FixedDepositInfo", fixedDepositInfo) :
                new ObjectParameter("FixedDepositInfo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRInfoInstallmentSchedule_Result>("SP_FMS_FDRInfoInstallmentSchedule", fixedDepositInfoParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRBalance_Result> SP_FMS_FDRBalance(string zoneList, string fDRNo, Nullable<System.DateTime> fDRDateFrom, Nullable<System.DateTime> fDRDateTo, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<int> bankId, Nullable<int> branchId, string bankType, Nullable<System.DateTime> balanceDate)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var fDRDateFromParameter = fDRDateFrom.HasValue ?
                new ObjectParameter("FDRDateFrom", fDRDateFrom) :
                new ObjectParameter("FDRDateFrom", typeof(System.DateTime));
    
            var fDRDateToParameter = fDRDateTo.HasValue ?
                new ObjectParameter("FDRDateTo", fDRDateTo) :
                new ObjectParameter("FDRDateTo", typeof(System.DateTime));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            var balanceDateParameter = balanceDate.HasValue ?
                new ObjectParameter("BalanceDate", balanceDate) :
                new ObjectParameter("BalanceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRBalance_Result>("SP_FMS_FDRBalance", zoneListParameter, fDRNoParameter, fDRDateFromParameter, fDRDateToParameter, interestRateFromParameter, interestRateToParameter, bankIdParameter, branchIdParameter, bankTypeParameter, balanceDateParameter);
        }
    
        public virtual ObjectResult<SP_FMS_getBankAccount_Result> SP_FMS_getBankAccount(Nullable<int> param_ZoneInfoId)
        {
            var param_ZoneInfoIdParameter = param_ZoneInfoId.HasValue ?
                new ObjectParameter("param_ZoneInfoId", param_ZoneInfoId) :
                new ObjectParameter("param_ZoneInfoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_getBankAccount_Result>("SP_FMS_getBankAccount", param_ZoneInfoIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_MonthlyFDRInstallmentReceivable_Result> SP_FMS_MonthlyFDRInstallmentReceivable(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string zoneList)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_MonthlyFDRInstallmentReceivable_Result>("SP_FMS_MonthlyFDRInstallmentReceivable", fromDateParameter, toDateParameter, zoneListParameter);
        }
    
        public virtual ObjectResult<FMS_uspVoucherPosting_Result> FMS_uspVoucherPosting(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FMS_uspVoucherPosting_Result>("FMS_uspVoucherPosting", idParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRInfo_Result> SP_FMS_FDRInfo(string zoneList, string fDRNo, Nullable<System.DateTime> fDRDateFrom, Nullable<System.DateTime> fDRDateTo, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<int> bankId, Nullable<int> branchId, string bankType)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var fDRDateFromParameter = fDRDateFrom.HasValue ?
                new ObjectParameter("FDRDateFrom", fDRDateFrom) :
                new ObjectParameter("FDRDateFrom", typeof(System.DateTime));
    
            var fDRDateToParameter = fDRDateTo.HasValue ?
                new ObjectParameter("FDRDateTo", fDRDateTo) :
                new ObjectParameter("FDRDateTo", typeof(System.DateTime));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRInfo_Result>("SP_FMS_FDRInfo", zoneListParameter, fDRNoParameter, fDRDateFromParameter, fDRDateToParameter, interestRateFromParameter, interestRateToParameter, bankIdParameter, branchIdParameter, bankTypeParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRInstallment_Result> SP_FMS_FDRInstallment(string zoneList, string fDRNo, Nullable<System.DateTime> fDRDateFrom, Nullable<System.DateTime> fDRDateTo, Nullable<System.DateTime> installmentDateFrom, Nullable<System.DateTime> installmentDateTo, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<int> bankId, Nullable<int> branchId, string bankType)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var fDRDateFromParameter = fDRDateFrom.HasValue ?
                new ObjectParameter("FDRDateFrom", fDRDateFrom) :
                new ObjectParameter("FDRDateFrom", typeof(System.DateTime));
    
            var fDRDateToParameter = fDRDateTo.HasValue ?
                new ObjectParameter("FDRDateTo", fDRDateTo) :
                new ObjectParameter("FDRDateTo", typeof(System.DateTime));
    
            var installmentDateFromParameter = installmentDateFrom.HasValue ?
                new ObjectParameter("InstallmentDateFrom", installmentDateFrom) :
                new ObjectParameter("InstallmentDateFrom", typeof(System.DateTime));
    
            var installmentDateToParameter = installmentDateTo.HasValue ?
                new ObjectParameter("InstallmentDateTo", installmentDateTo) :
                new ObjectParameter("InstallmentDateTo", typeof(System.DateTime));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRInstallment_Result>("SP_FMS_FDRInstallment", zoneListParameter, fDRNoParameter, fDRDateFromParameter, fDRDateToParameter, installmentDateFromParameter, installmentDateToParameter, interestRateFromParameter, interestRateToParameter, bankIdParameter, branchIdParameter, bankTypeParameter);
        }
    
        public virtual ObjectResult<FMS_uspVoucherPostingForInterestReceive_Result> FMS_uspVoucherPostingForInterestReceive(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FMS_uspVoucherPostingForInterestReceive_Result>("FMS_uspVoucherPostingForInterestReceive", idParameter);
        }
    
        public virtual ObjectResult<FMS_uspVoucherPostingForClosingRN_Result> FMS_uspVoucherPostingForClosingRN(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FMS_uspVoucherPostingForClosingRN_Result>("FMS_uspVoucherPostingForClosingRN", idParameter);
        }
    
        public virtual ObjectResult<SP_FMS_InvestmentOnFDR_Result> SP_FMS_InvestmentOnFDR(string fDRNo, Nullable<System.DateTime> date, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<int> fundTypeId, Nullable<bool> isFDRDate)
        {
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            var isFDRDateParameter = isFDRDate.HasValue ?
                new ObjectParameter("IsFDRDate", isFDRDate) :
                new ObjectParameter("IsFDRDate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_InvestmentOnFDR_Result>("SP_FMS_InvestmentOnFDR", fDRNoParameter, dateParameter, interestRateFromParameter, interestRateToParameter, fundTypeIdParameter, isFDRDateParameter);
        }
    
        public virtual ObjectResult<SP_FMS_InvestmentOnFDREncashment_Result> SP_FMS_InvestmentOnFDREncashment(string fDRNo, Nullable<System.DateTime> date, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<int> fundTypeId, Nullable<bool> isFDRDate)
        {
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            var isFDRDateParameter = isFDRDate.HasValue ?
                new ObjectParameter("IsFDRDate", isFDRDate) :
                new ObjectParameter("IsFDRDate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_InvestmentOnFDREncashment_Result>("SP_FMS_InvestmentOnFDREncashment", fDRNoParameter, dateParameter, interestRateFromParameter, interestRateToParameter, fundTypeIdParameter, isFDRDateParameter);
        }
    
        public virtual ObjectResult<SP_FMS_getBankChequeNo_Result> SP_FMS_getBankChequeNo(Nullable<int> param_zoneInfoId, Nullable<int> coaId)
        {
            var param_zoneInfoIdParameter = param_zoneInfoId.HasValue ?
                new ObjectParameter("param_zoneInfoId", param_zoneInfoId) :
                new ObjectParameter("param_zoneInfoId", typeof(int));
    
            var coaIdParameter = coaId.HasValue ?
                new ObjectParameter("coaId", coaId) :
                new ObjectParameter("coaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_getBankChequeNo_Result>("SP_FMS_getBankChequeNo", param_zoneInfoIdParameter, coaIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRSchedule_Result> SP_FMS_FDRSchedule(string zoneList, string fDRNo, Nullable<System.DateTime> fDRDateTo, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<int> bankId, Nullable<int> branchId, string bankType, Nullable<bool> isFDRDate, Nullable<int> fundTypeId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var fDRDateToParameter = fDRDateTo.HasValue ?
                new ObjectParameter("FDRDateTo", fDRDateTo) :
                new ObjectParameter("FDRDateTo", typeof(System.DateTime));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            var isFDRDateParameter = isFDRDate.HasValue ?
                new ObjectParameter("IsFDRDate", isFDRDate) :
                new ObjectParameter("IsFDRDate", typeof(bool));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRSchedule_Result>("SP_FMS_FDRSchedule", zoneListParameter, fDRNoParameter, fDRDateToParameter, interestRateFromParameter, interestRateToParameter, bankIdParameter, branchIdParameter, bankTypeParameter, isFDRDateParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRDailyreport_Result> SP_FMS_FDRDailyreport(string zoneList, string fDRNo, string year, string month, Nullable<System.DateTime> fDRDate, Nullable<decimal> duration, string type, Nullable<int> bankId, Nullable<int> branchId, string bankType, Nullable<int> fDRTypeId, Nullable<bool> isFDRDate)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var fDRDateParameter = fDRDate.HasValue ?
                new ObjectParameter("FDRDate", fDRDate) :
                new ObjectParameter("FDRDate", typeof(System.DateTime));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(decimal));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            var fDRTypeIdParameter = fDRTypeId.HasValue ?
                new ObjectParameter("FDRTypeId", fDRTypeId) :
                new ObjectParameter("FDRTypeId", typeof(int));
    
            var isFDRDateParameter = isFDRDate.HasValue ?
                new ObjectParameter("IsFDRDate", isFDRDate) :
                new ObjectParameter("IsFDRDate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRDailyreport_Result>("SP_FMS_FDRDailyreport", zoneListParameter, fDRNoParameter, yearParameter, monthParameter, fDRDateParameter, durationParameter, typeParameter, bankIdParameter, branchIdParameter, bankTypeParameter, fDRTypeIdParameter, isFDRDateParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRPercentage_Result> SP_FMS_FDRPercentage(Nullable<int> fdrTypeId)
        {
            var fdrTypeIdParameter = fdrTypeId.HasValue ?
                new ObjectParameter("fdrTypeId", fdrTypeId) :
                new ObjectParameter("fdrTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRPercentage_Result>("SP_FMS_FDRPercentage", fdrTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRSummary_Result> SP_FMS_FDRSummary(string amountType, Nullable<int> fundTypeId, Nullable<System.DateTime> date, Nullable<bool> isFDRDate)
        {
            var amountTypeParameter = amountType != null ?
                new ObjectParameter("amountType", amountType) :
                new ObjectParameter("amountType", typeof(string));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var isFDRDateParameter = isFDRDate.HasValue ?
                new ObjectParameter("IsFDRDate", isFDRDate) :
                new ObjectParameter("IsFDRDate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRSummary_Result>("SP_FMS_FDRSummary", amountTypeParameter, fundTypeIdParameter, dateParameter, isFDRDateParameter);
        }
    
        public virtual ObjectResult<SP_FMS_RptAllInvestmentonFDR_Result> SP_FMS_RptAllInvestmentonFDR(Nullable<System.DateTime> date, Nullable<bool> isFDRDate)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var isFDRDateParameter = isFDRDate.HasValue ?
                new ObjectParameter("IsFDRDate", isFDRDate) :
                new ObjectParameter("IsFDRDate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_RptAllInvestmentonFDR_Result>("SP_FMS_RptAllInvestmentonFDR", dateParameter, isFDRDateParameter);
        }
    
        public virtual ObjectResult<ACC_getApproverListByZoneId_Result> ACC_getApproverListByZoneId(Nullable<int> zoneId, string approvalProcess, Nullable<int> employeeId, Nullable<int> approvalStepTypeId)
        {
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var approvalProcessParameter = approvalProcess != null ?
                new ObjectParameter("ApprovalProcess", approvalProcess) :
                new ObjectParameter("ApprovalProcess", typeof(string));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var approvalStepTypeIdParameter = approvalStepTypeId.HasValue ?
                new ObjectParameter("ApprovalStepTypeId", approvalStepTypeId) :
                new ObjectParameter("ApprovalStepTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ACC_getApproverListByZoneId_Result>("ACC_getApproverListByZoneId", zoneIdParameter, approvalProcessParameter, employeeIdParameter, approvalStepTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRClosingHistory_Result> SP_FMS_FDRClosingHistory(string zoneList, string fDRNo, Nullable<System.DateTime> fDRDateFrom, Nullable<System.DateTime> fDRDateTo, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<int> bankId, Nullable<int> branchId, string bankType, Nullable<int> fundTypeId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var fDRDateFromParameter = fDRDateFrom.HasValue ?
                new ObjectParameter("FDRDateFrom", fDRDateFrom) :
                new ObjectParameter("FDRDateFrom", typeof(System.DateTime));
    
            var fDRDateToParameter = fDRDateTo.HasValue ?
                new ObjectParameter("FDRDateTo", fDRDateTo) :
                new ObjectParameter("FDRDateTo", typeof(System.DateTime));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRClosingHistory_Result>("SP_FMS_FDRClosingHistory", zoneListParameter, fDRNoParameter, fDRDateFromParameter, fDRDateToParameter, interestRateFromParameter, interestRateToParameter, bankIdParameter, branchIdParameter, bankTypeParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRRegister_Result> SP_FMS_FDRRegister(string fDRNo, Nullable<int> fundTypeId)
        {
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRRegister_Result>("SP_FMS_FDRRegister", fDRNoParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_NewFDRforCurrentYear_Result> SP_FMS_NewFDRforCurrentYear(string zoneList, string fDRNo, Nullable<int> financialYearId, Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<int> bankId, Nullable<int> branchId, string bankType, Nullable<int> fundTypeId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fDRNoParameter = fDRNo != null ?
                new ObjectParameter("FDRNo", fDRNo) :
                new ObjectParameter("FDRNo", typeof(string));
    
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("financialYearId", financialYearId) :
                new ObjectParameter("financialYearId", typeof(int));
    
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_NewFDRforCurrentYear_Result>("SP_FMS_NewFDRforCurrentYear", zoneListParameter, fDRNoParameter, financialYearIdParameter, interestRateFromParameter, interestRateToParameter, bankIdParameter, branchIdParameter, bankTypeParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_FDRinterestRateinformation_Result> SP_FMS_FDRinterestRateinformation(Nullable<decimal> interestRateFrom, Nullable<decimal> interestRateTo, Nullable<int> bankId, Nullable<int> branchId, string bankType, Nullable<decimal> duration, string type, Nullable<int> fundTypeId)
        {
            var interestRateFromParameter = interestRateFrom.HasValue ?
                new ObjectParameter("InterestRateFrom", interestRateFrom) :
                new ObjectParameter("InterestRateFrom", typeof(decimal));
    
            var interestRateToParameter = interestRateTo.HasValue ?
                new ObjectParameter("InterestRateTo", interestRateTo) :
                new ObjectParameter("InterestRateTo", typeof(decimal));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(decimal));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_FDRinterestRateinformation_Result>("SP_FMS_FDRinterestRateinformation", interestRateFromParameter, interestRateToParameter, bankIdParameter, branchIdParameter, bankTypeParameter, durationParameter, typeParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_StatementOfFRDInserestEncashmentMonthly_Result> SP_FMS_StatementOfFRDInserestEncashmentMonthly(string zoneList, string fromYear, string fromMonth, Nullable<int> fundTypeId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fromYearParameter = fromYear != null ?
                new ObjectParameter("FromYear", fromYear) :
                new ObjectParameter("FromYear", typeof(string));
    
            var fromMonthParameter = fromMonth != null ?
                new ObjectParameter("FromMonth", fromMonth) :
                new ObjectParameter("FromMonth", typeof(string));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_StatementOfFRDInserestEncashmentMonthly_Result>("SP_FMS_StatementOfFRDInserestEncashmentMonthly", zoneListParameter, fromYearParameter, fromMonthParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_StatementOfFRDInserestEncashmentYearly_Result> SP_FMS_StatementOfFRDInserestEncashmentYearly(string zoneList, Nullable<int> periodId, Nullable<int> fundTypeId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_StatementOfFRDInserestEncashmentYearly_Result>("SP_FMS_StatementOfFRDInserestEncashmentYearly", zoneListParameter, periodIdParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_StatementOfFRDInserestReceivable_Result> SP_FMS_StatementOfFRDInserestReceivable(string zoneList, Nullable<int> periodId, Nullable<int> fundTypeId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_StatementOfFRDInserestReceivable_Result>("SP_FMS_StatementOfFRDInserestReceivable", zoneListParameter, periodIdParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_StatementOfFRDInserestReceivableMonthly_Result> SP_FMS_StatementOfFRDInserestReceivableMonthly(string zoneList, string fromYear, string fromMonth, Nullable<int> fundTypeId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fromYearParameter = fromYear != null ?
                new ObjectParameter("FromYear", fromYear) :
                new ObjectParameter("FromYear", typeof(string));
    
            var fromMonthParameter = fromMonth != null ?
                new ObjectParameter("FromMonth", fromMonth) :
                new ObjectParameter("FromMonth", typeof(string));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_StatementOfFRDInserestReceivableMonthly_Result>("SP_FMS_StatementOfFRDInserestReceivableMonthly", zoneListParameter, fromYearParameter, fromMonthParameter, fundTypeIdParameter);
        }
    
        public virtual int FMS_AutoRVforFDRCls(Nullable<int> zoneInfoId, Nullable<int> userId, Nullable<int> approverId, string sVoucherDate, string narration, Nullable<int> subledgerId, Nullable<decimal> fDRAmount, Nullable<decimal> profit, string empId, Nullable<decimal> taxAmount, Nullable<decimal> bankCharge, ObjectParameter message)
        {
            var zoneInfoIdParameter = zoneInfoId.HasValue ?
                new ObjectParameter("ZoneInfoId", zoneInfoId) :
                new ObjectParameter("ZoneInfoId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var approverIdParameter = approverId.HasValue ?
                new ObjectParameter("ApproverId", approverId) :
                new ObjectParameter("ApproverId", typeof(int));
    
            var sVoucherDateParameter = sVoucherDate != null ?
                new ObjectParameter("SVoucherDate", sVoucherDate) :
                new ObjectParameter("SVoucherDate", typeof(string));
    
            var narrationParameter = narration != null ?
                new ObjectParameter("Narration", narration) :
                new ObjectParameter("Narration", typeof(string));
    
            var subledgerIdParameter = subledgerId.HasValue ?
                new ObjectParameter("SubledgerId", subledgerId) :
                new ObjectParameter("SubledgerId", typeof(int));
    
            var fDRAmountParameter = fDRAmount.HasValue ?
                new ObjectParameter("FDRAmount", fDRAmount) :
                new ObjectParameter("FDRAmount", typeof(decimal));
    
            var profitParameter = profit.HasValue ?
                new ObjectParameter("Profit", profit) :
                new ObjectParameter("Profit", typeof(decimal));
    
            var empIdParameter = empId != null ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(string));
    
            var taxAmountParameter = taxAmount.HasValue ?
                new ObjectParameter("TaxAmount", taxAmount) :
                new ObjectParameter("TaxAmount", typeof(decimal));
    
            var bankChargeParameter = bankCharge.HasValue ?
                new ObjectParameter("BankCharge", bankCharge) :
                new ObjectParameter("BankCharge", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FMS_AutoRVforFDRCls", zoneInfoIdParameter, userIdParameter, approverIdParameter, sVoucherDateParameter, narrationParameter, subledgerIdParameter, fDRAmountParameter, profitParameter, empIdParameter, taxAmountParameter, bankChargeParameter, message);
        }
    
        public virtual ObjectResult<SP_FMS_EncashedFDRinCurrentYear_Result> SP_FMS_EncashedFDRinCurrentYear(Nullable<int> financialYearId, Nullable<int> bankId, Nullable<int> branchId, string bankType, Nullable<int> fundTypeId)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_EncashedFDRinCurrentYear_Result>("SP_FMS_EncashedFDRinCurrentYear", financialYearIdParameter, bankIdParameter, branchIdParameter, bankTypeParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_SimulateFDRRegister_Result> SP_FMS_SimulateFDRRegister(Nullable<int> param_FDRId, Nullable<decimal> param_InterestRate, Nullable<decimal> param_InterestRateDuration, Nullable<decimal> param_TaxRate, Nullable<decimal> param_BankCharge, Nullable<int> param_IsCommitChange)
        {
            var param_FDRIdParameter = param_FDRId.HasValue ?
                new ObjectParameter("param_FDRId", param_FDRId) :
                new ObjectParameter("param_FDRId", typeof(int));
    
            var param_InterestRateParameter = param_InterestRate.HasValue ?
                new ObjectParameter("param_InterestRate", param_InterestRate) :
                new ObjectParameter("param_InterestRate", typeof(decimal));
    
            var param_InterestRateDurationParameter = param_InterestRateDuration.HasValue ?
                new ObjectParameter("param_InterestRateDuration", param_InterestRateDuration) :
                new ObjectParameter("param_InterestRateDuration", typeof(decimal));
    
            var param_TaxRateParameter = param_TaxRate.HasValue ?
                new ObjectParameter("param_TaxRate", param_TaxRate) :
                new ObjectParameter("param_TaxRate", typeof(decimal));
    
            var param_BankChargeParameter = param_BankCharge.HasValue ?
                new ObjectParameter("param_BankCharge", param_BankCharge) :
                new ObjectParameter("param_BankCharge", typeof(decimal));
    
            var param_IsCommitChangeParameter = param_IsCommitChange.HasValue ?
                new ObjectParameter("param_IsCommitChange", param_IsCommitChange) :
                new ObjectParameter("param_IsCommitChange", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_SimulateFDRRegister_Result>("SP_FMS_SimulateFDRRegister", param_FDRIdParameter, param_InterestRateParameter, param_InterestRateDurationParameter, param_TaxRateParameter, param_BankChargeParameter, param_IsCommitChangeParameter);
        }
    
        public virtual ObjectResult<SP_FMS_CPFInserestReceivable_Result> SP_FMS_CPFInserestReceivable(string zoneList, Nullable<int> periodId, Nullable<int> fundTypeId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var fundTypeIdParameter = fundTypeId.HasValue ?
                new ObjectParameter("FundTypeId", fundTypeId) :
                new ObjectParameter("FundTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_CPFInserestReceivable_Result>("SP_FMS_CPFInserestReceivable", zoneListParameter, periodIdParameter, fundTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_FMS_BankBranchInfo_Result> SP_FMS_BankBranchInfo(Nullable<int> bankId, Nullable<int> branchId)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FMS_BankBranchInfo_Result>("SP_FMS_BankBranchInfo", bankIdParameter, branchIdParameter);
        }
    }
}
