@model ERP_BEPZA.Web.Areas.PRM.ViewModel.EmployeeSearchViewModel

<script type="text/javascript">

    $(function () {

        $("a.deleteItem").live("click", function () {
            deleteLinkObj = $(this);  //for future use
            $('#delete-dialog').dialog('open');
            return false; // prevents the default behaviour
        });
        $('#delete-dialog').dialog({
            autoOpen: false, width: 320, resizable: false, modal: true, //Dialog options
            overlay: {
                backgroundColor: '#000',
                opacity: 0.5
            },
            buttons: {
                "Yes": function () {

                    $.post(deleteLinkObj[0].href, function (obj) {  //Post to action

                        if (obj.Success) {
                            $("#message").html("<b>" + obj.Message + "</b>").css("color", "Green");
                            $('#sButton').trigger('click');
                        }
                        else {
                            $("#message").html("<b>" + obj.Message + "</b>").css("color", "red");
                        }
                    });
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });
    });

</script>
<script type="text/javascript">

    function handleDeleteSuccess() {
    }
    function handleDeleteFailure() {
        $("#message").html('There is an Ajax call back error!');
    }
    function JsonDelete_OnComplete(context) {
        var obj = eval("(" + context.responseText + ")");
        if (obj.Success) {
            $("#message").html("<b>" + obj.Message + "</b>").css("color", "Green");
            $('#sButton').trigger('click');
        }
        else {
            $("#message").html("<b>" + obj.Message + "</b>").css("color", "red");
        }
    }

</script>
<script type="text/javascript">

    $(document).ready(function () {
        $('#jqGrid').jqGrid({
            url: '@Url.Action("GetList", "Home")',
            datatype: 'json',
            mtype: 'POST',
            colNames: [ 'Id', 'Module', 'Notification Type', 'Message', 'Read', 'Link'],
            colModel: [

                            { name: 'ID', index: 'ID', align: 'left', search: false, hidden: true },
                            { name: 'Module', index: 'Module', align: 'left', search: true, width: '30px', edittype: 'select', surl: '@Url.Action("GetModuleList", "NotificationFlowSetup", new {area="PRM"})' },
                            { name: 'NotificationType', index: 'NotificationType', align: 'center', search: true, width: '80px', edittype: 'select', surl: '@Url.Action("GetNotificationTypeList", "NotificationFlowSetup", new {area="PRM"})' },

                            { name: 'Message', index: 'Message', align: 'left', search: false, edittype: 'text' },
                            { name: 'Read', index: 'Read', align: 'center', search: false, edittype: 'text', width: '20px' },
                            { name: 'Link', index: 'Link', align: 'center', search: false, edittype: 'text', width: '20px' }

                          ],
            autowidth: true,
            caption: "Notification List",
            rowList: [20, 30, 40, 50, 100],
            pager: $('#jqGridPager'),
            rowNum: 20,
            sortname: 'NotificationType',
            sortorder: 'asc',
            viewrecords: true,
            height: '100%',
            width: '100%',
            grouping: true,
            groupingView: {
                groupField: ['Module'],
                groupColumnShow: [false],
                groupText: ['<b>{0} - {1} Notifications(s)</b>']
            },
        });
        // Pager Function
        $("#jqSearch").jqGrid('filterGrid', '#jqGrid', { gridModel: true, gridNames: true, formtype: 'horizontal', autosearch: true, enableSearch: true, enableClear: true });

    });



</script>


