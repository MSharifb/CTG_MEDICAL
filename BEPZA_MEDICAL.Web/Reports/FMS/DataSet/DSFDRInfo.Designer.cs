//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BEPZA_MEDICAL.Web.Reports.FMS.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSFDRInfo")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSFDRInfo : global::System.Data.DataSet {
        
        private SP_FMS_FDRInfoDataTable tableSP_FMS_FDRInfo;
        
        private SP_FMS_FDRInfoInstallmentScheduleDataTable tableSP_FMS_FDRInfoInstallmentSchedule;
        
        private SP_FMS_FDRRegisterDataTable tableSP_FMS_FDRRegister;
        
        private SP_FMS_NewFDRforCurrentYearDataTable tableSP_FMS_NewFDRforCurrentYear;
        
        private SP_FMS_EncashedFDRinCurrentYearDataTable tableSP_FMS_EncashedFDRinCurrentYear;
        
        private SP_FMS_InvestmentOnFDRDataTable tableSP_FMS_InvestmentOnFDR;
        
        private SP_FMS_InvestmentOnFDREncashmentDataTable tableSP_FMS_InvestmentOnFDREncashment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DSFDRInfo() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DSFDRInfo(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SP_FMS_FDRInfo"] != null)) {
                    base.Tables.Add(new SP_FMS_FDRInfoDataTable(ds.Tables["SP_FMS_FDRInfo"]));
                }
                if ((ds.Tables["SP_FMS_FDRInfoInstallmentSchedule"] != null)) {
                    base.Tables.Add(new SP_FMS_FDRInfoInstallmentScheduleDataTable(ds.Tables["SP_FMS_FDRInfoInstallmentSchedule"]));
                }
                if ((ds.Tables["SP_FMS_FDRRegister"] != null)) {
                    base.Tables.Add(new SP_FMS_FDRRegisterDataTable(ds.Tables["SP_FMS_FDRRegister"]));
                }
                if ((ds.Tables["SP_FMS_NewFDRforCurrentYear"] != null)) {
                    base.Tables.Add(new SP_FMS_NewFDRforCurrentYearDataTable(ds.Tables["SP_FMS_NewFDRforCurrentYear"]));
                }
                if ((ds.Tables["SP_FMS_EncashedFDRinCurrentYear"] != null)) {
                    base.Tables.Add(new SP_FMS_EncashedFDRinCurrentYearDataTable(ds.Tables["SP_FMS_EncashedFDRinCurrentYear"]));
                }
                if ((ds.Tables["SP_FMS_InvestmentOnFDR"] != null)) {
                    base.Tables.Add(new SP_FMS_InvestmentOnFDRDataTable(ds.Tables["SP_FMS_InvestmentOnFDR"]));
                }
                if ((ds.Tables["SP_FMS_InvestmentOnFDREncashment"] != null)) {
                    base.Tables.Add(new SP_FMS_InvestmentOnFDREncashmentDataTable(ds.Tables["SP_FMS_InvestmentOnFDREncashment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_FMS_FDRInfoDataTable SP_FMS_FDRInfo {
            get {
                return this.tableSP_FMS_FDRInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_FMS_FDRInfoInstallmentScheduleDataTable SP_FMS_FDRInfoInstallmentSchedule {
            get {
                return this.tableSP_FMS_FDRInfoInstallmentSchedule;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_FMS_FDRRegisterDataTable SP_FMS_FDRRegister {
            get {
                return this.tableSP_FMS_FDRRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_FMS_NewFDRforCurrentYearDataTable SP_FMS_NewFDRforCurrentYear {
            get {
                return this.tableSP_FMS_NewFDRforCurrentYear;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_FMS_EncashedFDRinCurrentYearDataTable SP_FMS_EncashedFDRinCurrentYear {
            get {
                return this.tableSP_FMS_EncashedFDRinCurrentYear;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_FMS_InvestmentOnFDRDataTable SP_FMS_InvestmentOnFDR {
            get {
                return this.tableSP_FMS_InvestmentOnFDR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_FMS_InvestmentOnFDREncashmentDataTable SP_FMS_InvestmentOnFDREncashment {
            get {
                return this.tableSP_FMS_InvestmentOnFDREncashment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DSFDRInfo cln = ((DSFDRInfo)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SP_FMS_FDRInfo"] != null)) {
                    base.Tables.Add(new SP_FMS_FDRInfoDataTable(ds.Tables["SP_FMS_FDRInfo"]));
                }
                if ((ds.Tables["SP_FMS_FDRInfoInstallmentSchedule"] != null)) {
                    base.Tables.Add(new SP_FMS_FDRInfoInstallmentScheduleDataTable(ds.Tables["SP_FMS_FDRInfoInstallmentSchedule"]));
                }
                if ((ds.Tables["SP_FMS_FDRRegister"] != null)) {
                    base.Tables.Add(new SP_FMS_FDRRegisterDataTable(ds.Tables["SP_FMS_FDRRegister"]));
                }
                if ((ds.Tables["SP_FMS_NewFDRforCurrentYear"] != null)) {
                    base.Tables.Add(new SP_FMS_NewFDRforCurrentYearDataTable(ds.Tables["SP_FMS_NewFDRforCurrentYear"]));
                }
                if ((ds.Tables["SP_FMS_EncashedFDRinCurrentYear"] != null)) {
                    base.Tables.Add(new SP_FMS_EncashedFDRinCurrentYearDataTable(ds.Tables["SP_FMS_EncashedFDRinCurrentYear"]));
                }
                if ((ds.Tables["SP_FMS_InvestmentOnFDR"] != null)) {
                    base.Tables.Add(new SP_FMS_InvestmentOnFDRDataTable(ds.Tables["SP_FMS_InvestmentOnFDR"]));
                }
                if ((ds.Tables["SP_FMS_InvestmentOnFDREncashment"] != null)) {
                    base.Tables.Add(new SP_FMS_InvestmentOnFDREncashmentDataTable(ds.Tables["SP_FMS_InvestmentOnFDREncashment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSP_FMS_FDRInfo = ((SP_FMS_FDRInfoDataTable)(base.Tables["SP_FMS_FDRInfo"]));
            if ((initTable == true)) {
                if ((this.tableSP_FMS_FDRInfo != null)) {
                    this.tableSP_FMS_FDRInfo.InitVars();
                }
            }
            this.tableSP_FMS_FDRInfoInstallmentSchedule = ((SP_FMS_FDRInfoInstallmentScheduleDataTable)(base.Tables["SP_FMS_FDRInfoInstallmentSchedule"]));
            if ((initTable == true)) {
                if ((this.tableSP_FMS_FDRInfoInstallmentSchedule != null)) {
                    this.tableSP_FMS_FDRInfoInstallmentSchedule.InitVars();
                }
            }
            this.tableSP_FMS_FDRRegister = ((SP_FMS_FDRRegisterDataTable)(base.Tables["SP_FMS_FDRRegister"]));
            if ((initTable == true)) {
                if ((this.tableSP_FMS_FDRRegister != null)) {
                    this.tableSP_FMS_FDRRegister.InitVars();
                }
            }
            this.tableSP_FMS_NewFDRforCurrentYear = ((SP_FMS_NewFDRforCurrentYearDataTable)(base.Tables["SP_FMS_NewFDRforCurrentYear"]));
            if ((initTable == true)) {
                if ((this.tableSP_FMS_NewFDRforCurrentYear != null)) {
                    this.tableSP_FMS_NewFDRforCurrentYear.InitVars();
                }
            }
            this.tableSP_FMS_EncashedFDRinCurrentYear = ((SP_FMS_EncashedFDRinCurrentYearDataTable)(base.Tables["SP_FMS_EncashedFDRinCurrentYear"]));
            if ((initTable == true)) {
                if ((this.tableSP_FMS_EncashedFDRinCurrentYear != null)) {
                    this.tableSP_FMS_EncashedFDRinCurrentYear.InitVars();
                }
            }
            this.tableSP_FMS_InvestmentOnFDR = ((SP_FMS_InvestmentOnFDRDataTable)(base.Tables["SP_FMS_InvestmentOnFDR"]));
            if ((initTable == true)) {
                if ((this.tableSP_FMS_InvestmentOnFDR != null)) {
                    this.tableSP_FMS_InvestmentOnFDR.InitVars();
                }
            }
            this.tableSP_FMS_InvestmentOnFDREncashment = ((SP_FMS_InvestmentOnFDREncashmentDataTable)(base.Tables["SP_FMS_InvestmentOnFDREncashment"]));
            if ((initTable == true)) {
                if ((this.tableSP_FMS_InvestmentOnFDREncashment != null)) {
                    this.tableSP_FMS_InvestmentOnFDREncashment.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DSFDRInfo";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSFDRInfo.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSP_FMS_FDRInfo = new SP_FMS_FDRInfoDataTable();
            base.Tables.Add(this.tableSP_FMS_FDRInfo);
            this.tableSP_FMS_FDRInfoInstallmentSchedule = new SP_FMS_FDRInfoInstallmentScheduleDataTable();
            base.Tables.Add(this.tableSP_FMS_FDRInfoInstallmentSchedule);
            this.tableSP_FMS_FDRRegister = new SP_FMS_FDRRegisterDataTable();
            base.Tables.Add(this.tableSP_FMS_FDRRegister);
            this.tableSP_FMS_NewFDRforCurrentYear = new SP_FMS_NewFDRforCurrentYearDataTable();
            base.Tables.Add(this.tableSP_FMS_NewFDRforCurrentYear);
            this.tableSP_FMS_EncashedFDRinCurrentYear = new SP_FMS_EncashedFDRinCurrentYearDataTable();
            base.Tables.Add(this.tableSP_FMS_EncashedFDRinCurrentYear);
            this.tableSP_FMS_InvestmentOnFDR = new SP_FMS_InvestmentOnFDRDataTable();
            base.Tables.Add(this.tableSP_FMS_InvestmentOnFDR);
            this.tableSP_FMS_InvestmentOnFDREncashment = new SP_FMS_InvestmentOnFDREncashmentDataTable();
            base.Tables.Add(this.tableSP_FMS_InvestmentOnFDREncashment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_FMS_FDRInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_FMS_FDRInfoInstallmentSchedule() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_FMS_FDRRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_FMS_NewFDRforCurrentYear() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_FMS_EncashedFDRinCurrentYear() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_FMS_InvestmentOnFDR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_FMS_InvestmentOnFDREncashment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSFDRInfo ds = new DSFDRInfo();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_FMS_FDRInfoRowChangeEventHandler(object sender, SP_FMS_FDRInfoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_FMS_FDRInfoInstallmentScheduleRowChangeEventHandler(object sender, SP_FMS_FDRInfoInstallmentScheduleRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_FMS_FDRRegisterRowChangeEventHandler(object sender, SP_FMS_FDRRegisterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_FMS_NewFDRforCurrentYearRowChangeEventHandler(object sender, SP_FMS_NewFDRforCurrentYearRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_FMS_EncashedFDRinCurrentYearRowChangeEventHandler(object sender, SP_FMS_EncashedFDRinCurrentYearRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_FMS_InvestmentOnFDRRowChangeEventHandler(object sender, SP_FMS_InvestmentOnFDRRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_FMS_InvestmentOnFDREncashmentRowChangeEventHandler(object sender, SP_FMS_InvestmentOnFDREncashmentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_FMS_FDRInfoDataTable : global::System.Data.TypedTableBase<SP_FMS_FDRInfoRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnZoneInfoId;
            
            private global::System.Data.DataColumn columnFDRNumber;
            
            private global::System.Data.DataColumn columnFDRDate;
            
            private global::System.Data.DataColumn columnRenewalNo;
            
            private global::System.Data.DataColumn columnFDRName;
            
            private global::System.Data.DataColumn columnFDRType;
            
            private global::System.Data.DataColumn columnBankInfoId;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBankType;
            
            private global::System.Data.DataColumn columnBankInfoBranchDetailId;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnBankAccountId;
            
            private global::System.Data.DataColumn columnProfitRecvId;
            
            private global::System.Data.DataColumn columnInitialDeposit;
            
            private global::System.Data.DataColumn columnFDRAmount;
            
            private global::System.Data.DataColumn columnFDRDuration;
            
            private global::System.Data.DataColumn columnFDRDurationType;
            
            private global::System.Data.DataColumn columnInterestRate;
            
            private global::System.Data.DataColumn columnInterestAmount;
            
            private global::System.Data.DataColumn columnInstallmentDuration;
            
            private global::System.Data.DataColumn columnInstallmentDurationType;
            
            private global::System.Data.DataColumn columnTAXRate;
            
            private global::System.Data.DataColumn columnTAXAmount;
            
            private global::System.Data.DataColumn columnBankCharge;
            
            private global::System.Data.DataColumn columnTotalBankCharge;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnMaturityDate;
            
            private global::System.Data.DataColumn columnTotalReceivableAmount;
            
            private global::System.Data.DataColumn columnTotalInterestAmount;
            
            private global::System.Data.DataColumn columnTotalTAXAmount;
            
            private global::System.Data.DataColumn columnTotalProfit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoDataTable() {
                this.TableName = "SP_FMS_FDRInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_FDRInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_FMS_FDRInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ZoneInfoIdColumn {
                get {
                    return this.columnZoneInfoId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRNumberColumn {
                get {
                    return this.columnFDRNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDateColumn {
                get {
                    return this.columnFDRDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RenewalNoColumn {
                get {
                    return this.columnRenewalNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRNameColumn {
                get {
                    return this.columnFDRName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRTypeColumn {
                get {
                    return this.columnFDRType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankInfoIdColumn {
                get {
                    return this.columnBankInfoId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankTypeColumn {
                get {
                    return this.columnBankType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankInfoBranchDetailIdColumn {
                get {
                    return this.columnBankInfoBranchDetailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankAccountIdColumn {
                get {
                    return this.columnBankAccountId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProfitRecvIdColumn {
                get {
                    return this.columnProfitRecvId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InitialDepositColumn {
                get {
                    return this.columnInitialDeposit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRAmountColumn {
                get {
                    return this.columnFDRAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDurationColumn {
                get {
                    return this.columnFDRDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDurationTypeColumn {
                get {
                    return this.columnFDRDurationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestRateColumn {
                get {
                    return this.columnInterestRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestAmountColumn {
                get {
                    return this.columnInterestAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstallmentDurationColumn {
                get {
                    return this.columnInstallmentDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstallmentDurationTypeColumn {
                get {
                    return this.columnInstallmentDurationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAXRateColumn {
                get {
                    return this.columnTAXRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAXAmountColumn {
                get {
                    return this.columnTAXAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankChargeColumn {
                get {
                    return this.columnBankCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalBankChargeColumn {
                get {
                    return this.columnTotalBankCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MaturityDateColumn {
                get {
                    return this.columnMaturityDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalReceivableAmountColumn {
                get {
                    return this.columnTotalReceivableAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalInterestAmountColumn {
                get {
                    return this.columnTotalInterestAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalTAXAmountColumn {
                get {
                    return this.columnTotalTAXAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalProfitColumn {
                get {
                    return this.columnTotalProfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoRow this[int index] {
                get {
                    return ((SP_FMS_FDRInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRInfoRowChangeEventHandler SP_FMS_FDRInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRInfoRowChangeEventHandler SP_FMS_FDRInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRInfoRowChangeEventHandler SP_FMS_FDRInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRInfoRowChangeEventHandler SP_FMS_FDRInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_FMS_FDRInfoRow(SP_FMS_FDRInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoRow AddSP_FMS_FDRInfoRow(
                        int ZoneInfoId, 
                        string FDRNumber, 
                        System.DateTime FDRDate, 
                        string RenewalNo, 
                        string FDRName, 
                        string FDRType, 
                        int BankInfoId, 
                        string BankName, 
                        string BankType, 
                        int BankInfoBranchDetailId, 
                        string BranchName, 
                        int BankAccountId, 
                        int ProfitRecvId, 
                        decimal InitialDeposit, 
                        decimal FDRAmount, 
                        int FDRDuration, 
                        string FDRDurationType, 
                        decimal InterestRate, 
                        decimal InterestAmount, 
                        int InstallmentDuration, 
                        string InstallmentDurationType, 
                        decimal TAXRate, 
                        decimal TAXAmount, 
                        decimal BankCharge, 
                        decimal TotalBankCharge, 
                        System.DateTime StartDate, 
                        System.DateTime MaturityDate, 
                        decimal TotalReceivableAmount, 
                        decimal TotalInterestAmount, 
                        decimal TotalTAXAmount, 
                        decimal TotalProfit) {
                SP_FMS_FDRInfoRow rowSP_FMS_FDRInfoRow = ((SP_FMS_FDRInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ZoneInfoId,
                        FDRNumber,
                        FDRDate,
                        RenewalNo,
                        FDRName,
                        FDRType,
                        BankInfoId,
                        BankName,
                        BankType,
                        BankInfoBranchDetailId,
                        BranchName,
                        BankAccountId,
                        ProfitRecvId,
                        InitialDeposit,
                        FDRAmount,
                        FDRDuration,
                        FDRDurationType,
                        InterestRate,
                        InterestAmount,
                        InstallmentDuration,
                        InstallmentDurationType,
                        TAXRate,
                        TAXAmount,
                        BankCharge,
                        TotalBankCharge,
                        StartDate,
                        MaturityDate,
                        TotalReceivableAmount,
                        TotalInterestAmount,
                        TotalTAXAmount,
                        TotalProfit};
                rowSP_FMS_FDRInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_FMS_FDRInfoRow);
                return rowSP_FMS_FDRInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoRow FindById(int Id) {
                return ((SP_FMS_FDRInfoRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_FMS_FDRInfoDataTable cln = ((SP_FMS_FDRInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_FMS_FDRInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnZoneInfoId = base.Columns["ZoneInfoId"];
                this.columnFDRNumber = base.Columns["FDRNumber"];
                this.columnFDRDate = base.Columns["FDRDate"];
                this.columnRenewalNo = base.Columns["RenewalNo"];
                this.columnFDRName = base.Columns["FDRName"];
                this.columnFDRType = base.Columns["FDRType"];
                this.columnBankInfoId = base.Columns["BankInfoId"];
                this.columnBankName = base.Columns["BankName"];
                this.columnBankType = base.Columns["BankType"];
                this.columnBankInfoBranchDetailId = base.Columns["BankInfoBranchDetailId"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnBankAccountId = base.Columns["BankAccountId"];
                this.columnProfitRecvId = base.Columns["ProfitRecvId"];
                this.columnInitialDeposit = base.Columns["InitialDeposit"];
                this.columnFDRAmount = base.Columns["FDRAmount"];
                this.columnFDRDuration = base.Columns["FDRDuration"];
                this.columnFDRDurationType = base.Columns["FDRDurationType"];
                this.columnInterestRate = base.Columns["InterestRate"];
                this.columnInterestAmount = base.Columns["InterestAmount"];
                this.columnInstallmentDuration = base.Columns["InstallmentDuration"];
                this.columnInstallmentDurationType = base.Columns["InstallmentDurationType"];
                this.columnTAXRate = base.Columns["TAXRate"];
                this.columnTAXAmount = base.Columns["TAXAmount"];
                this.columnBankCharge = base.Columns["BankCharge"];
                this.columnTotalBankCharge = base.Columns["TotalBankCharge"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnMaturityDate = base.Columns["MaturityDate"];
                this.columnTotalReceivableAmount = base.Columns["TotalReceivableAmount"];
                this.columnTotalInterestAmount = base.Columns["TotalInterestAmount"];
                this.columnTotalTAXAmount = base.Columns["TotalTAXAmount"];
                this.columnTotalProfit = base.Columns["TotalProfit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnZoneInfoId = new global::System.Data.DataColumn("ZoneInfoId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneInfoId);
                this.columnFDRNumber = new global::System.Data.DataColumn("FDRNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRNumber);
                this.columnFDRDate = new global::System.Data.DataColumn("FDRDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDate);
                this.columnRenewalNo = new global::System.Data.DataColumn("RenewalNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenewalNo);
                this.columnFDRName = new global::System.Data.DataColumn("FDRName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRName);
                this.columnFDRType = new global::System.Data.DataColumn("FDRType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRType);
                this.columnBankInfoId = new global::System.Data.DataColumn("BankInfoId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankInfoId);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBankType = new global::System.Data.DataColumn("BankType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankType);
                this.columnBankInfoBranchDetailId = new global::System.Data.DataColumn("BankInfoBranchDetailId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankInfoBranchDetailId);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnBankAccountId = new global::System.Data.DataColumn("BankAccountId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccountId);
                this.columnProfitRecvId = new global::System.Data.DataColumn("ProfitRecvId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfitRecvId);
                this.columnInitialDeposit = new global::System.Data.DataColumn("InitialDeposit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialDeposit);
                this.columnFDRAmount = new global::System.Data.DataColumn("FDRAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRAmount);
                this.columnFDRDuration = new global::System.Data.DataColumn("FDRDuration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDuration);
                this.columnFDRDurationType = new global::System.Data.DataColumn("FDRDurationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDurationType);
                this.columnInterestRate = new global::System.Data.DataColumn("InterestRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestRate);
                this.columnInterestAmount = new global::System.Data.DataColumn("InterestAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestAmount);
                this.columnInstallmentDuration = new global::System.Data.DataColumn("InstallmentDuration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallmentDuration);
                this.columnInstallmentDurationType = new global::System.Data.DataColumn("InstallmentDurationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallmentDurationType);
                this.columnTAXRate = new global::System.Data.DataColumn("TAXRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXRate);
                this.columnTAXAmount = new global::System.Data.DataColumn("TAXAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXAmount);
                this.columnBankCharge = new global::System.Data.DataColumn("BankCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCharge);
                this.columnTotalBankCharge = new global::System.Data.DataColumn("TotalBankCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBankCharge);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnMaturityDate = new global::System.Data.DataColumn("MaturityDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaturityDate);
                this.columnTotalReceivableAmount = new global::System.Data.DataColumn("TotalReceivableAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalReceivableAmount);
                this.columnTotalInterestAmount = new global::System.Data.DataColumn("TotalInterestAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalInterestAmount);
                this.columnTotalTAXAmount = new global::System.Data.DataColumn("TotalTAXAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTAXAmount);
                this.columnTotalProfit = new global::System.Data.DataColumn("TotalProfit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalProfit);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnZoneInfoId.AllowDBNull = false;
                this.columnFDRNumber.AllowDBNull = false;
                this.columnFDRNumber.MaxLength = 150;
                this.columnFDRDate.AllowDBNull = false;
                this.columnRenewalNo.ReadOnly = true;
                this.columnRenewalNo.MaxLength = 150;
                this.columnFDRName.AllowDBNull = false;
                this.columnFDRName.MaxLength = 150;
                this.columnFDRType.ReadOnly = true;
                this.columnFDRType.MaxLength = 100;
                this.columnBankInfoId.AllowDBNull = false;
                this.columnBankName.MaxLength = 250;
                this.columnBankType.MaxLength = 50;
                this.columnBankInfoBranchDetailId.AllowDBNull = false;
                this.columnBranchName.MaxLength = 250;
                this.columnBankAccountId.AllowDBNull = false;
                this.columnProfitRecvId.AllowDBNull = false;
                this.columnInitialDeposit.AllowDBNull = false;
                this.columnFDRAmount.AllowDBNull = false;
                this.columnFDRDuration.AllowDBNull = false;
                this.columnFDRDurationType.AllowDBNull = false;
                this.columnFDRDurationType.MaxLength = 50;
                this.columnInterestRate.AllowDBNull = false;
                this.columnInterestAmount.AllowDBNull = false;
                this.columnInstallmentDuration.AllowDBNull = false;
                this.columnInstallmentDurationType.AllowDBNull = false;
                this.columnInstallmentDurationType.MaxLength = 50;
                this.columnTAXRate.AllowDBNull = false;
                this.columnTAXAmount.AllowDBNull = false;
                this.columnBankCharge.AllowDBNull = false;
                this.columnTotalBankCharge.AllowDBNull = false;
                this.columnStartDate.AllowDBNull = false;
                this.columnMaturityDate.AllowDBNull = false;
                this.columnTotalReceivableAmount.AllowDBNull = false;
                this.columnTotalInterestAmount.AllowDBNull = false;
                this.columnTotalTAXAmount.AllowDBNull = false;
                this.columnTotalProfit.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoRow NewSP_FMS_FDRInfoRow() {
                return ((SP_FMS_FDRInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_FMS_FDRInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_FMS_FDRInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_FMS_FDRInfoRowChanged != null)) {
                    this.SP_FMS_FDRInfoRowChanged(this, new SP_FMS_FDRInfoRowChangeEvent(((SP_FMS_FDRInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_FMS_FDRInfoRowChanging != null)) {
                    this.SP_FMS_FDRInfoRowChanging(this, new SP_FMS_FDRInfoRowChangeEvent(((SP_FMS_FDRInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_FMS_FDRInfoRowDeleted != null)) {
                    this.SP_FMS_FDRInfoRowDeleted(this, new SP_FMS_FDRInfoRowChangeEvent(((SP_FMS_FDRInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_FMS_FDRInfoRowDeleting != null)) {
                    this.SP_FMS_FDRInfoRowDeleting(this, new SP_FMS_FDRInfoRowChangeEvent(((SP_FMS_FDRInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_FMS_FDRInfoRow(SP_FMS_FDRInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSFDRInfo ds = new DSFDRInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_FMS_FDRInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_FMS_FDRInfoInstallmentScheduleDataTable : global::System.Data.TypedTableBase<SP_FMS_FDRInfoInstallmentScheduleRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnFixedDepositInfoId;
            
            private global::System.Data.DataColumn columnInsDate;
            
            private global::System.Data.DataColumn columnBankCharge;
            
            private global::System.Data.DataColumn columnInsAmount;
            
            private global::System.Data.DataColumn columnTax;
            
            private global::System.Data.DataColumn columnProfit;
            
            private global::System.Data.DataColumn columnInitialDeposit;
            
            private global::System.Data.DataColumn columnFDRAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoInstallmentScheduleDataTable() {
                this.TableName = "SP_FMS_FDRInfoInstallmentSchedule";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_FDRInfoInstallmentScheduleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_FMS_FDRInfoInstallmentScheduleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FixedDepositInfoIdColumn {
                get {
                    return this.columnFixedDepositInfoId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InsDateColumn {
                get {
                    return this.columnInsDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankChargeColumn {
                get {
                    return this.columnBankCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InsAmountColumn {
                get {
                    return this.columnInsAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProfitColumn {
                get {
                    return this.columnProfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InitialDepositColumn {
                get {
                    return this.columnInitialDeposit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRAmountColumn {
                get {
                    return this.columnFDRAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoInstallmentScheduleRow this[int index] {
                get {
                    return ((SP_FMS_FDRInfoInstallmentScheduleRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRInfoInstallmentScheduleRowChangeEventHandler SP_FMS_FDRInfoInstallmentScheduleRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRInfoInstallmentScheduleRowChangeEventHandler SP_FMS_FDRInfoInstallmentScheduleRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRInfoInstallmentScheduleRowChangeEventHandler SP_FMS_FDRInfoInstallmentScheduleRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRInfoInstallmentScheduleRowChangeEventHandler SP_FMS_FDRInfoInstallmentScheduleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_FMS_FDRInfoInstallmentScheduleRow(SP_FMS_FDRInfoInstallmentScheduleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoInstallmentScheduleRow AddSP_FMS_FDRInfoInstallmentScheduleRow(int FixedDepositInfoId, System.DateTime InsDate, decimal BankCharge, decimal InsAmount, decimal Tax, decimal Profit, decimal InitialDeposit, decimal FDRAmount) {
                SP_FMS_FDRInfoInstallmentScheduleRow rowSP_FMS_FDRInfoInstallmentScheduleRow = ((SP_FMS_FDRInfoInstallmentScheduleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FixedDepositInfoId,
                        InsDate,
                        BankCharge,
                        InsAmount,
                        Tax,
                        Profit,
                        InitialDeposit,
                        FDRAmount};
                rowSP_FMS_FDRInfoInstallmentScheduleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_FMS_FDRInfoInstallmentScheduleRow);
                return rowSP_FMS_FDRInfoInstallmentScheduleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoInstallmentScheduleRow FindById(int Id) {
                return ((SP_FMS_FDRInfoInstallmentScheduleRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_FMS_FDRInfoInstallmentScheduleDataTable cln = ((SP_FMS_FDRInfoInstallmentScheduleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_FMS_FDRInfoInstallmentScheduleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnFixedDepositInfoId = base.Columns["FixedDepositInfoId"];
                this.columnInsDate = base.Columns["InsDate"];
                this.columnBankCharge = base.Columns["BankCharge"];
                this.columnInsAmount = base.Columns["InsAmount"];
                this.columnTax = base.Columns["Tax"];
                this.columnProfit = base.Columns["Profit"];
                this.columnInitialDeposit = base.Columns["InitialDeposit"];
                this.columnFDRAmount = base.Columns["FDRAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnFixedDepositInfoId = new global::System.Data.DataColumn("FixedDepositInfoId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixedDepositInfoId);
                this.columnInsDate = new global::System.Data.DataColumn("InsDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsDate);
                this.columnBankCharge = new global::System.Data.DataColumn("BankCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCharge);
                this.columnInsAmount = new global::System.Data.DataColumn("InsAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsAmount);
                this.columnTax = new global::System.Data.DataColumn("Tax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnProfit = new global::System.Data.DataColumn("Profit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfit);
                this.columnInitialDeposit = new global::System.Data.DataColumn("InitialDeposit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialDeposit);
                this.columnFDRAmount = new global::System.Data.DataColumn("FDRAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRAmount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnFixedDepositInfoId.AllowDBNull = false;
                this.columnInsDate.AllowDBNull = false;
                this.columnBankCharge.AllowDBNull = false;
                this.columnInsAmount.AllowDBNull = false;
                this.columnTax.AllowDBNull = false;
                this.columnProfit.AllowDBNull = false;
                this.columnInitialDeposit.AllowDBNull = false;
                this.columnFDRAmount.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoInstallmentScheduleRow NewSP_FMS_FDRInfoInstallmentScheduleRow() {
                return ((SP_FMS_FDRInfoInstallmentScheduleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_FMS_FDRInfoInstallmentScheduleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_FMS_FDRInfoInstallmentScheduleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_FMS_FDRInfoInstallmentScheduleRowChanged != null)) {
                    this.SP_FMS_FDRInfoInstallmentScheduleRowChanged(this, new SP_FMS_FDRInfoInstallmentScheduleRowChangeEvent(((SP_FMS_FDRInfoInstallmentScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_FMS_FDRInfoInstallmentScheduleRowChanging != null)) {
                    this.SP_FMS_FDRInfoInstallmentScheduleRowChanging(this, new SP_FMS_FDRInfoInstallmentScheduleRowChangeEvent(((SP_FMS_FDRInfoInstallmentScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_FMS_FDRInfoInstallmentScheduleRowDeleted != null)) {
                    this.SP_FMS_FDRInfoInstallmentScheduleRowDeleted(this, new SP_FMS_FDRInfoInstallmentScheduleRowChangeEvent(((SP_FMS_FDRInfoInstallmentScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_FMS_FDRInfoInstallmentScheduleRowDeleting != null)) {
                    this.SP_FMS_FDRInfoInstallmentScheduleRowDeleting(this, new SP_FMS_FDRInfoInstallmentScheduleRowChangeEvent(((SP_FMS_FDRInfoInstallmentScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_FMS_FDRInfoInstallmentScheduleRow(SP_FMS_FDRInfoInstallmentScheduleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSFDRInfo ds = new DSFDRInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_FMS_FDRInfoInstallmentScheduleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_FMS_FDRRegisterDataTable : global::System.Data.TypedTableBase<SP_FMS_FDRRegisterRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnParticulars;
            
            private global::System.Data.DataColumn columnRenewalNo;
            
            private global::System.Data.DataColumn columnFDRDate;
            
            private global::System.Data.DataColumn columnFDRNumber;
            
            private global::System.Data.DataColumn columnMaturityDate;
            
            private global::System.Data.DataColumn columnFDRAmount;
            
            private global::System.Data.DataColumn columnInterestAmount;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnBankCharge;
            
            private global::System.Data.DataColumn columnDeductionTotal;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnBranchAddress;
            
            private global::System.Data.DataColumn columnInterestRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRRegisterDataTable() {
                this.TableName = "SP_FMS_FDRRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_FDRRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_FMS_FDRRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ParticularsColumn {
                get {
                    return this.columnParticulars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RenewalNoColumn {
                get {
                    return this.columnRenewalNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDateColumn {
                get {
                    return this.columnFDRDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRNumberColumn {
                get {
                    return this.columnFDRNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MaturityDateColumn {
                get {
                    return this.columnMaturityDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRAmountColumn {
                get {
                    return this.columnFDRAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestAmountColumn {
                get {
                    return this.columnInterestAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankChargeColumn {
                get {
                    return this.columnBankCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DeductionTotalColumn {
                get {
                    return this.columnDeductionTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BranchAddressColumn {
                get {
                    return this.columnBranchAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestRateColumn {
                get {
                    return this.columnInterestRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRRegisterRow this[int index] {
                get {
                    return ((SP_FMS_FDRRegisterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRRegisterRowChangeEventHandler SP_FMS_FDRRegisterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRRegisterRowChangeEventHandler SP_FMS_FDRRegisterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRRegisterRowChangeEventHandler SP_FMS_FDRRegisterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_FDRRegisterRowChangeEventHandler SP_FMS_FDRRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_FMS_FDRRegisterRow(SP_FMS_FDRRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRRegisterRow AddSP_FMS_FDRRegisterRow(string Particulars, string RenewalNo, System.DateTime FDRDate, string FDRNumber, System.DateTime MaturityDate, decimal FDRAmount, decimal InterestAmount, decimal Total, decimal TaxAmount, decimal BankCharge, decimal DeductionTotal, string BankName, string BranchName, string BranchAddress, decimal InterestRate) {
                SP_FMS_FDRRegisterRow rowSP_FMS_FDRRegisterRow = ((SP_FMS_FDRRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Particulars,
                        RenewalNo,
                        FDRDate,
                        FDRNumber,
                        MaturityDate,
                        FDRAmount,
                        InterestAmount,
                        Total,
                        TaxAmount,
                        BankCharge,
                        DeductionTotal,
                        BankName,
                        BranchName,
                        BranchAddress,
                        InterestRate};
                rowSP_FMS_FDRRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_FMS_FDRRegisterRow);
                return rowSP_FMS_FDRRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRRegisterRow FindById(int Id) {
                return ((SP_FMS_FDRRegisterRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_FMS_FDRRegisterDataTable cln = ((SP_FMS_FDRRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_FMS_FDRRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnParticulars = base.Columns["Particulars"];
                this.columnRenewalNo = base.Columns["RenewalNo"];
                this.columnFDRDate = base.Columns["FDRDate"];
                this.columnFDRNumber = base.Columns["FDRNumber"];
                this.columnMaturityDate = base.Columns["MaturityDate"];
                this.columnFDRAmount = base.Columns["FDRAmount"];
                this.columnInterestAmount = base.Columns["InterestAmount"];
                this.columnTotal = base.Columns["Total"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnBankCharge = base.Columns["BankCharge"];
                this.columnDeductionTotal = base.Columns["DeductionTotal"];
                this.columnBankName = base.Columns["BankName"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnBranchAddress = base.Columns["BranchAddress"];
                this.columnInterestRate = base.Columns["InterestRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnParticulars = new global::System.Data.DataColumn("Particulars", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParticulars);
                this.columnRenewalNo = new global::System.Data.DataColumn("RenewalNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenewalNo);
                this.columnFDRDate = new global::System.Data.DataColumn("FDRDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDate);
                this.columnFDRNumber = new global::System.Data.DataColumn("FDRNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRNumber);
                this.columnMaturityDate = new global::System.Data.DataColumn("MaturityDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaturityDate);
                this.columnFDRAmount = new global::System.Data.DataColumn("FDRAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRAmount);
                this.columnInterestAmount = new global::System.Data.DataColumn("InterestAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnBankCharge = new global::System.Data.DataColumn("BankCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCharge);
                this.columnDeductionTotal = new global::System.Data.DataColumn("DeductionTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductionTotal);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnBranchAddress = new global::System.Data.DataColumn("BranchAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchAddress);
                this.columnInterestRate = new global::System.Data.DataColumn("InterestRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnParticulars.ReadOnly = true;
                this.columnParticulars.MaxLength = 9;
                this.columnRenewalNo.MaxLength = 150;
                this.columnFDRDate.AllowDBNull = false;
                this.columnFDRNumber.AllowDBNull = false;
                this.columnFDRNumber.MaxLength = 150;
                this.columnMaturityDate.AllowDBNull = false;
                this.columnTotal.ReadOnly = true;
                this.columnDeductionTotal.ReadOnly = true;
                this.columnBankName.AllowDBNull = false;
                this.columnBankName.MaxLength = 250;
                this.columnBranchName.AllowDBNull = false;
                this.columnBranchName.MaxLength = 250;
                this.columnBranchAddress.MaxLength = 250;
                this.columnInterestRate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRRegisterRow NewSP_FMS_FDRRegisterRow() {
                return ((SP_FMS_FDRRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_FMS_FDRRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_FMS_FDRRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_FMS_FDRRegisterRowChanged != null)) {
                    this.SP_FMS_FDRRegisterRowChanged(this, new SP_FMS_FDRRegisterRowChangeEvent(((SP_FMS_FDRRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_FMS_FDRRegisterRowChanging != null)) {
                    this.SP_FMS_FDRRegisterRowChanging(this, new SP_FMS_FDRRegisterRowChangeEvent(((SP_FMS_FDRRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_FMS_FDRRegisterRowDeleted != null)) {
                    this.SP_FMS_FDRRegisterRowDeleted(this, new SP_FMS_FDRRegisterRowChangeEvent(((SP_FMS_FDRRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_FMS_FDRRegisterRowDeleting != null)) {
                    this.SP_FMS_FDRRegisterRowDeleting(this, new SP_FMS_FDRRegisterRowChangeEvent(((SP_FMS_FDRRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_FMS_FDRRegisterRow(SP_FMS_FDRRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSFDRInfo ds = new DSFDRInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_FMS_FDRRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_FMS_NewFDRforCurrentYearDataTable : global::System.Data.TypedTableBase<SP_FMS_NewFDRforCurrentYearRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnZoneInfoId;
            
            private global::System.Data.DataColumn columnFDRNumber;
            
            private global::System.Data.DataColumn columnFDRDate;
            
            private global::System.Data.DataColumn columnRenewalNo;
            
            private global::System.Data.DataColumn columnFDRName;
            
            private global::System.Data.DataColumn columnFDRType;
            
            private global::System.Data.DataColumn columnBankInfoId;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBankType;
            
            private global::System.Data.DataColumn columnBankInfoBranchDetailId;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnBankAccountId;
            
            private global::System.Data.DataColumn columnProfitRecvId;
            
            private global::System.Data.DataColumn columnInitialDeposit;
            
            private global::System.Data.DataColumn columnFDRAmount;
            
            private global::System.Data.DataColumn columnFDRDuration;
            
            private global::System.Data.DataColumn columnFDRDurationType;
            
            private global::System.Data.DataColumn columnInterestRate;
            
            private global::System.Data.DataColumn columnInterestAmount;
            
            private global::System.Data.DataColumn columnInstallmentDuration;
            
            private global::System.Data.DataColumn columnInstallmentDurationType;
            
            private global::System.Data.DataColumn columnTAXRate;
            
            private global::System.Data.DataColumn columnTAXAmount;
            
            private global::System.Data.DataColumn columnBankCharge;
            
            private global::System.Data.DataColumn columnTotalBankCharge;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnMaturityDate;
            
            private global::System.Data.DataColumn columnTotalReceivableAmount;
            
            private global::System.Data.DataColumn columnTotalInterestAmount;
            
            private global::System.Data.DataColumn columnTotalTAXAmount;
            
            private global::System.Data.DataColumn columnTotalProfit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_NewFDRforCurrentYearDataTable() {
                this.TableName = "SP_FMS_NewFDRforCurrentYear";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_NewFDRforCurrentYearDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_FMS_NewFDRforCurrentYearDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ZoneInfoIdColumn {
                get {
                    return this.columnZoneInfoId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRNumberColumn {
                get {
                    return this.columnFDRNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDateColumn {
                get {
                    return this.columnFDRDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RenewalNoColumn {
                get {
                    return this.columnRenewalNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRNameColumn {
                get {
                    return this.columnFDRName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRTypeColumn {
                get {
                    return this.columnFDRType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankInfoIdColumn {
                get {
                    return this.columnBankInfoId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankTypeColumn {
                get {
                    return this.columnBankType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankInfoBranchDetailIdColumn {
                get {
                    return this.columnBankInfoBranchDetailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankAccountIdColumn {
                get {
                    return this.columnBankAccountId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProfitRecvIdColumn {
                get {
                    return this.columnProfitRecvId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InitialDepositColumn {
                get {
                    return this.columnInitialDeposit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRAmountColumn {
                get {
                    return this.columnFDRAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDurationColumn {
                get {
                    return this.columnFDRDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDurationTypeColumn {
                get {
                    return this.columnFDRDurationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestRateColumn {
                get {
                    return this.columnInterestRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestAmountColumn {
                get {
                    return this.columnInterestAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstallmentDurationColumn {
                get {
                    return this.columnInstallmentDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstallmentDurationTypeColumn {
                get {
                    return this.columnInstallmentDurationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAXRateColumn {
                get {
                    return this.columnTAXRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAXAmountColumn {
                get {
                    return this.columnTAXAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankChargeColumn {
                get {
                    return this.columnBankCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalBankChargeColumn {
                get {
                    return this.columnTotalBankCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MaturityDateColumn {
                get {
                    return this.columnMaturityDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalReceivableAmountColumn {
                get {
                    return this.columnTotalReceivableAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalInterestAmountColumn {
                get {
                    return this.columnTotalInterestAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalTAXAmountColumn {
                get {
                    return this.columnTotalTAXAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalProfitColumn {
                get {
                    return this.columnTotalProfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_NewFDRforCurrentYearRow this[int index] {
                get {
                    return ((SP_FMS_NewFDRforCurrentYearRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_NewFDRforCurrentYearRowChangeEventHandler SP_FMS_NewFDRforCurrentYearRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_NewFDRforCurrentYearRowChangeEventHandler SP_FMS_NewFDRforCurrentYearRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_NewFDRforCurrentYearRowChangeEventHandler SP_FMS_NewFDRforCurrentYearRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_NewFDRforCurrentYearRowChangeEventHandler SP_FMS_NewFDRforCurrentYearRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_FMS_NewFDRforCurrentYearRow(SP_FMS_NewFDRforCurrentYearRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_NewFDRforCurrentYearRow AddSP_FMS_NewFDRforCurrentYearRow(
                        int ZoneInfoId, 
                        string FDRNumber, 
                        System.DateTime FDRDate, 
                        string RenewalNo, 
                        string FDRName, 
                        string FDRType, 
                        int BankInfoId, 
                        string BankName, 
                        string BankType, 
                        int BankInfoBranchDetailId, 
                        string BranchName, 
                        int BankAccountId, 
                        int ProfitRecvId, 
                        decimal InitialDeposit, 
                        decimal FDRAmount, 
                        int FDRDuration, 
                        string FDRDurationType, 
                        decimal InterestRate, 
                        decimal InterestAmount, 
                        int InstallmentDuration, 
                        string InstallmentDurationType, 
                        decimal TAXRate, 
                        decimal TAXAmount, 
                        decimal BankCharge, 
                        decimal TotalBankCharge, 
                        System.DateTime StartDate, 
                        System.DateTime MaturityDate, 
                        decimal TotalReceivableAmount, 
                        decimal TotalInterestAmount, 
                        decimal TotalTAXAmount, 
                        decimal TotalProfit) {
                SP_FMS_NewFDRforCurrentYearRow rowSP_FMS_NewFDRforCurrentYearRow = ((SP_FMS_NewFDRforCurrentYearRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ZoneInfoId,
                        FDRNumber,
                        FDRDate,
                        RenewalNo,
                        FDRName,
                        FDRType,
                        BankInfoId,
                        BankName,
                        BankType,
                        BankInfoBranchDetailId,
                        BranchName,
                        BankAccountId,
                        ProfitRecvId,
                        InitialDeposit,
                        FDRAmount,
                        FDRDuration,
                        FDRDurationType,
                        InterestRate,
                        InterestAmount,
                        InstallmentDuration,
                        InstallmentDurationType,
                        TAXRate,
                        TAXAmount,
                        BankCharge,
                        TotalBankCharge,
                        StartDate,
                        MaturityDate,
                        TotalReceivableAmount,
                        TotalInterestAmount,
                        TotalTAXAmount,
                        TotalProfit};
                rowSP_FMS_NewFDRforCurrentYearRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_FMS_NewFDRforCurrentYearRow);
                return rowSP_FMS_NewFDRforCurrentYearRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_NewFDRforCurrentYearRow FindById(int Id) {
                return ((SP_FMS_NewFDRforCurrentYearRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_FMS_NewFDRforCurrentYearDataTable cln = ((SP_FMS_NewFDRforCurrentYearDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_FMS_NewFDRforCurrentYearDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnZoneInfoId = base.Columns["ZoneInfoId"];
                this.columnFDRNumber = base.Columns["FDRNumber"];
                this.columnFDRDate = base.Columns["FDRDate"];
                this.columnRenewalNo = base.Columns["RenewalNo"];
                this.columnFDRName = base.Columns["FDRName"];
                this.columnFDRType = base.Columns["FDRType"];
                this.columnBankInfoId = base.Columns["BankInfoId"];
                this.columnBankName = base.Columns["BankName"];
                this.columnBankType = base.Columns["BankType"];
                this.columnBankInfoBranchDetailId = base.Columns["BankInfoBranchDetailId"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnBankAccountId = base.Columns["BankAccountId"];
                this.columnProfitRecvId = base.Columns["ProfitRecvId"];
                this.columnInitialDeposit = base.Columns["InitialDeposit"];
                this.columnFDRAmount = base.Columns["FDRAmount"];
                this.columnFDRDuration = base.Columns["FDRDuration"];
                this.columnFDRDurationType = base.Columns["FDRDurationType"];
                this.columnInterestRate = base.Columns["InterestRate"];
                this.columnInterestAmount = base.Columns["InterestAmount"];
                this.columnInstallmentDuration = base.Columns["InstallmentDuration"];
                this.columnInstallmentDurationType = base.Columns["InstallmentDurationType"];
                this.columnTAXRate = base.Columns["TAXRate"];
                this.columnTAXAmount = base.Columns["TAXAmount"];
                this.columnBankCharge = base.Columns["BankCharge"];
                this.columnTotalBankCharge = base.Columns["TotalBankCharge"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnMaturityDate = base.Columns["MaturityDate"];
                this.columnTotalReceivableAmount = base.Columns["TotalReceivableAmount"];
                this.columnTotalInterestAmount = base.Columns["TotalInterestAmount"];
                this.columnTotalTAXAmount = base.Columns["TotalTAXAmount"];
                this.columnTotalProfit = base.Columns["TotalProfit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnZoneInfoId = new global::System.Data.DataColumn("ZoneInfoId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneInfoId);
                this.columnFDRNumber = new global::System.Data.DataColumn("FDRNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRNumber);
                this.columnFDRDate = new global::System.Data.DataColumn("FDRDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDate);
                this.columnRenewalNo = new global::System.Data.DataColumn("RenewalNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenewalNo);
                this.columnFDRName = new global::System.Data.DataColumn("FDRName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRName);
                this.columnFDRType = new global::System.Data.DataColumn("FDRType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRType);
                this.columnBankInfoId = new global::System.Data.DataColumn("BankInfoId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankInfoId);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBankType = new global::System.Data.DataColumn("BankType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankType);
                this.columnBankInfoBranchDetailId = new global::System.Data.DataColumn("BankInfoBranchDetailId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankInfoBranchDetailId);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnBankAccountId = new global::System.Data.DataColumn("BankAccountId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccountId);
                this.columnProfitRecvId = new global::System.Data.DataColumn("ProfitRecvId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfitRecvId);
                this.columnInitialDeposit = new global::System.Data.DataColumn("InitialDeposit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialDeposit);
                this.columnFDRAmount = new global::System.Data.DataColumn("FDRAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRAmount);
                this.columnFDRDuration = new global::System.Data.DataColumn("FDRDuration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDuration);
                this.columnFDRDurationType = new global::System.Data.DataColumn("FDRDurationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDurationType);
                this.columnInterestRate = new global::System.Data.DataColumn("InterestRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestRate);
                this.columnInterestAmount = new global::System.Data.DataColumn("InterestAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestAmount);
                this.columnInstallmentDuration = new global::System.Data.DataColumn("InstallmentDuration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallmentDuration);
                this.columnInstallmentDurationType = new global::System.Data.DataColumn("InstallmentDurationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallmentDurationType);
                this.columnTAXRate = new global::System.Data.DataColumn("TAXRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXRate);
                this.columnTAXAmount = new global::System.Data.DataColumn("TAXAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXAmount);
                this.columnBankCharge = new global::System.Data.DataColumn("BankCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCharge);
                this.columnTotalBankCharge = new global::System.Data.DataColumn("TotalBankCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBankCharge);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnMaturityDate = new global::System.Data.DataColumn("MaturityDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaturityDate);
                this.columnTotalReceivableAmount = new global::System.Data.DataColumn("TotalReceivableAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalReceivableAmount);
                this.columnTotalInterestAmount = new global::System.Data.DataColumn("TotalInterestAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalInterestAmount);
                this.columnTotalTAXAmount = new global::System.Data.DataColumn("TotalTAXAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTAXAmount);
                this.columnTotalProfit = new global::System.Data.DataColumn("TotalProfit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalProfit);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnZoneInfoId.AllowDBNull = false;
                this.columnFDRNumber.AllowDBNull = false;
                this.columnFDRNumber.MaxLength = 150;
                this.columnFDRDate.ReadOnly = true;
                this.columnRenewalNo.ReadOnly = true;
                this.columnRenewalNo.MaxLength = 150;
                this.columnFDRName.AllowDBNull = false;
                this.columnFDRName.MaxLength = 150;
                this.columnFDRType.ReadOnly = true;
                this.columnFDRType.MaxLength = 100;
                this.columnBankInfoId.AllowDBNull = false;
                this.columnBankName.MaxLength = 250;
                this.columnBankType.MaxLength = 50;
                this.columnBankInfoBranchDetailId.AllowDBNull = false;
                this.columnBranchName.MaxLength = 250;
                this.columnInitialDeposit.AllowDBNull = false;
                this.columnFDRAmount.AllowDBNull = false;
                this.columnFDRDuration.AllowDBNull = false;
                this.columnFDRDurationType.AllowDBNull = false;
                this.columnFDRDurationType.MaxLength = 50;
                this.columnInterestRate.AllowDBNull = false;
                this.columnInterestAmount.AllowDBNull = false;
                this.columnInstallmentDuration.AllowDBNull = false;
                this.columnInstallmentDurationType.AllowDBNull = false;
                this.columnInstallmentDurationType.MaxLength = 50;
                this.columnTAXRate.AllowDBNull = false;
                this.columnTAXAmount.AllowDBNull = false;
                this.columnBankCharge.AllowDBNull = false;
                this.columnTotalBankCharge.AllowDBNull = false;
                this.columnStartDate.AllowDBNull = false;
                this.columnMaturityDate.AllowDBNull = false;
                this.columnTotalReceivableAmount.AllowDBNull = false;
                this.columnTotalInterestAmount.AllowDBNull = false;
                this.columnTotalTAXAmount.AllowDBNull = false;
                this.columnTotalProfit.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_NewFDRforCurrentYearRow NewSP_FMS_NewFDRforCurrentYearRow() {
                return ((SP_FMS_NewFDRforCurrentYearRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_FMS_NewFDRforCurrentYearRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_FMS_NewFDRforCurrentYearRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_FMS_NewFDRforCurrentYearRowChanged != null)) {
                    this.SP_FMS_NewFDRforCurrentYearRowChanged(this, new SP_FMS_NewFDRforCurrentYearRowChangeEvent(((SP_FMS_NewFDRforCurrentYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_FMS_NewFDRforCurrentYearRowChanging != null)) {
                    this.SP_FMS_NewFDRforCurrentYearRowChanging(this, new SP_FMS_NewFDRforCurrentYearRowChangeEvent(((SP_FMS_NewFDRforCurrentYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_FMS_NewFDRforCurrentYearRowDeleted != null)) {
                    this.SP_FMS_NewFDRforCurrentYearRowDeleted(this, new SP_FMS_NewFDRforCurrentYearRowChangeEvent(((SP_FMS_NewFDRforCurrentYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_FMS_NewFDRforCurrentYearRowDeleting != null)) {
                    this.SP_FMS_NewFDRforCurrentYearRowDeleting(this, new SP_FMS_NewFDRforCurrentYearRowChangeEvent(((SP_FMS_NewFDRforCurrentYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_FMS_NewFDRforCurrentYearRow(SP_FMS_NewFDRforCurrentYearRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSFDRInfo ds = new DSFDRInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_FMS_NewFDRforCurrentYearDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_FMS_EncashedFDRinCurrentYearDataTable : global::System.Data.TypedTableBase<SP_FMS_EncashedFDRinCurrentYearRow> {
            
            private global::System.Data.DataColumn columnParticulars;
            
            private global::System.Data.DataColumn columnRenewalNo;
            
            private global::System.Data.DataColumn columnInterestRate;
            
            private global::System.Data.DataColumn columnFDRDate;
            
            private global::System.Data.DataColumn columnFDRNumber;
            
            private global::System.Data.DataColumn columnMaturityDate;
            
            private global::System.Data.DataColumn columnFDRAmount;
            
            private global::System.Data.DataColumn columnInterestAmount;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnBankCharge;
            
            private global::System.Data.DataColumn columnDeductionTotal;
            
            private global::System.Data.DataColumn columnBankType;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnBranchAddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_EncashedFDRinCurrentYearDataTable() {
                this.TableName = "SP_FMS_EncashedFDRinCurrentYear";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_EncashedFDRinCurrentYearDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_FMS_EncashedFDRinCurrentYearDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ParticularsColumn {
                get {
                    return this.columnParticulars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RenewalNoColumn {
                get {
                    return this.columnRenewalNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestRateColumn {
                get {
                    return this.columnInterestRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDateColumn {
                get {
                    return this.columnFDRDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRNumberColumn {
                get {
                    return this.columnFDRNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MaturityDateColumn {
                get {
                    return this.columnMaturityDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRAmountColumn {
                get {
                    return this.columnFDRAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestAmountColumn {
                get {
                    return this.columnInterestAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankChargeColumn {
                get {
                    return this.columnBankCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DeductionTotalColumn {
                get {
                    return this.columnDeductionTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankTypeColumn {
                get {
                    return this.columnBankType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BranchAddressColumn {
                get {
                    return this.columnBranchAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_EncashedFDRinCurrentYearRow this[int index] {
                get {
                    return ((SP_FMS_EncashedFDRinCurrentYearRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_EncashedFDRinCurrentYearRowChangeEventHandler SP_FMS_EncashedFDRinCurrentYearRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_EncashedFDRinCurrentYearRowChangeEventHandler SP_FMS_EncashedFDRinCurrentYearRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_EncashedFDRinCurrentYearRowChangeEventHandler SP_FMS_EncashedFDRinCurrentYearRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_EncashedFDRinCurrentYearRowChangeEventHandler SP_FMS_EncashedFDRinCurrentYearRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_FMS_EncashedFDRinCurrentYearRow(SP_FMS_EncashedFDRinCurrentYearRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_EncashedFDRinCurrentYearRow AddSP_FMS_EncashedFDRinCurrentYearRow(
                        string Particulars, 
                        string RenewalNo, 
                        decimal InterestRate, 
                        System.DateTime FDRDate, 
                        string FDRNumber, 
                        System.DateTime MaturityDate, 
                        decimal FDRAmount, 
                        decimal InterestAmount, 
                        decimal Total, 
                        decimal TaxAmount, 
                        decimal BankCharge, 
                        decimal DeductionTotal, 
                        string BankType, 
                        string BankName, 
                        string BranchName, 
                        string BranchAddress) {
                SP_FMS_EncashedFDRinCurrentYearRow rowSP_FMS_EncashedFDRinCurrentYearRow = ((SP_FMS_EncashedFDRinCurrentYearRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Particulars,
                        RenewalNo,
                        InterestRate,
                        FDRDate,
                        FDRNumber,
                        MaturityDate,
                        FDRAmount,
                        InterestAmount,
                        Total,
                        TaxAmount,
                        BankCharge,
                        DeductionTotal,
                        BankType,
                        BankName,
                        BranchName,
                        BranchAddress};
                rowSP_FMS_EncashedFDRinCurrentYearRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_FMS_EncashedFDRinCurrentYearRow);
                return rowSP_FMS_EncashedFDRinCurrentYearRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_FMS_EncashedFDRinCurrentYearDataTable cln = ((SP_FMS_EncashedFDRinCurrentYearDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_FMS_EncashedFDRinCurrentYearDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnParticulars = base.Columns["Particulars"];
                this.columnRenewalNo = base.Columns["RenewalNo"];
                this.columnInterestRate = base.Columns["InterestRate"];
                this.columnFDRDate = base.Columns["FDRDate"];
                this.columnFDRNumber = base.Columns["FDRNumber"];
                this.columnMaturityDate = base.Columns["MaturityDate"];
                this.columnFDRAmount = base.Columns["FDRAmount"];
                this.columnInterestAmount = base.Columns["InterestAmount"];
                this.columnTotal = base.Columns["Total"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnBankCharge = base.Columns["BankCharge"];
                this.columnDeductionTotal = base.Columns["DeductionTotal"];
                this.columnBankType = base.Columns["BankType"];
                this.columnBankName = base.Columns["BankName"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnBranchAddress = base.Columns["BranchAddress"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnParticulars = new global::System.Data.DataColumn("Particulars", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParticulars);
                this.columnRenewalNo = new global::System.Data.DataColumn("RenewalNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenewalNo);
                this.columnInterestRate = new global::System.Data.DataColumn("InterestRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestRate);
                this.columnFDRDate = new global::System.Data.DataColumn("FDRDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDate);
                this.columnFDRNumber = new global::System.Data.DataColumn("FDRNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRNumber);
                this.columnMaturityDate = new global::System.Data.DataColumn("MaturityDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaturityDate);
                this.columnFDRAmount = new global::System.Data.DataColumn("FDRAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRAmount);
                this.columnInterestAmount = new global::System.Data.DataColumn("InterestAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnBankCharge = new global::System.Data.DataColumn("BankCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCharge);
                this.columnDeductionTotal = new global::System.Data.DataColumn("DeductionTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductionTotal);
                this.columnBankType = new global::System.Data.DataColumn("BankType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankType);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnBranchAddress = new global::System.Data.DataColumn("BranchAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchAddress);
                this.columnParticulars.ReadOnly = true;
                this.columnParticulars.MaxLength = 9;
                this.columnRenewalNo.MaxLength = 150;
                this.columnInterestRate.AllowDBNull = false;
                this.columnFDRDate.AllowDBNull = false;
                this.columnFDRNumber.AllowDBNull = false;
                this.columnFDRNumber.MaxLength = 150;
                this.columnMaturityDate.AllowDBNull = false;
                this.columnFDRAmount.AllowDBNull = false;
                this.columnTotal.ReadOnly = true;
                this.columnDeductionTotal.ReadOnly = true;
                this.columnBankType.MaxLength = 50;
                this.columnBankName.AllowDBNull = false;
                this.columnBankName.MaxLength = 250;
                this.columnBranchName.AllowDBNull = false;
                this.columnBranchName.MaxLength = 250;
                this.columnBranchAddress.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_EncashedFDRinCurrentYearRow NewSP_FMS_EncashedFDRinCurrentYearRow() {
                return ((SP_FMS_EncashedFDRinCurrentYearRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_FMS_EncashedFDRinCurrentYearRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_FMS_EncashedFDRinCurrentYearRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_FMS_EncashedFDRinCurrentYearRowChanged != null)) {
                    this.SP_FMS_EncashedFDRinCurrentYearRowChanged(this, new SP_FMS_EncashedFDRinCurrentYearRowChangeEvent(((SP_FMS_EncashedFDRinCurrentYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_FMS_EncashedFDRinCurrentYearRowChanging != null)) {
                    this.SP_FMS_EncashedFDRinCurrentYearRowChanging(this, new SP_FMS_EncashedFDRinCurrentYearRowChangeEvent(((SP_FMS_EncashedFDRinCurrentYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_FMS_EncashedFDRinCurrentYearRowDeleted != null)) {
                    this.SP_FMS_EncashedFDRinCurrentYearRowDeleted(this, new SP_FMS_EncashedFDRinCurrentYearRowChangeEvent(((SP_FMS_EncashedFDRinCurrentYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_FMS_EncashedFDRinCurrentYearRowDeleting != null)) {
                    this.SP_FMS_EncashedFDRinCurrentYearRowDeleting(this, new SP_FMS_EncashedFDRinCurrentYearRowChangeEvent(((SP_FMS_EncashedFDRinCurrentYearRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_FMS_EncashedFDRinCurrentYearRow(SP_FMS_EncashedFDRinCurrentYearRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSFDRInfo ds = new DSFDRInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_FMS_EncashedFDRinCurrentYearDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_FMS_InvestmentOnFDRDataTable : global::System.Data.TypedTableBase<SP_FMS_InvestmentOnFDRRow> {
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnFDRNumber;
            
            private global::System.Data.DataColumn columnInitialDeposit;
            
            private global::System.Data.DataColumn columnFDRAmount;
            
            private global::System.Data.DataColumn columnInterestRate;
            
            private global::System.Data.DataColumn columnFDRDate;
            
            private global::System.Data.DataColumn columnMaturityDate;
            
            private global::System.Data.DataColumn columnInterestReceivable;
            
            private global::System.Data.DataColumn columnNetReceivableAmount;
            
            private global::System.Data.DataColumn columnInstallmentDuration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDRDataTable() {
                this.TableName = "SP_FMS_InvestmentOnFDR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_InvestmentOnFDRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_FMS_InvestmentOnFDRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRNumberColumn {
                get {
                    return this.columnFDRNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InitialDepositColumn {
                get {
                    return this.columnInitialDeposit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRAmountColumn {
                get {
                    return this.columnFDRAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestRateColumn {
                get {
                    return this.columnInterestRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDateColumn {
                get {
                    return this.columnFDRDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MaturityDateColumn {
                get {
                    return this.columnMaturityDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestReceivableColumn {
                get {
                    return this.columnInterestReceivable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NetReceivableAmountColumn {
                get {
                    return this.columnNetReceivableAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstallmentDurationColumn {
                get {
                    return this.columnInstallmentDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDRRow this[int index] {
                get {
                    return ((SP_FMS_InvestmentOnFDRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_InvestmentOnFDRRowChangeEventHandler SP_FMS_InvestmentOnFDRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_InvestmentOnFDRRowChangeEventHandler SP_FMS_InvestmentOnFDRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_InvestmentOnFDRRowChangeEventHandler SP_FMS_InvestmentOnFDRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_InvestmentOnFDRRowChangeEventHandler SP_FMS_InvestmentOnFDRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_FMS_InvestmentOnFDRRow(SP_FMS_InvestmentOnFDRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDRRow AddSP_FMS_InvestmentOnFDRRow(string BankName, string BranchName, string FDRNumber, decimal InitialDeposit, decimal FDRAmount, decimal InterestRate, System.DateTime FDRDate, System.DateTime MaturityDate, decimal InterestReceivable, decimal NetReceivableAmount, int InstallmentDuration) {
                SP_FMS_InvestmentOnFDRRow rowSP_FMS_InvestmentOnFDRRow = ((SP_FMS_InvestmentOnFDRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BankName,
                        BranchName,
                        FDRNumber,
                        InitialDeposit,
                        FDRAmount,
                        InterestRate,
                        FDRDate,
                        MaturityDate,
                        InterestReceivable,
                        NetReceivableAmount,
                        InstallmentDuration};
                rowSP_FMS_InvestmentOnFDRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_FMS_InvestmentOnFDRRow);
                return rowSP_FMS_InvestmentOnFDRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_FMS_InvestmentOnFDRDataTable cln = ((SP_FMS_InvestmentOnFDRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_FMS_InvestmentOnFDRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnBankName = base.Columns["BankName"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnFDRNumber = base.Columns["FDRNumber"];
                this.columnInitialDeposit = base.Columns["InitialDeposit"];
                this.columnFDRAmount = base.Columns["FDRAmount"];
                this.columnInterestRate = base.Columns["InterestRate"];
                this.columnFDRDate = base.Columns["FDRDate"];
                this.columnMaturityDate = base.Columns["MaturityDate"];
                this.columnInterestReceivable = base.Columns["InterestReceivable"];
                this.columnNetReceivableAmount = base.Columns["NetReceivableAmount"];
                this.columnInstallmentDuration = base.Columns["InstallmentDuration"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnFDRNumber = new global::System.Data.DataColumn("FDRNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRNumber);
                this.columnInitialDeposit = new global::System.Data.DataColumn("InitialDeposit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialDeposit);
                this.columnFDRAmount = new global::System.Data.DataColumn("FDRAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRAmount);
                this.columnInterestRate = new global::System.Data.DataColumn("InterestRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestRate);
                this.columnFDRDate = new global::System.Data.DataColumn("FDRDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDate);
                this.columnMaturityDate = new global::System.Data.DataColumn("MaturityDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaturityDate);
                this.columnInterestReceivable = new global::System.Data.DataColumn("InterestReceivable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestReceivable);
                this.columnNetReceivableAmount = new global::System.Data.DataColumn("NetReceivableAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetReceivableAmount);
                this.columnInstallmentDuration = new global::System.Data.DataColumn("InstallmentDuration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallmentDuration);
                this.columnBankName.MaxLength = 250;
                this.columnBranchName.MaxLength = 250;
                this.columnFDRNumber.AllowDBNull = false;
                this.columnFDRNumber.MaxLength = 150;
                this.columnInitialDeposit.AllowDBNull = false;
                this.columnFDRAmount.AllowDBNull = false;
                this.columnInterestRate.AllowDBNull = false;
                this.columnFDRDate.ReadOnly = true;
                this.columnMaturityDate.AllowDBNull = false;
                this.columnInterestReceivable.ReadOnly = true;
                this.columnInstallmentDuration.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDRRow NewSP_FMS_InvestmentOnFDRRow() {
                return ((SP_FMS_InvestmentOnFDRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_FMS_InvestmentOnFDRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_FMS_InvestmentOnFDRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_FMS_InvestmentOnFDRRowChanged != null)) {
                    this.SP_FMS_InvestmentOnFDRRowChanged(this, new SP_FMS_InvestmentOnFDRRowChangeEvent(((SP_FMS_InvestmentOnFDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_FMS_InvestmentOnFDRRowChanging != null)) {
                    this.SP_FMS_InvestmentOnFDRRowChanging(this, new SP_FMS_InvestmentOnFDRRowChangeEvent(((SP_FMS_InvestmentOnFDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_FMS_InvestmentOnFDRRowDeleted != null)) {
                    this.SP_FMS_InvestmentOnFDRRowDeleted(this, new SP_FMS_InvestmentOnFDRRowChangeEvent(((SP_FMS_InvestmentOnFDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_FMS_InvestmentOnFDRRowDeleting != null)) {
                    this.SP_FMS_InvestmentOnFDRRowDeleting(this, new SP_FMS_InvestmentOnFDRRowChangeEvent(((SP_FMS_InvestmentOnFDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_FMS_InvestmentOnFDRRow(SP_FMS_InvestmentOnFDRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSFDRInfo ds = new DSFDRInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_FMS_InvestmentOnFDRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_FMS_InvestmentOnFDREncashmentDataTable : global::System.Data.TypedTableBase<SP_FMS_InvestmentOnFDREncashmentRow> {
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnFDRNumber;
            
            private global::System.Data.DataColumn columnInitialDeposit;
            
            private global::System.Data.DataColumn columnFDRAmount;
            
            private global::System.Data.DataColumn columnInterestRate;
            
            private global::System.Data.DataColumn columnFDRDate;
            
            private global::System.Data.DataColumn columnMaturityDate;
            
            private global::System.Data.DataColumn columnInterestReceivable;
            
            private global::System.Data.DataColumn columnNetReceivableAmount;
            
            private global::System.Data.DataColumn columnInstallmentDuration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDREncashmentDataTable() {
                this.TableName = "SP_FMS_InvestmentOnFDREncashment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_InvestmentOnFDREncashmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_FMS_InvestmentOnFDREncashmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRNumberColumn {
                get {
                    return this.columnFDRNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InitialDepositColumn {
                get {
                    return this.columnInitialDeposit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRAmountColumn {
                get {
                    return this.columnFDRAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestRateColumn {
                get {
                    return this.columnInterestRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FDRDateColumn {
                get {
                    return this.columnFDRDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MaturityDateColumn {
                get {
                    return this.columnMaturityDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterestReceivableColumn {
                get {
                    return this.columnInterestReceivable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NetReceivableAmountColumn {
                get {
                    return this.columnNetReceivableAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstallmentDurationColumn {
                get {
                    return this.columnInstallmentDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDREncashmentRow this[int index] {
                get {
                    return ((SP_FMS_InvestmentOnFDREncashmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_InvestmentOnFDREncashmentRowChangeEventHandler SP_FMS_InvestmentOnFDREncashmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_InvestmentOnFDREncashmentRowChangeEventHandler SP_FMS_InvestmentOnFDREncashmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_InvestmentOnFDREncashmentRowChangeEventHandler SP_FMS_InvestmentOnFDREncashmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_FMS_InvestmentOnFDREncashmentRowChangeEventHandler SP_FMS_InvestmentOnFDREncashmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_FMS_InvestmentOnFDREncashmentRow(SP_FMS_InvestmentOnFDREncashmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDREncashmentRow AddSP_FMS_InvestmentOnFDREncashmentRow(string BankName, string BranchName, string FDRNumber, decimal InitialDeposit, decimal FDRAmount, decimal InterestRate, System.DateTime FDRDate, System.DateTime MaturityDate, decimal InterestReceivable, decimal NetReceivableAmount, int InstallmentDuration) {
                SP_FMS_InvestmentOnFDREncashmentRow rowSP_FMS_InvestmentOnFDREncashmentRow = ((SP_FMS_InvestmentOnFDREncashmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BankName,
                        BranchName,
                        FDRNumber,
                        InitialDeposit,
                        FDRAmount,
                        InterestRate,
                        FDRDate,
                        MaturityDate,
                        InterestReceivable,
                        NetReceivableAmount,
                        InstallmentDuration};
                rowSP_FMS_InvestmentOnFDREncashmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_FMS_InvestmentOnFDREncashmentRow);
                return rowSP_FMS_InvestmentOnFDREncashmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_FMS_InvestmentOnFDREncashmentDataTable cln = ((SP_FMS_InvestmentOnFDREncashmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_FMS_InvestmentOnFDREncashmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnBankName = base.Columns["BankName"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnFDRNumber = base.Columns["FDRNumber"];
                this.columnInitialDeposit = base.Columns["InitialDeposit"];
                this.columnFDRAmount = base.Columns["FDRAmount"];
                this.columnInterestRate = base.Columns["InterestRate"];
                this.columnFDRDate = base.Columns["FDRDate"];
                this.columnMaturityDate = base.Columns["MaturityDate"];
                this.columnInterestReceivable = base.Columns["InterestReceivable"];
                this.columnNetReceivableAmount = base.Columns["NetReceivableAmount"];
                this.columnInstallmentDuration = base.Columns["InstallmentDuration"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnFDRNumber = new global::System.Data.DataColumn("FDRNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRNumber);
                this.columnInitialDeposit = new global::System.Data.DataColumn("InitialDeposit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialDeposit);
                this.columnFDRAmount = new global::System.Data.DataColumn("FDRAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRAmount);
                this.columnInterestRate = new global::System.Data.DataColumn("InterestRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestRate);
                this.columnFDRDate = new global::System.Data.DataColumn("FDRDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDRDate);
                this.columnMaturityDate = new global::System.Data.DataColumn("MaturityDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaturityDate);
                this.columnInterestReceivable = new global::System.Data.DataColumn("InterestReceivable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestReceivable);
                this.columnNetReceivableAmount = new global::System.Data.DataColumn("NetReceivableAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetReceivableAmount);
                this.columnInstallmentDuration = new global::System.Data.DataColumn("InstallmentDuration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstallmentDuration);
                this.columnBankName.MaxLength = 250;
                this.columnBranchName.MaxLength = 250;
                this.columnFDRNumber.AllowDBNull = false;
                this.columnFDRNumber.MaxLength = 150;
                this.columnInitialDeposit.AllowDBNull = false;
                this.columnFDRAmount.AllowDBNull = false;
                this.columnInterestRate.AllowDBNull = false;
                this.columnFDRDate.ReadOnly = true;
                this.columnMaturityDate.AllowDBNull = false;
                this.columnInterestReceivable.ReadOnly = true;
                this.columnInstallmentDuration.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDREncashmentRow NewSP_FMS_InvestmentOnFDREncashmentRow() {
                return ((SP_FMS_InvestmentOnFDREncashmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_FMS_InvestmentOnFDREncashmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_FMS_InvestmentOnFDREncashmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_FMS_InvestmentOnFDREncashmentRowChanged != null)) {
                    this.SP_FMS_InvestmentOnFDREncashmentRowChanged(this, new SP_FMS_InvestmentOnFDREncashmentRowChangeEvent(((SP_FMS_InvestmentOnFDREncashmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_FMS_InvestmentOnFDREncashmentRowChanging != null)) {
                    this.SP_FMS_InvestmentOnFDREncashmentRowChanging(this, new SP_FMS_InvestmentOnFDREncashmentRowChangeEvent(((SP_FMS_InvestmentOnFDREncashmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_FMS_InvestmentOnFDREncashmentRowDeleted != null)) {
                    this.SP_FMS_InvestmentOnFDREncashmentRowDeleted(this, new SP_FMS_InvestmentOnFDREncashmentRowChangeEvent(((SP_FMS_InvestmentOnFDREncashmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_FMS_InvestmentOnFDREncashmentRowDeleting != null)) {
                    this.SP_FMS_InvestmentOnFDREncashmentRowDeleting(this, new SP_FMS_InvestmentOnFDREncashmentRowChangeEvent(((SP_FMS_InvestmentOnFDREncashmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_FMS_InvestmentOnFDREncashmentRow(SP_FMS_InvestmentOnFDREncashmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSFDRInfo ds = new DSFDRInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_FMS_InvestmentOnFDREncashmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_FMS_FDRInfoRow : global::System.Data.DataRow {
            
            private SP_FMS_FDRInfoDataTable tableSP_FMS_FDRInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_FDRInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_FMS_FDRInfo = ((SP_FMS_FDRInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfo.IdColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ZoneInfoId {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfo.ZoneInfoIdColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.ZoneInfoIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRNumber {
                get {
                    return ((string)(this[this.tableSP_FMS_FDRInfo.FDRNumberColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.FDRNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FDRDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_FDRInfo.FDRDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.FDRDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RenewalNo {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_FDRInfo.RenewalNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RenewalNo\' in table \'SP_FMS_FDRInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.RenewalNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRName {
                get {
                    return ((string)(this[this.tableSP_FMS_FDRInfo.FDRNameColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.FDRNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRType {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_FDRInfo.FDRTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FDRType\' in table \'SP_FMS_FDRInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.FDRTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BankInfoId {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfo.BankInfoIdColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.BankInfoIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_FDRInfo.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'SP_FMS_FDRInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BankType {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_FDRInfo.BankTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankType\' in table \'SP_FMS_FDRInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.BankTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BankInfoBranchDetailId {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfo.BankInfoBranchDetailIdColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.BankInfoBranchDetailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BranchName {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_FDRInfo.BranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchName\' in table \'SP_FMS_FDRInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BankAccountId {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfo.BankAccountIdColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.BankAccountIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ProfitRecvId {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfo.ProfitRecvIdColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.ProfitRecvIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InitialDeposit {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.InitialDepositColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.InitialDepositColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FDRAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.FDRAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.FDRAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FDRDuration {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfo.FDRDurationColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.FDRDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRDurationType {
                get {
                    return ((string)(this[this.tableSP_FMS_FDRInfo.FDRDurationTypeColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.FDRDurationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestRate {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.InterestRateColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.InterestRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.InterestAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.InterestAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int InstallmentDuration {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfo.InstallmentDurationColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.InstallmentDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InstallmentDurationType {
                get {
                    return ((string)(this[this.tableSP_FMS_FDRInfo.InstallmentDurationTypeColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.InstallmentDurationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TAXRate {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.TAXRateColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.TAXRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TAXAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.TAXAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.TAXAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BankCharge {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.BankChargeColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.BankChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalBankCharge {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.TotalBankChargeColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.TotalBankChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime StartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_FDRInfo.StartDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime MaturityDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_FDRInfo.MaturityDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.MaturityDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalReceivableAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.TotalReceivableAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.TotalReceivableAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalInterestAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.TotalInterestAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.TotalInterestAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalTAXAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.TotalTAXAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.TotalTAXAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalProfit {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfo.TotalProfitColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfo.TotalProfitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRenewalNoNull() {
                return this.IsNull(this.tableSP_FMS_FDRInfo.RenewalNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRenewalNoNull() {
                this[this.tableSP_FMS_FDRInfo.RenewalNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFDRTypeNull() {
                return this.IsNull(this.tableSP_FMS_FDRInfo.FDRTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFDRTypeNull() {
                this[this.tableSP_FMS_FDRInfo.FDRTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableSP_FMS_FDRInfo.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableSP_FMS_FDRInfo.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankTypeNull() {
                return this.IsNull(this.tableSP_FMS_FDRInfo.BankTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankTypeNull() {
                this[this.tableSP_FMS_FDRInfo.BankTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBranchNameNull() {
                return this.IsNull(this.tableSP_FMS_FDRInfo.BranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBranchNameNull() {
                this[this.tableSP_FMS_FDRInfo.BranchNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_FMS_FDRInfoInstallmentScheduleRow : global::System.Data.DataRow {
            
            private SP_FMS_FDRInfoInstallmentScheduleDataTable tableSP_FMS_FDRInfoInstallmentSchedule;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_FDRInfoInstallmentScheduleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_FMS_FDRInfoInstallmentSchedule = ((SP_FMS_FDRInfoInstallmentScheduleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfoInstallmentSchedule.IdColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfoInstallmentSchedule.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FixedDepositInfoId {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRInfoInstallmentSchedule.FixedDepositInfoIdColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfoInstallmentSchedule.FixedDepositInfoIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime InsDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_FDRInfoInstallmentSchedule.InsDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfoInstallmentSchedule.InsDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BankCharge {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfoInstallmentSchedule.BankChargeColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfoInstallmentSchedule.BankChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InsAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfoInstallmentSchedule.InsAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfoInstallmentSchedule.InsAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Tax {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfoInstallmentSchedule.TaxColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfoInstallmentSchedule.TaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Profit {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfoInstallmentSchedule.ProfitColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfoInstallmentSchedule.ProfitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InitialDeposit {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfoInstallmentSchedule.InitialDepositColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfoInstallmentSchedule.InitialDepositColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FDRAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRInfoInstallmentSchedule.FDRAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRInfoInstallmentSchedule.FDRAmountColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_FMS_FDRRegisterRow : global::System.Data.DataRow {
            
            private SP_FMS_FDRRegisterDataTable tableSP_FMS_FDRRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_FDRRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_FMS_FDRRegister = ((SP_FMS_FDRRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableSP_FMS_FDRRegister.IdColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Particulars {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_FDRRegister.ParticularsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Particulars\' in table \'SP_FMS_FDRRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.ParticularsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RenewalNo {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_FDRRegister.RenewalNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RenewalNo\' in table \'SP_FMS_FDRRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.RenewalNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FDRDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_FDRRegister.FDRDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.FDRDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRNumber {
                get {
                    return ((string)(this[this.tableSP_FMS_FDRRegister.FDRNumberColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.FDRNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime MaturityDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_FDRRegister.MaturityDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.MaturityDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FDRAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_FDRRegister.FDRAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FDRAmount\' in table \'SP_FMS_FDRRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.FDRAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_FDRRegister.InterestAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterestAmount\' in table \'SP_FMS_FDRRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.InterestAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_FDRRegister.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'SP_FMS_FDRRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_FDRRegister.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'SP_FMS_FDRRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BankCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_FDRRegister.BankChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCharge\' in table \'SP_FMS_FDRRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.BankChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DeductionTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_FDRRegister.DeductionTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeductionTotal\' in table \'SP_FMS_FDRRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.DeductionTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BankName {
                get {
                    return ((string)(this[this.tableSP_FMS_FDRRegister.BankNameColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BranchName {
                get {
                    return ((string)(this[this.tableSP_FMS_FDRRegister.BranchNameColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BranchAddress {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_FDRRegister.BranchAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchAddress\' in table \'SP_FMS_FDRRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.BranchAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestRate {
                get {
                    return ((decimal)(this[this.tableSP_FMS_FDRRegister.InterestRateColumn]));
                }
                set {
                    this[this.tableSP_FMS_FDRRegister.InterestRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsParticularsNull() {
                return this.IsNull(this.tableSP_FMS_FDRRegister.ParticularsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetParticularsNull() {
                this[this.tableSP_FMS_FDRRegister.ParticularsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRenewalNoNull() {
                return this.IsNull(this.tableSP_FMS_FDRRegister.RenewalNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRenewalNoNull() {
                this[this.tableSP_FMS_FDRRegister.RenewalNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFDRAmountNull() {
                return this.IsNull(this.tableSP_FMS_FDRRegister.FDRAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFDRAmountNull() {
                this[this.tableSP_FMS_FDRRegister.FDRAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInterestAmountNull() {
                return this.IsNull(this.tableSP_FMS_FDRRegister.InterestAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInterestAmountNull() {
                this[this.tableSP_FMS_FDRRegister.InterestAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalNull() {
                return this.IsNull(this.tableSP_FMS_FDRRegister.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalNull() {
                this[this.tableSP_FMS_FDRRegister.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tableSP_FMS_FDRRegister.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTaxAmountNull() {
                this[this.tableSP_FMS_FDRRegister.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankChargeNull() {
                return this.IsNull(this.tableSP_FMS_FDRRegister.BankChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankChargeNull() {
                this[this.tableSP_FMS_FDRRegister.BankChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDeductionTotalNull() {
                return this.IsNull(this.tableSP_FMS_FDRRegister.DeductionTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDeductionTotalNull() {
                this[this.tableSP_FMS_FDRRegister.DeductionTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBranchAddressNull() {
                return this.IsNull(this.tableSP_FMS_FDRRegister.BranchAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBranchAddressNull() {
                this[this.tableSP_FMS_FDRRegister.BranchAddressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_FMS_NewFDRforCurrentYearRow : global::System.Data.DataRow {
            
            private SP_FMS_NewFDRforCurrentYearDataTable tableSP_FMS_NewFDRforCurrentYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_NewFDRforCurrentYearRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_FMS_NewFDRforCurrentYear = ((SP_FMS_NewFDRforCurrentYearDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableSP_FMS_NewFDRforCurrentYear.IdColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ZoneInfoId {
                get {
                    return ((int)(this[this.tableSP_FMS_NewFDRforCurrentYear.ZoneInfoIdColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.ZoneInfoIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRNumber {
                get {
                    return ((string)(this[this.tableSP_FMS_NewFDRforCurrentYear.FDRNumberColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.FDRNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FDRDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_FMS_NewFDRforCurrentYear.FDRDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FDRDate\' in table \'SP_FMS_NewFDRforCurrentYear\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.FDRDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RenewalNo {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_NewFDRforCurrentYear.RenewalNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RenewalNo\' in table \'SP_FMS_NewFDRforCurrentYear\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.RenewalNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRName {
                get {
                    return ((string)(this[this.tableSP_FMS_NewFDRforCurrentYear.FDRNameColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.FDRNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRType {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_NewFDRforCurrentYear.FDRTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FDRType\' in table \'SP_FMS_NewFDRforCurrentYear\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.FDRTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BankInfoId {
                get {
                    return ((int)(this[this.tableSP_FMS_NewFDRforCurrentYear.BankInfoIdColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.BankInfoIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_NewFDRforCurrentYear.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'SP_FMS_NewFDRforCurrentYear\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BankType {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_NewFDRforCurrentYear.BankTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankType\' in table \'SP_FMS_NewFDRforCurrentYear\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.BankTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BankInfoBranchDetailId {
                get {
                    return ((int)(this[this.tableSP_FMS_NewFDRforCurrentYear.BankInfoBranchDetailIdColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.BankInfoBranchDetailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BranchName {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_NewFDRforCurrentYear.BranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchName\' in table \'SP_FMS_NewFDRforCurrentYear\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BankAccountId {
                get {
                    try {
                        return ((int)(this[this.tableSP_FMS_NewFDRforCurrentYear.BankAccountIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccountId\' in table \'SP_FMS_NewFDRforCurrentYear\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.BankAccountIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ProfitRecvId {
                get {
                    try {
                        return ((int)(this[this.tableSP_FMS_NewFDRforCurrentYear.ProfitRecvIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfitRecvId\' in table \'SP_FMS_NewFDRforCurrentYear\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.ProfitRecvIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InitialDeposit {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.InitialDepositColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.InitialDepositColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FDRAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.FDRAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.FDRAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int FDRDuration {
                get {
                    return ((int)(this[this.tableSP_FMS_NewFDRforCurrentYear.FDRDurationColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.FDRDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRDurationType {
                get {
                    return ((string)(this[this.tableSP_FMS_NewFDRforCurrentYear.FDRDurationTypeColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.FDRDurationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestRate {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.InterestRateColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.InterestRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.InterestAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.InterestAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int InstallmentDuration {
                get {
                    return ((int)(this[this.tableSP_FMS_NewFDRforCurrentYear.InstallmentDurationColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.InstallmentDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InstallmentDurationType {
                get {
                    return ((string)(this[this.tableSP_FMS_NewFDRforCurrentYear.InstallmentDurationTypeColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.InstallmentDurationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TAXRate {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.TAXRateColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.TAXRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TAXAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.TAXAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.TAXAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BankCharge {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.BankChargeColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.BankChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalBankCharge {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.TotalBankChargeColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.TotalBankChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime StartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_NewFDRforCurrentYear.StartDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime MaturityDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_NewFDRforCurrentYear.MaturityDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.MaturityDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalReceivableAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.TotalReceivableAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.TotalReceivableAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalInterestAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.TotalInterestAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.TotalInterestAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalTAXAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.TotalTAXAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.TotalTAXAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TotalProfit {
                get {
                    return ((decimal)(this[this.tableSP_FMS_NewFDRforCurrentYear.TotalProfitColumn]));
                }
                set {
                    this[this.tableSP_FMS_NewFDRforCurrentYear.TotalProfitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFDRDateNull() {
                return this.IsNull(this.tableSP_FMS_NewFDRforCurrentYear.FDRDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFDRDateNull() {
                this[this.tableSP_FMS_NewFDRforCurrentYear.FDRDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRenewalNoNull() {
                return this.IsNull(this.tableSP_FMS_NewFDRforCurrentYear.RenewalNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRenewalNoNull() {
                this[this.tableSP_FMS_NewFDRforCurrentYear.RenewalNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFDRTypeNull() {
                return this.IsNull(this.tableSP_FMS_NewFDRforCurrentYear.FDRTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFDRTypeNull() {
                this[this.tableSP_FMS_NewFDRforCurrentYear.FDRTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableSP_FMS_NewFDRforCurrentYear.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableSP_FMS_NewFDRforCurrentYear.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankTypeNull() {
                return this.IsNull(this.tableSP_FMS_NewFDRforCurrentYear.BankTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankTypeNull() {
                this[this.tableSP_FMS_NewFDRforCurrentYear.BankTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBranchNameNull() {
                return this.IsNull(this.tableSP_FMS_NewFDRforCurrentYear.BranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBranchNameNull() {
                this[this.tableSP_FMS_NewFDRforCurrentYear.BranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankAccountIdNull() {
                return this.IsNull(this.tableSP_FMS_NewFDRforCurrentYear.BankAccountIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankAccountIdNull() {
                this[this.tableSP_FMS_NewFDRforCurrentYear.BankAccountIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProfitRecvIdNull() {
                return this.IsNull(this.tableSP_FMS_NewFDRforCurrentYear.ProfitRecvIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProfitRecvIdNull() {
                this[this.tableSP_FMS_NewFDRforCurrentYear.ProfitRecvIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_FMS_EncashedFDRinCurrentYearRow : global::System.Data.DataRow {
            
            private SP_FMS_EncashedFDRinCurrentYearDataTable tableSP_FMS_EncashedFDRinCurrentYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_EncashedFDRinCurrentYearRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_FMS_EncashedFDRinCurrentYear = ((SP_FMS_EncashedFDRinCurrentYearDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Particulars {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.ParticularsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Particulars\' in table \'SP_FMS_EncashedFDRinCurrentYear\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.ParticularsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RenewalNo {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.RenewalNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RenewalNo\' in table \'SP_FMS_EncashedFDRinCurrentYear\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.RenewalNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestRate {
                get {
                    return ((decimal)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.InterestRateColumn]));
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.InterestRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FDRDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.FDRDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.FDRDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRNumber {
                get {
                    return ((string)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.FDRNumberColumn]));
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.FDRNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime MaturityDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.MaturityDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.MaturityDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FDRAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.FDRAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.FDRAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.InterestAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterestAmount\' in table \'SP_FMS_EncashedFDRinCurrentYear\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.InterestAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'SP_FMS_EncashedFDRinCurrentYear\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'SP_FMS_EncashedFDRinCurrentYear\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BankCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.BankChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCharge\' in table \'SP_FMS_EncashedFDRinCurrentYear\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.BankChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DeductionTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.DeductionTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeductionTotal\' in table \'SP_FMS_EncashedFDRinCurrentYear\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.DeductionTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BankType {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.BankTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankType\' in table \'SP_FMS_EncashedFDRinCurrentYear\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.BankTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BankName {
                get {
                    return ((string)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.BankNameColumn]));
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BranchName {
                get {
                    return ((string)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.BranchNameColumn]));
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BranchAddress {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_EncashedFDRinCurrentYear.BranchAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchAddress\' in table \'SP_FMS_EncashedFDRinCurrentYear\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_EncashedFDRinCurrentYear.BranchAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsParticularsNull() {
                return this.IsNull(this.tableSP_FMS_EncashedFDRinCurrentYear.ParticularsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetParticularsNull() {
                this[this.tableSP_FMS_EncashedFDRinCurrentYear.ParticularsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRenewalNoNull() {
                return this.IsNull(this.tableSP_FMS_EncashedFDRinCurrentYear.RenewalNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRenewalNoNull() {
                this[this.tableSP_FMS_EncashedFDRinCurrentYear.RenewalNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInterestAmountNull() {
                return this.IsNull(this.tableSP_FMS_EncashedFDRinCurrentYear.InterestAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInterestAmountNull() {
                this[this.tableSP_FMS_EncashedFDRinCurrentYear.InterestAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalNull() {
                return this.IsNull(this.tableSP_FMS_EncashedFDRinCurrentYear.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalNull() {
                this[this.tableSP_FMS_EncashedFDRinCurrentYear.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tableSP_FMS_EncashedFDRinCurrentYear.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTaxAmountNull() {
                this[this.tableSP_FMS_EncashedFDRinCurrentYear.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankChargeNull() {
                return this.IsNull(this.tableSP_FMS_EncashedFDRinCurrentYear.BankChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankChargeNull() {
                this[this.tableSP_FMS_EncashedFDRinCurrentYear.BankChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDeductionTotalNull() {
                return this.IsNull(this.tableSP_FMS_EncashedFDRinCurrentYear.DeductionTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDeductionTotalNull() {
                this[this.tableSP_FMS_EncashedFDRinCurrentYear.DeductionTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankTypeNull() {
                return this.IsNull(this.tableSP_FMS_EncashedFDRinCurrentYear.BankTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankTypeNull() {
                this[this.tableSP_FMS_EncashedFDRinCurrentYear.BankTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBranchAddressNull() {
                return this.IsNull(this.tableSP_FMS_EncashedFDRinCurrentYear.BranchAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBranchAddressNull() {
                this[this.tableSP_FMS_EncashedFDRinCurrentYear.BranchAddressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_FMS_InvestmentOnFDRRow : global::System.Data.DataRow {
            
            private SP_FMS_InvestmentOnFDRDataTable tableSP_FMS_InvestmentOnFDR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_InvestmentOnFDRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_FMS_InvestmentOnFDR = ((SP_FMS_InvestmentOnFDRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_InvestmentOnFDR.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'SP_FMS_InvestmentOnFDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BranchName {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_InvestmentOnFDR.BranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchName\' in table \'SP_FMS_InvestmentOnFDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRNumber {
                get {
                    return ((string)(this[this.tableSP_FMS_InvestmentOnFDR.FDRNumberColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.FDRNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InitialDeposit {
                get {
                    return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDR.InitialDepositColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.InitialDepositColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FDRAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDR.FDRAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.FDRAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestRate {
                get {
                    return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDR.InterestRateColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.InterestRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FDRDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_FMS_InvestmentOnFDR.FDRDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FDRDate\' in table \'SP_FMS_InvestmentOnFDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.FDRDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime MaturityDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_InvestmentOnFDR.MaturityDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.MaturityDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestReceivable {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDR.InterestReceivableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterestReceivable\' in table \'SP_FMS_InvestmentOnFDR\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.InterestReceivableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NetReceivableAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDR.NetReceivableAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetReceivableAmount\' in table \'SP_FMS_InvestmentOnFDR\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.NetReceivableAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int InstallmentDuration {
                get {
                    return ((int)(this[this.tableSP_FMS_InvestmentOnFDR.InstallmentDurationColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDR.InstallmentDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDR.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableSP_FMS_InvestmentOnFDR.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBranchNameNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDR.BranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBranchNameNull() {
                this[this.tableSP_FMS_InvestmentOnFDR.BranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFDRDateNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDR.FDRDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFDRDateNull() {
                this[this.tableSP_FMS_InvestmentOnFDR.FDRDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInterestReceivableNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDR.InterestReceivableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInterestReceivableNull() {
                this[this.tableSP_FMS_InvestmentOnFDR.InterestReceivableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNetReceivableAmountNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDR.NetReceivableAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNetReceivableAmountNull() {
                this[this.tableSP_FMS_InvestmentOnFDR.NetReceivableAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_FMS_InvestmentOnFDREncashmentRow : global::System.Data.DataRow {
            
            private SP_FMS_InvestmentOnFDREncashmentDataTable tableSP_FMS_InvestmentOnFDREncashment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_FMS_InvestmentOnFDREncashmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_FMS_InvestmentOnFDREncashment = ((SP_FMS_InvestmentOnFDREncashmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_InvestmentOnFDREncashment.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'SP_FMS_InvestmentOnFDREncashment\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BranchName {
                get {
                    try {
                        return ((string)(this[this.tableSP_FMS_InvestmentOnFDREncashment.BranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchName\' in table \'SP_FMS_InvestmentOnFDREncashment\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FDRNumber {
                get {
                    return ((string)(this[this.tableSP_FMS_InvestmentOnFDREncashment.FDRNumberColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.FDRNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InitialDeposit {
                get {
                    return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDREncashment.InitialDepositColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.InitialDepositColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FDRAmount {
                get {
                    return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDREncashment.FDRAmountColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.FDRAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestRate {
                get {
                    return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDREncashment.InterestRateColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.InterestRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FDRDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_FMS_InvestmentOnFDREncashment.FDRDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FDRDate\' in table \'SP_FMS_InvestmentOnFDREncashment\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.FDRDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime MaturityDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_FMS_InvestmentOnFDREncashment.MaturityDateColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.MaturityDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal InterestReceivable {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDREncashment.InterestReceivableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterestReceivable\' in table \'SP_FMS_InvestmentOnFDREncashm" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.InterestReceivableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NetReceivableAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_FMS_InvestmentOnFDREncashment.NetReceivableAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetReceivableAmount\' in table \'SP_FMS_InvestmentOnFDREncash" +
                                "ment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.NetReceivableAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int InstallmentDuration {
                get {
                    return ((int)(this[this.tableSP_FMS_InvestmentOnFDREncashment.InstallmentDurationColumn]));
                }
                set {
                    this[this.tableSP_FMS_InvestmentOnFDREncashment.InstallmentDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDREncashment.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableSP_FMS_InvestmentOnFDREncashment.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBranchNameNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDREncashment.BranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBranchNameNull() {
                this[this.tableSP_FMS_InvestmentOnFDREncashment.BranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFDRDateNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDREncashment.FDRDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFDRDateNull() {
                this[this.tableSP_FMS_InvestmentOnFDREncashment.FDRDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInterestReceivableNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDREncashment.InterestReceivableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInterestReceivableNull() {
                this[this.tableSP_FMS_InvestmentOnFDREncashment.InterestReceivableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNetReceivableAmountNull() {
                return this.IsNull(this.tableSP_FMS_InvestmentOnFDREncashment.NetReceivableAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNetReceivableAmountNull() {
                this[this.tableSP_FMS_InvestmentOnFDREncashment.NetReceivableAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_FMS_FDRInfoRowChangeEvent : global::System.EventArgs {
            
            private SP_FMS_FDRInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoRowChangeEvent(SP_FMS_FDRInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_FMS_FDRInfoInstallmentScheduleRowChangeEvent : global::System.EventArgs {
            
            private SP_FMS_FDRInfoInstallmentScheduleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoInstallmentScheduleRowChangeEvent(SP_FMS_FDRInfoInstallmentScheduleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRInfoInstallmentScheduleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_FMS_FDRRegisterRowChangeEvent : global::System.EventArgs {
            
            private SP_FMS_FDRRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRRegisterRowChangeEvent(SP_FMS_FDRRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_FDRRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_FMS_NewFDRforCurrentYearRowChangeEvent : global::System.EventArgs {
            
            private SP_FMS_NewFDRforCurrentYearRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_NewFDRforCurrentYearRowChangeEvent(SP_FMS_NewFDRforCurrentYearRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_NewFDRforCurrentYearRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_FMS_EncashedFDRinCurrentYearRowChangeEvent : global::System.EventArgs {
            
            private SP_FMS_EncashedFDRinCurrentYearRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_EncashedFDRinCurrentYearRowChangeEvent(SP_FMS_EncashedFDRinCurrentYearRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_EncashedFDRinCurrentYearRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_FMS_InvestmentOnFDRRowChangeEvent : global::System.EventArgs {
            
            private SP_FMS_InvestmentOnFDRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDRRowChangeEvent(SP_FMS_InvestmentOnFDRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_FMS_InvestmentOnFDREncashmentRowChangeEvent : global::System.EventArgs {
            
            private SP_FMS_InvestmentOnFDREncashmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDREncashmentRowChangeEvent(SP_FMS_InvestmentOnFDREncashmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_FMS_InvestmentOnFDREncashmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace BEPZA_MEDICAL.Web.Reports.FMS.DataSet.DSFDRInfoTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_FMS_FDRInfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_FMS_FDRInfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_FMS_FDRInfo";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("ZoneInfoId", "ZoneInfoId");
            tableMapping.ColumnMappings.Add("FDRNumber", "FDRNumber");
            tableMapping.ColumnMappings.Add("FDRDate", "FDRDate");
            tableMapping.ColumnMappings.Add("RenewalNo", "RenewalNo");
            tableMapping.ColumnMappings.Add("FDRName", "FDRName");
            tableMapping.ColumnMappings.Add("FDRType", "FDRType");
            tableMapping.ColumnMappings.Add("BankInfoId", "BankInfoId");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("BankType", "BankType");
            tableMapping.ColumnMappings.Add("BankInfoBranchDetailId", "BankInfoBranchDetailId");
            tableMapping.ColumnMappings.Add("BranchName", "BranchName");
            tableMapping.ColumnMappings.Add("BankAccountId", "BankAccountId");
            tableMapping.ColumnMappings.Add("ProfitRecvId", "ProfitRecvId");
            tableMapping.ColumnMappings.Add("InitialDeposit", "InitialDeposit");
            tableMapping.ColumnMappings.Add("FDRAmount", "FDRAmount");
            tableMapping.ColumnMappings.Add("FDRDuration", "FDRDuration");
            tableMapping.ColumnMappings.Add("FDRDurationType", "FDRDurationType");
            tableMapping.ColumnMappings.Add("InterestRate", "InterestRate");
            tableMapping.ColumnMappings.Add("InterestAmount", "InterestAmount");
            tableMapping.ColumnMappings.Add("InstallmentDuration", "InstallmentDuration");
            tableMapping.ColumnMappings.Add("InstallmentDurationType", "InstallmentDurationType");
            tableMapping.ColumnMappings.Add("TAXRate", "TAXRate");
            tableMapping.ColumnMappings.Add("TAXAmount", "TAXAmount");
            tableMapping.ColumnMappings.Add("BankCharge", "BankCharge");
            tableMapping.ColumnMappings.Add("TotalBankCharge", "TotalBankCharge");
            tableMapping.ColumnMappings.Add("StartDate", "StartDate");
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate");
            tableMapping.ColumnMappings.Add("TotalReceivableAmount", "TotalReceivableAmount");
            tableMapping.ColumnMappings.Add("TotalInterestAmount", "TotalInterestAmount");
            tableMapping.ColumnMappings.Add("TotalTAXAmount", "TotalTAXAmount");
            tableMapping.ColumnMappings.Add("TotalProfit", "TotalProfit");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_FMS_FDRInfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zoneList", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FDRNo", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FDRDateFrom", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FDRDateTo", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterestRateFrom", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterestRateTo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BranchId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankType", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSFDRInfo.SP_FMS_FDRInfoDataTable dataTable, string zoneList, string FDRNo, global::System.Nullable<global::System.DateTime> FDRDateFrom, global::System.Nullable<global::System.DateTime> FDRDateTo, global::System.Nullable<decimal> InterestRateFrom, global::System.Nullable<decimal> InterestRateTo, global::System.Nullable<int> BankId, global::System.Nullable<int> BranchId, string BankType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((zoneList == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(zoneList));
            }
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(FDRNo));
            }
            if ((FDRDateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(FDRDateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FDRDateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(FDRDateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InterestRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((decimal)(InterestRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((InterestRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((decimal)(InterestRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((BankId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(BankId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(BranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((BankType == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(BankType));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSFDRInfo.SP_FMS_FDRInfoDataTable GetData(string zoneList, string FDRNo, global::System.Nullable<global::System.DateTime> FDRDateFrom, global::System.Nullable<global::System.DateTime> FDRDateTo, global::System.Nullable<decimal> InterestRateFrom, global::System.Nullable<decimal> InterestRateTo, global::System.Nullable<int> BankId, global::System.Nullable<int> BranchId, string BankType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((zoneList == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(zoneList));
            }
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(FDRNo));
            }
            if ((FDRDateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(FDRDateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FDRDateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(FDRDateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InterestRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((decimal)(InterestRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((InterestRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((decimal)(InterestRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((BankId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(BankId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(BranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((BankType == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(BankType));
            }
            DSFDRInfo.SP_FMS_FDRInfoDataTable dataTable = new DSFDRInfo.SP_FMS_FDRInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_FMS_FDRInfoInstallmentScheduleTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_FMS_FDRInfoInstallmentScheduleTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_FMS_FDRInfoInstallmentSchedule";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("FixedDepositInfoId", "FixedDepositInfoId");
            tableMapping.ColumnMappings.Add("InsDate", "InsDate");
            tableMapping.ColumnMappings.Add("BankCharge", "BankCharge");
            tableMapping.ColumnMappings.Add("InsAmount", "InsAmount");
            tableMapping.ColumnMappings.Add("Tax", "Tax");
            tableMapping.ColumnMappings.Add("Profit", "Profit");
            tableMapping.ColumnMappings.Add("InitialDeposit", "InitialDeposit");
            tableMapping.ColumnMappings.Add("FDRAmount", "FDRAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_FMS_FDRInfoInstallmentSchedule";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FixedDepositInfo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSFDRInfo.SP_FMS_FDRInfoInstallmentScheduleDataTable dataTable, global::System.Nullable<int> FixedDepositInfo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FixedDepositInfo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(FixedDepositInfo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSFDRInfo.SP_FMS_FDRInfoInstallmentScheduleDataTable GetData(global::System.Nullable<int> FixedDepositInfo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FixedDepositInfo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(FixedDepositInfo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DSFDRInfo.SP_FMS_FDRInfoInstallmentScheduleDataTable dataTable = new DSFDRInfo.SP_FMS_FDRInfoInstallmentScheduleDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_FMS_FDRRegisterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_FMS_FDRRegisterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_FMS_FDRRegister";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Particulars", "Particulars");
            tableMapping.ColumnMappings.Add("RenewalNo", "RenewalNo");
            tableMapping.ColumnMappings.Add("FDRDate", "FDRDate");
            tableMapping.ColumnMappings.Add("FDRNumber", "FDRNumber");
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate");
            tableMapping.ColumnMappings.Add("FDRAmount", "FDRAmount");
            tableMapping.ColumnMappings.Add("InterestAmount", "InterestAmount");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("TaxAmount", "TaxAmount");
            tableMapping.ColumnMappings.Add("BankCharge", "BankCharge");
            tableMapping.ColumnMappings.Add("DeductionTotal", "DeductionTotal");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("BranchName", "BranchName");
            tableMapping.ColumnMappings.Add("BranchAddress", "BranchAddress");
            tableMapping.ColumnMappings.Add("InterestRate", "InterestRate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_FMS_FDRRegister";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FDRNo", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSFDRInfo.SP_FMS_FDRRegisterDataTable dataTable, string FDRNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FDRNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSFDRInfo.SP_FMS_FDRRegisterDataTable GetData(string FDRNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FDRNo));
            }
            DSFDRInfo.SP_FMS_FDRRegisterDataTable dataTable = new DSFDRInfo.SP_FMS_FDRRegisterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_FMS_NewFDRforCurrentYearTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_FMS_NewFDRforCurrentYearTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_FMS_NewFDRforCurrentYear";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("ZoneInfoId", "ZoneInfoId");
            tableMapping.ColumnMappings.Add("FDRNumber", "FDRNumber");
            tableMapping.ColumnMappings.Add("FDRDate", "FDRDate");
            tableMapping.ColumnMappings.Add("RenewalNo", "RenewalNo");
            tableMapping.ColumnMappings.Add("FDRName", "FDRName");
            tableMapping.ColumnMappings.Add("FDRType", "FDRType");
            tableMapping.ColumnMappings.Add("BankInfoId", "BankInfoId");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("BankType", "BankType");
            tableMapping.ColumnMappings.Add("BankInfoBranchDetailId", "BankInfoBranchDetailId");
            tableMapping.ColumnMappings.Add("BranchName", "BranchName");
            tableMapping.ColumnMappings.Add("BankAccountId", "BankAccountId");
            tableMapping.ColumnMappings.Add("ProfitRecvId", "ProfitRecvId");
            tableMapping.ColumnMappings.Add("InitialDeposit", "InitialDeposit");
            tableMapping.ColumnMappings.Add("FDRAmount", "FDRAmount");
            tableMapping.ColumnMappings.Add("FDRDuration", "FDRDuration");
            tableMapping.ColumnMappings.Add("FDRDurationType", "FDRDurationType");
            tableMapping.ColumnMappings.Add("InterestRate", "InterestRate");
            tableMapping.ColumnMappings.Add("InterestAmount", "InterestAmount");
            tableMapping.ColumnMappings.Add("InstallmentDuration", "InstallmentDuration");
            tableMapping.ColumnMappings.Add("InstallmentDurationType", "InstallmentDurationType");
            tableMapping.ColumnMappings.Add("TAXRate", "TAXRate");
            tableMapping.ColumnMappings.Add("TAXAmount", "TAXAmount");
            tableMapping.ColumnMappings.Add("BankCharge", "BankCharge");
            tableMapping.ColumnMappings.Add("TotalBankCharge", "TotalBankCharge");
            tableMapping.ColumnMappings.Add("StartDate", "StartDate");
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate");
            tableMapping.ColumnMappings.Add("TotalReceivableAmount", "TotalReceivableAmount");
            tableMapping.ColumnMappings.Add("TotalInterestAmount", "TotalInterestAmount");
            tableMapping.ColumnMappings.Add("TotalTAXAmount", "TotalTAXAmount");
            tableMapping.ColumnMappings.Add("TotalProfit", "TotalProfit");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_FMS_NewFDRforCurrentYear";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zoneList", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FDRNo", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@financialYearId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterestRateFrom", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterestRateTo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BranchId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankType", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSFDRInfo.SP_FMS_NewFDRforCurrentYearDataTable dataTable, string zoneList, string FDRNo, global::System.Nullable<int> financialYearId, global::System.Nullable<decimal> InterestRateFrom, global::System.Nullable<decimal> InterestRateTo, global::System.Nullable<int> BankId, global::System.Nullable<int> BranchId, string BankType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((zoneList == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(zoneList));
            }
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(FDRNo));
            }
            if ((financialYearId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(financialYearId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((InterestRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(InterestRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InterestRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((decimal)(InterestRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((BankId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(BankId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((BranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(BranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BankType == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(BankType));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSFDRInfo.SP_FMS_NewFDRforCurrentYearDataTable GetData(string zoneList, string FDRNo, global::System.Nullable<int> financialYearId, global::System.Nullable<decimal> InterestRateFrom, global::System.Nullable<decimal> InterestRateTo, global::System.Nullable<int> BankId, global::System.Nullable<int> BranchId, string BankType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((zoneList == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(zoneList));
            }
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(FDRNo));
            }
            if ((financialYearId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(financialYearId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((InterestRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(InterestRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InterestRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((decimal)(InterestRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((BankId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(BankId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((BranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(BranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BankType == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(BankType));
            }
            DSFDRInfo.SP_FMS_NewFDRforCurrentYearDataTable dataTable = new DSFDRInfo.SP_FMS_NewFDRforCurrentYearDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_FMS_EncashedFDRinCurrentYearTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_FMS_EncashedFDRinCurrentYearTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_FMS_EncashedFDRinCurrentYear";
            tableMapping.ColumnMappings.Add("Particulars", "Particulars");
            tableMapping.ColumnMappings.Add("RenewalNo", "RenewalNo");
            tableMapping.ColumnMappings.Add("InterestRate", "InterestRate");
            tableMapping.ColumnMappings.Add("FDRDate", "FDRDate");
            tableMapping.ColumnMappings.Add("FDRNumber", "FDRNumber");
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate");
            tableMapping.ColumnMappings.Add("FDRAmount", "FDRAmount");
            tableMapping.ColumnMappings.Add("InterestAmount", "InterestAmount");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("TaxAmount", "TaxAmount");
            tableMapping.ColumnMappings.Add("BankCharge", "BankCharge");
            tableMapping.ColumnMappings.Add("DeductionTotal", "DeductionTotal");
            tableMapping.ColumnMappings.Add("BankType", "BankType");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("BranchName", "BranchName");
            tableMapping.ColumnMappings.Add("BranchAddress", "BranchAddress");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_FMS_EncashedFDRinCurrentYear";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinancialYearId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BranchId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankType", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSFDRInfo.SP_FMS_EncashedFDRinCurrentYearDataTable dataTable, global::System.Nullable<int> FinancialYearId, global::System.Nullable<int> BankId, global::System.Nullable<int> BranchId, string BankType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FinancialYearId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(FinancialYearId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BankId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(BankId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((BranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(BranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((BankType == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(BankType));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSFDRInfo.SP_FMS_EncashedFDRinCurrentYearDataTable GetData(global::System.Nullable<int> FinancialYearId, global::System.Nullable<int> BankId, global::System.Nullable<int> BranchId, string BankType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FinancialYearId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(FinancialYearId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BankId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(BankId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((BranchId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(BranchId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((BankType == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(BankType));
            }
            DSFDRInfo.SP_FMS_EncashedFDRinCurrentYearDataTable dataTable = new DSFDRInfo.SP_FMS_EncashedFDRinCurrentYearDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_FMS_InvestmentOnFDRTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_FMS_InvestmentOnFDRTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_FMS_InvestmentOnFDR";
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("BranchName", "BranchName");
            tableMapping.ColumnMappings.Add("FDRNumber", "FDRNumber");
            tableMapping.ColumnMappings.Add("InitialDeposit", "InitialDeposit");
            tableMapping.ColumnMappings.Add("FDRAmount", "FDRAmount");
            tableMapping.ColumnMappings.Add("InterestRate", "InterestRate");
            tableMapping.ColumnMappings.Add("FDRDate", "FDRDate");
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate");
            tableMapping.ColumnMappings.Add("InterestReceivable", "InterestReceivable");
            tableMapping.ColumnMappings.Add("NetReceivableAmount", "NetReceivableAmount");
            tableMapping.ColumnMappings.Add("InstallmentDuration", "InstallmentDuration");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_FMS_InvestmentOnFDR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FDRNo", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterestRateFrom", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterestRateTo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSFDRInfo.SP_FMS_InvestmentOnFDRDataTable dataTable, string FDRNo, global::System.Nullable<global::System.DateTime> Date, global::System.Nullable<decimal> InterestRateFrom, global::System.Nullable<decimal> InterestRateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FDRNo));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((InterestRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(InterestRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((InterestRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(InterestRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSFDRInfo.SP_FMS_InvestmentOnFDRDataTable GetData(string FDRNo, global::System.Nullable<global::System.DateTime> Date, global::System.Nullable<decimal> InterestRateFrom, global::System.Nullable<decimal> InterestRateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FDRNo));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((InterestRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(InterestRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((InterestRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(InterestRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            DSFDRInfo.SP_FMS_InvestmentOnFDRDataTable dataTable = new DSFDRInfo.SP_FMS_InvestmentOnFDRDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_FMS_InvestmentOnFDREncashmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_FMS_InvestmentOnFDREncashmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_FMS_InvestmentOnFDREncashment";
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("BranchName", "BranchName");
            tableMapping.ColumnMappings.Add("FDRNumber", "FDRNumber");
            tableMapping.ColumnMappings.Add("InitialDeposit", "InitialDeposit");
            tableMapping.ColumnMappings.Add("FDRAmount", "FDRAmount");
            tableMapping.ColumnMappings.Add("InterestRate", "InterestRate");
            tableMapping.ColumnMappings.Add("FDRDate", "FDRDate");
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate");
            tableMapping.ColumnMappings.Add("InterestReceivable", "InterestReceivable");
            tableMapping.ColumnMappings.Add("NetReceivableAmount", "NetReceivableAmount");
            tableMapping.ColumnMappings.Add("InstallmentDuration", "InstallmentDuration");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_FMS_InvestmentOnFDREncashment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FDRNo", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterestRateFrom", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterestRateTo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSFDRInfo.SP_FMS_InvestmentOnFDREncashmentDataTable dataTable, string FDRNo, global::System.Nullable<global::System.DateTime> Date, global::System.Nullable<decimal> InterestRateFrom, global::System.Nullable<decimal> InterestRateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FDRNo));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((InterestRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(InterestRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((InterestRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(InterestRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSFDRInfo.SP_FMS_InvestmentOnFDREncashmentDataTable GetData(string FDRNo, global::System.Nullable<global::System.DateTime> Date, global::System.Nullable<decimal> InterestRateFrom, global::System.Nullable<decimal> InterestRateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FDRNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FDRNo));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((InterestRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(InterestRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((InterestRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(InterestRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            DSFDRInfo.SP_FMS_InvestmentOnFDREncashmentDataTable dataTable = new DSFDRInfo.SP_FMS_InvestmentOnFDREncashmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DSFDRInfo dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DSFDRInfo dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DSFDRInfo dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DSFDRInfo dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591