@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.ApplicantInfoViewModel

<div class="GroupBox" id="InterView">
    <div class="header" style="width: 50%; float:left; text-align:center; margin-left:16%">
            <h2>Admit Card</h2>
            <h3>@Html.Encode(Model.ZoneName)</h3>
            <p>@Html.Encode(Model.ZoneAddress)</p>
    </div>
    <div class="rightalign" style="width: 20%; float:right; margin-right: 8%">
        <span class="field">
            <div class="portrait-box">
                <span id="portrait-holder" class="applicant-img-preview">
                    @if (Model.Attachment != null)
                    {
                        <img id="mainPortrait" alt="Applicant Photo" height="140" width="180" src="data:image;base64,@System.Convert.ToBase64String(Model.Attachment)" />
                    }
                    <img id="previewImg" class="applicant-img-preview" src="#" alt="" />

                </span>

            </div>
        </span>
    </div>
    <div class="clear">
    </div>
    <div class="row">
        <span class="label">
           <label>Roll No.</label>
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.RollNo, new { @class = "read-only", @readonly = true })
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.ApplicantNameE)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.ApplicantNameE, new { @class = "read-only", @readonly = true })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.DateOfBirth)
        </span><span class="field">
            @Html.TextBoxFor(model => model.DateOfBirth, "{0:dd-MM-yyyy}", new { @class = "read-only", @readonly = true })
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.ApplicantNameB)
        </span><span class="field">
            @Html.TextBoxFor(model => model.ApplicantNameB, new { @class = "read-only", @readonly = true })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.PlaceOfBirth)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.PlaceOfBirth, new { @class = "read-only", @readonly = true })
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.FatherName)
        </span><span class="field">
            @Html.TextBoxFor(model => model.FatherName, new { @class = "read-only", @readonly = true })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.MobNo)
        </span><span class="field">
            @Html.TextBoxFor(model => model.MobNo, new { @class = "read-only", @readonly = true })
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.MotherName)
        </span><span class="field">
            @Html.TextBoxFor(model => model.MotherName, new { @class = "read-only", @readonly = true })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.Email, new { @class = "read-only", @readonly = true })
        </span><span class="field">
            @Html.TextBoxFor(model => model.Email, new { @class = "read-only", @readonly = true })
        </span>
    </div>
</div>
<div class="button-crude fixedAddButton">
    <a href="#" class="Button btn-success" id="btnPrintPreview" onclick="getPrint('InterView')">Preview</a>
</div>

<script>
    //Generating Pop-up Print Preview page
    function getPrint(print_area) {
        //Creating new page
        var pp = window.open();
        var doctype = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">';

        //pp.document.write(doctype);
        var htm = '<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD><title>Print Preview</title>'

        pp.document.write(htm);
        //var css = '<LINK href=' + '"<%= Url.Content("~/Content/css/PStyles.css") %>"' + ' type="text/css" rel="stylesheet" type="text/css" >';
        //pp.document.write(css);

        var sitecss = '<LINK href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" >';
        pp.document.write(sitecss);

        var gridcss = '<LINK href="@Url.Content("~/Content/grid.css")" rel="stylesheet" type="text/css" />';
        pp.document.write(gridcss);

        var reportcss = '<LINK href="@Url.Content("~/Content/report.css")"  rel="stylesheet" type="text/css" />';
        pp.document.write(reportcss);

        pp.document.write('<body MS_POSITIONING="GridLayout" bottomMargin="0" leftMargin="1" topMargin="0" rightMargin="1">');
        //Adding form Tag
        pp.document.write('<form  method="post">');
        //Creating two buttons Print and Close within a table
        //pp.document.write('<TABLE width=100%><TR><TD></TD></TR><TR><TD align=right><INPUT ID="PRINT" type="button" value="Print" onclick="javascript:location.reload(true);window.print();"><INPUT ID="CLOSE" type="button" value="Close" onclick="window.close();"></TD></TR><TR><TD></TD></TR></TABLE>');
        pp.document.write('<TABLE width=100%><TR><TD></TD></TR><TR><TD align=right><a href="#" class="button" onclick="javascript:window.print();window.close();"><span>Print</span></a><a class="button" href="#" onclick="window.close();"><span>Close</span></a></TD></TR><TR><TD></TD></TR></TABLE>');

        pp.document.write('<div class="border"></div>');
        //Writing print area of the calling page
        pp.document.write(document.getElementById(print_area).innerHTML);
        pp.document.write('</form></body></HTML>');

        pp.document.getElementById('pager').innerHTML = "";
        pp.document.getElementById('button').innerHTML = "";
        pp.document.close(htm);
        //$('#pager').removeClass('pager');

        return false;

    }
</script>

