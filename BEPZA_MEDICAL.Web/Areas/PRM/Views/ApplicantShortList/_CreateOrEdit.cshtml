@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.ApplicantShortListViewModel
@using BEPZA_MEDICAL.Web.Helpers

<div class="GroupBox">
    <div class="row">
        <span class="label">
            @Html.HiddenFor(m => m.strMode)
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.IsSubmit)
            @Html.LabelFor(model => model.JobAdvertisementInfoId)

            <label class="required-field">*</label>
        </span>
        <span class="field">
            @if (Model.strMode == "Edit")
            {   @Html.HiddenFor(model => model.JobAdvertisementInfoId)
                @Html.TextBoxFor(model => model.JobAdvertisementCode, new { @class = "read-only", @readonly = true })
            }
            else
            {
                @Html.DropDownListFor(model => model.JobAdvertisementInfoId, Model.JobAdvertisementInfoList, @String.Format("{0}", Content.DDLOptionalLabel()))
            }

        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.Date)
            <label class="required-field">
                *
            </label>
        </span>
        <span class="field">
            @Html.EditorFor(model => model.Date)
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.HiddenFor(model => model.EmployeeId)
            @Html.LabelFor(model => model.EmployeeName)
            <label class="required-field">
                *
            </label>
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.EmployeeName, new { @class = "read-only", @readonly = true })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.DesignationName)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.DesignationName, new { @class = "read-only", @readonly = true })
        </span>
    </div>

</div>
<div class="clear"></div>

<fieldset>
    <legend>Short List of Applicant Information </legend>
    <fieldset style=" margin-left: 10px">
        <legend>Job Post Information </legend>
        <div class="row" align="center">
            <div style="width: 90%">
                <table id="grid" class="contenttable" width="50%">
                    <thead>
                        <tr>
                            <th width="5%" align="center">
                                Select
                            </th>
                            <th width="10%" align="center">
                                Job Post Name
                            </th>
                            <th width="20%" align="center">
                                Department Name
                            </th>
                            <th width="20%" align="center">
                                Section Name
                            </th>
                            <th width="10%" align="center">
                                No. Of Post
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ if (Model.strMode == "Edit") { Html.RenderPartial("_JobPost", Model); }}
                    </tbody>
                </table>
            </div>
        </div>
    </fieldset>


    @* Search List Criteria *@
    <fieldset>
        <legend>
            Sort List Criteria
        </legend>
        <div class="row">
            <span class="label-right">
                @Html.LabelFor(model => model.DegreeLevel)
            </span>
            <span class="field">
                @Html.DropDownListFor(model => model.DegreeLevel, Model.DegreeLevelList, @String.Format("{0}", Content.DDLOptionalLabel()))
            </span>
        </div>
            <div class="row">
                <span class="label-right">
                    @Html.LabelFor(model => model.CgpaScopeLogic)
                </span>
                <span class="field">
                    @Html.DropDownListFor(model => model.CgpaScopeLogic, Model.CgpaScopeLogicList, @String.Format("{0}", Content.DDLOptionalLabel()))
                </span>
                <span class="field" style="width:20%">
                    @Html.TextBoxFor(model => model.CGPA)
                </span>
                <span class="label" style="width:30%; display: none">
                    @Html.CheckBoxFor(m => m.IsChecked, new { @class = "qchk"})
                    @Html.LabelFor(m=>m.IsChecked,"Sort List According to Recruitment Qualification")
                </span>
            </div>
            <div class="row">
                <span class="label-right">
                    @Html.LabelFor(model => model.ExperienceScopeLogic)
                </span>
                <span class="field">
                    @Html.DropDownListFor(model => model.ExperienceScopeLogic, Model.ExperienceScopeLogicList, @String.Format("{0}", Content.DDLOptionalLabel()))
                </span>
                <span class="field" style="width:20%">
                    @Html.TextBoxFor(model => model.YearOfExperience)
                </span>
               
            </div>

        <div class="button-crude fixedAddButton" style="text-align: right;">
            <input id="addItem" type="button" value="Add" />
        </div>
        <div class="clear">
        </div>
        <div class="clear">
        </div>
        <fieldset style=" margin-left: 10px">
            <legend>Applicant Information</legend>

            <div class="row" align="center">
                <div style="width: 100%">
                    <table class="tblApplicantList contenttable custom-grid">
                        <thead>
                            <tr>
                                <th width="10%" align="center">
                                    <input type="checkbox" class="chkAll" name="chk" /> Check All
                                </th>
                                <th width="10%" align="center">
                                    Job Post Name
                                </th>
                                <th width="15%" align="center">
                                    Applicant Name
                                </th>
                                <th width="15%" align="center">
                                    Father Name
                                </th>
                                <th width="15%" align="center">
                                    Mother Name
                                </th>
                                <th width="8%" align="center">
                                    Date of Birth
                                </th>
                                <th width="15%" align="center">
                                    NID
                                </th>
                                <th width="8%" align="center">
                                    Details View
                                </th>
                                @*<th width="3%" align="center">
                                    Remove
                                </th>*@
                            </tr>
                        </thead>
                        <tbody>
                            @{ if (Model.strMode == "Edit") { Html.RenderPartial("_Details", Model); }}
                        </tbody>
                    </table>
                </div>
            </div>
        </fieldset>
    </fieldset>
</fieldset>


<div class="GroupBox">
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.Comments)
        </span>
        <span class="field">
            @Html.TextAreaFor(model => model.Comments)
        </span>

        <div class="clear"></div>
    </div>
    <div class="row">
        <span class="label">
            @Html.CheckBoxFor(model => model.IsAddAttachment, new { onclick = "disableUpload();" })
            @Html.LabelFor(model => model.IsAddAttachment)
        </span>
        <span class="field">
            <div id="divFileAttach">
                @*<span id="spAttachment" class="label-right">
                        @Html.LabelFor(model => model.Attachment)
                    </span>*@

                @Html.HiddenFor(model => model.Attachment)
                @Html.HiddenFor(model => model.FileName)
                <input type="file" name="Attachment" id="Attachment" />
                <a href="@Model.FilePath" visible="true" runat="server" target="_blank">@Model.FileName</a>
            </div>
        </span>

    </div>
</div>


<div class="clear">
</div>


<script type="text/javascript">
    $(function () {
        var Url = window.location.href;
        $("#btnClear").live("click", function (event) {
            event.preventDefault();
            window.location.href = Url;
        });
    });

    $(document).ready(function () {
        showErrMsg();
        disableUpload();
    });

    function disableUpload() {
        var IsSelect = $('#IsAddAttachment').attr('checked');
        if (IsSelect) {
            $('#File').show();
            //$('#spAttachment').show();
            $('#divFileAttach').show();
        }
        else {
            $('#File').hide();
            // $('#spAttachment').hide();
            $('#divFileAttach').hide();
        }
    }

    function showErrMsg() {
        if ('@Model.errClass' == "success" && '@Model.IsError' == "0") {
            $('input[name="btnSave"]').hide();
        }
    }

    $('#btnSubmit').live('click', function () {
        $('#IsSubmit').attr('value', true);
    })

</script>

<script type="text/javascript">
    $('#JobAdvertisementInfoId').live("change", function (e) {
        $("#message").empty();
        $('#grid tbody').empty();
        var jobAdId = $(this).val();
        getJobPost(jobAdId);
    });

    var loadEmpUrl = "@Url.Action("GetJobPost")";
    function getJobPost(jobAdId) {
        if (jobAdId != "" && jobAdId != undefined) {
            //$("#ErrorMessage").html("");
            $.ajax({
                type: "GET",
                url: loadEmpUrl,
                data: { jobAdId: jobAdId },
                success: (function (result) {
                    $("#grid tbody").html(result);
                })
            });
        }
        // else
        //  $("#ErrorMessage").show().html("<b> Required Requisition Information</b>").css("color", "red");
    }

    $("#Date").live('change', function () {
        $("#message").empty();
        var cDate = new Date();
        var giveDate = new Date($('#Date').val());

        if (cDate < giveDate) {
            // Do something
            $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Short list date can not be greater than current date. </span>  </div> ");
            $('#Date').val('');
            return;
        }

    })

</script>


<script type="text/javascript">

    $(document).ready(function () {

        // var table_one = [];
        var table_two = [];
        $(".tblApplicantList tbody tr").each(function () {
            var temp_str = $(this).find('input.appDesignationId').val();
            //alert(temp_str);
            var index = $.inArray(temp_str, table_two);

            if (index < 0) {
                table_two.push(temp_str);
            }

        });

        $("#grid tbody tr").each(function () {
            var temp_string = $(this).find('input').val();

            if ($.inArray(temp_string, table_two) >= 0) {
                // code for true condition
                //alert("found ");
                $(this).find('input:checkbox').attr('checked', true);
            } else {
                // code for false condition
                //  alert("not fount ");
                $(this).find('input:checkbox').attr('checked', false);
            }
            //table_one.push(temp_string);
        });

    });
</script>

<script type="text/javascript">
    $(function () {

        //required qualification checker
        var reqQualFlag = false;
        $(".qchk").live('click', function () {
            if ($(this).attr('checked')) {
                reqQualFlag = true;
            }
            else {
                reqQualFlag = false;
            }
        });
        //End required qualification checker


        @*var RequisitionInfo = new Array();
        var addRequisitionInfo = "@Url.Action("AddedApplicantInfo")";

        $(".rchk").live('click', function () {
            if ($(this).attr('checked')) {
                RequisitionInfo.push($(this).val());
                RequisitionInfo.push($("#strMode").val());
            }
            else {
                var index = RequisitionInfo.indexOf($(this).val());
                RequisitionInfo.splice(index, 1);
            }

            console.log(RequisitionInfo);
        });*@

        ////New
        var jobPostDesigId = '';

        ////only one checkbox select
        $(".rchk").live('click', function () {
            if ($(this).attr('checked')) {
                jobPostDesigId = $(this).val();

                // uncheck other chekbox
                $('input.rchk').not(this).attr('checked', false);
            } else {
                jobPostDesigId = '';
            }

        });
        ////End New
 
        //All Check Option
        $(".chkAll").live('click', function () {
            if ($(this).attr('checked')) {
                $(".rchkFinal2").attr('checked', $(this).attr('checked'));
            }
            else {
                $(".rchkFinal2").attr('checked', false);
            }
        });
        // End All Check

        $('#addItem').live('click', function (e) {
            e.preventDefault();
            $("#message").empty();
            $("#JobAdvertisementInfoId").removeClass('border-red');

            $('#tblApplicantList tbody').empty();

            var jobAdInfoId = $("#JobAdvertisementInfoId").val();
            var expLogic = $("#ExperienceScopeLogic").val();
            var yearOfExp = $("#YearOfExperience").val();
            var cgpLogic = $("#CgpaScopeLogic").val();
            var cgp = $("#CGPA").val();
            var degree = $("#DegreeLevel").val();

            if (jobAdInfoId == null || jobAdInfoId == "") {
                $("#JobAdvertisementInfoId").addClass('border-red');
                $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Please, select Advertisement Code.</span>  </div> ");
                return;
            }

            var JobPostCount = $('#grid tbody tr').length;
            if (JobPostCount <= 0) {
                $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Job Post not found.</span>  </div> ");
                return;
            }
            var mode = $("#strMode").val();

            //var PostingEmp = new Array();
            //function logArrayElements(element, index, array) {
            //    PostingEmp.push({ 'DesignationId': element });
            //}

            //RequisitionInfo.forEach(logArrayElements);


            var url = '@Url.Action("AddedApplicantInfo", "ApplicantShortList")';
            //if (PostingEmp.length > 0) {
            if (jobPostDesigId > 0 && jobPostDesigId != '') {
                $.ajax({
                    type: "POST",
                    url: url,
                    cache: false,
                    data: {
                        //'jobPosts': PostingEmp,
                        'jobPostDesigId': jobPostDesigId,
                        'jobAdId': jobAdInfoId,
                        'strMode': mode,
                        'expLogic': expLogic,
                        'yearOfExp': yearOfExp,
                        'cgpLogic': cgpLogic,
                        'cgp': cgp,
                        'reqQualFlag': reqQualFlag,
                        'degree': degree
                        
                    },
                    success: (function (result) {
                        $(".tblApplicantList tbody").html(result);
                    })
                });
            }
       
        });

    });

    //function RemoveDb(el, id, url) {
    //    if (id == 0 || id == undefined) {
    //        $(el).parent().parent().remove();
    //    }
    //    else {
    //        $.ajax({
    //            url: url,
    //            type: 'POST',
    //            dataType: 'json',
    //            data: JSON.stringify({ Id: id }),
    //            contentType: "application/json; charset=utf-8",
    //            error: function () {
    //                $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> System Error!</span>  </div> ");
    //            },
    //            success: function (result) {
    //                $(el).parent().parent().remove();
    //            }
    //        });
    //    }
    //}

</script>

@*Applicant Info*@

<div id="divApplicantInfo">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white;
        padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>


<script type="text/javascript">

    $(document).ready(function () {
        $("#divApplicantInfo").dialog({ autoOpen: false, modal: true, height: 600, width: 900, title: 'Applicant Information', beforeclose: function (event, ui) { Closing(); } });
    });

    function ViewApplicantInfo(el, applicantId) {
        var url = '@Url.Action("ViewApplicantInfo", "ApplicantShortList")';
        if (applicantId > 0) {
            $.ajax({
                url: url,
                type: 'POST',
                data: { id: applicantId },
                error: function () {
                    alert('System is unable to load data please try again.');
                },
                success: function (result) {
                    $('#divApplicantInfo').html(result);
                }
            });

            $("#divApplicantInfo").dialog('open');
            return false;
        }
    }

    function Closing() {

    }

</script>


@*End Applicant Info*@


<script type="text/javascript">
    $(document).ready(function () {
        $("form").submit(function () {
            $("#message").empty();
            if ($('#JobAdvertisementInfoId').val() == '' || $('#JobAdvertisementInfoId').val() == null) {
                $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Please fill up the red marked field(s)</span>  </div> ");
                return false;
            }

            if ($('#Date').val() == '' || $('#Date').val() == null) {
                $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Please fill up the red marked field(s)</span>  </div> ");
                return false;
            }

            var selectedAppCount = $('.tblApplicantList').find('input[type="checkbox"]:checked').length;
            if (selectedAppCount == 0 || selectedAppCount < 0) {
                $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span>Please, select at least one Applicant.</span> </div> ");
                return false;
            }
        });
    });
</script>
