@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.OfficeEquipmentFurnitureUsagesInfoViewModel

@{
    Layout = null;
}
<div class="GroupBox">
    <div class="row">
        <span class="label">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.EmployeeId)
            @Html.LabelFor(model => model.EmpId)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.EmpId, new { @class = "read-only required", @style = "width:150px", @readonly = true })
            <img src='@Url.Content("~/Content/Images/btn_search.gif")' id="imgEmpSearch" alt="Search" onclick="return openEmployee();" />
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.EmployeeName)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.EmployeeName, new { @class = "read-only", @readonly = true })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.Designation)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.Designation, new { @class = "read-only", @readonly = true })
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.Department)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.Department, new { @class = "read-only", @readonly = true })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.Section)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.Section, new { @class = "read-only", @readonly = true })
        </span>
    </div>
</div>
<div class="GroupBox">
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.OfficeEquipmentFurInfoId)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.DropDownListFor(m => m.OfficeEquipmentFurInfoId, Model.OfficeEquipmentFurList, @String.Format("{0}", Content.DDLOptionalLabel()))
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.ProcurementDate)
        </span>
        <span class="field">
            @Html.EditorFor(model => model.ProcurementDate)
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.IssueDate)
        </span>
        <span class="field">
            @Html.EditorFor(model => model.IssueDate)
        </span>
        <span class="label-right">
            @Html.HiddenFor(model => model.IssueById)
            @Html.LabelFor(model => model.IssueByName)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.IssueByName, new { @class = "read-only", @readonly = true })
            <img src='@Url.Content("~/Content/Images/btn_search.gif")' id="imgEmpSearch" alt="Search" onclick="return openRevOfficer();" />
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.IssueFor)
        </span>
        <span class="field">
            @Html.EditorFor(model => model.IssueFor)
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.IsReturn)
        </span>
        <span class="field">
            @Html.CheckBoxFor(model => model.IsReturn)
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.PropertyCost)
        </span>
        <span class="field">
            @Html.EditorFor(model => model.PropertyCost)
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.Remarks)
        </span>
        <span class="field">
            @Html.EditorFor(model => model.Remarks)
        </span>
    </div>

    <div style="width: 95%">
        <div class="clear"></div>
        <div class="button-crude fixedAddButton" style="text-align: right;">
            <input id="btnAdd" type="button" value="Add" />
            <input id="btnChildUpdate" type="button" value="Update" style="display: none;" />
        </div>

        <div class="clear">
        </div>
        <table id="grid" class="contenttable">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Procurement Date
                    </th>
                    <th>
                        Issue Date
                    </th>
                    <th>
                        Issue For
                    </th>
                    <th>
                        Issue By
                    </th>
                    <th>
                        Property Cost
                    </th>
                    <th>
                        Is Returnable
                    </th>
                    <th>
                        Remove
                    </th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < Model.OfficeEquipmentUsagesDetailList.Count; i++)
                {
                    var item2 = Model.OfficeEquipmentUsagesDetailList.ToList()[i];
                    <tr>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.OfficeEquipmentUsagesDetailList[i].Id)
                        </td>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.OfficeEquipmentUsagesDetailList[i].OfficeEquipmentFurInfoId)
                        </td>
                        <td style="display: none;">
                            @Html.TextBoxFor(m => m.OfficeEquipmentUsagesDetailList[i].ProcurementDate, "{0:yyyy-MM-dd}")
                        </td>
                        <td style="display: none;">
                            @Html.TextBoxFor(m => m.OfficeEquipmentUsagesDetailList[i].IssueDate, "{0:yyyy-MM-dd}")
                        </td>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.OfficeEquipmentUsagesDetailList[i].IssueFor)
                        </td>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.OfficeEquipmentUsagesDetailList[i].IssueById)
                        </td>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.OfficeEquipmentUsagesDetailList[i].PropertyCost)
                        </td>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.OfficeEquipmentUsagesDetailList[i].IsReturn)
                        </td>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.OfficeEquipmentUsagesDetailList[i].Remarks)
                        </td>

                        <td>
                            <label> @item2.OfficeEquName</label>
                        </td>
                        <td>
                            @if (@item2.ProcurementDate == null)
                            {
                                <label> @item2.ProcurementDate</label>
                            }
                            else
                            {
                                <label>@item2.ProcurementDate.Value.ToString("yyyy-MM-dd")</label>
                            }
                        </td>
                        <td>
                            @if (@item2.ProcurementDate == null)
                            {
                                <label> @item2.IssueDate</label>
                            }
                            else
                            {
                                <label> @item2.IssueDate.Value.ToString("yyyy-MM-dd")</label>
                            }
                        </td>
                        <td>
                            <label> @item2.IssueFor</label>
                        </td>
                        <td>
                            <label> @item2.IssueByName</label>
                        </td>
                        <td>
                            <label> @item2.PropertyCost</label>
                        </td>
                        <td>
                            @if (@item2.IsReturn)
                            {
                                <label>Yes</label>
                            }
                            else
                            {
                                <label>No</label>
                            }
                        </td>
                        <td>
                            <a href="#" class="deleteIcon-tempGrid" title="delete" onclick="RemoveDb(this,@item2.Id,@item2.OfficeEquipmentFurInfoId,'@Url.Action("DeleteOfficeEquipmentFurnitureUsagesDetail")')"></a>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
    <div class="clear" style="height:10px">
    </div>
</div>
<div id="divEmpList">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white;
        padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>
<br />
<div class="clear">
</div>

<script type="text/javascript">
    var arrList = [];
    //pupulate existing data from database
    var OfficeEquipment = @Html.Raw(Json.Encode(Model.OfficeEquipmentUsagesDetailList));
    $.each( OfficeEquipment, function( key, value ) {
        arrList.push(String( value.OfficeEquipmentFurInfoId ));
    });

    $('#btnAdd').live('click', function () {
        $('#message').empty();
        var IsReturnFinal = null;
        var officeReqUsageId = $('#Id').val();
        var OfficeEquipmentFurInfoId = $('#OfficeEquipmentFurInfoId').val();
        var OfficeEquipmentFurName = $("#OfficeEquipmentFurInfoId option:selected").text();
        var ProcurementDate = $('#ProcurementDate').val();
        var IssueDate = $('#IssueDate').val();
        var IssueFor = $('#IssueFor').val();
        var IssueById = $('#IssueById').val();
        var IssueByName = $('#IssueByName').val();

        var PropertyCost = $('#PropertyCost').val();
        var IsReturn = $('#IsReturn').prop('checked');
        //var IsReturn = $('#IsReturn').val();

        //checking duplicate entry
        var index = $.inArray(OfficeEquipmentFurInfoId, arrList);

        if (IsReturn == true) {
            IsReturnFinal = 'Yes';
        }
        else {
            IsReturnFinal = 'No';
        }

        var reMarks = $('#Remarks').val();

        if (IssueById == null || IssueById == 0) {
            $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Please fill up the red marked field(s)</span>  </div> ");
            return;
        }
        if (OfficeEquipmentFurInfoId == null || OfficeEquipmentFurInfoId == 0) {
            $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Please fill up the red marked field(s)</span>  </div> ");
            return;
        }

        if (index >= 0) {
            $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Duplicate Entry</span>  </div> ");
            return;
        }
        else {
            arrList.push(OfficeEquipmentFurInfoId);

            var trClone = '<tr>' +
                '<td style="display: none;">' + '<input type="text" value="0" name="OfficeEquipmentUsagesDetailList[0].Id"></td>' +
                '<td style="display: none;">' + '<input type="text" name="OfficeEquipmentUsagesDetailList[0].OfficeEquipmentFurInfoId" value="' + OfficeEquipmentFurInfoId + '"></td>' +
                '<td style="display: none;">' + '<input type="text" name="OfficeEquipmentUsagesDetailList[0].ProcurementDate" value="' + ProcurementDate + '" ></td>' +
                '<td style="display: none;">' + '<input type="text" name="OfficeEquipmentUsagesDetailList[0].IssueDate" value="' + IssueDate + '" ></td>' +
                '<td style="display: none;">' + '<input type="text" name="OfficeEquipmentUsagesDetailList[0].IssueFor" value="' + IssueFor + '" ></td>' +
                '<td style="display: none;">' + '<input type="text" name="OfficeEquipmentUsagesDetailList[0].IssueById" value="' + IssueById + '" ></td>' +
                '<td style="display: none;">' + '<input type="text" name="OfficeEquipmentUsagesDetailList[0].PropertyCost" value="' + PropertyCost + '" ></td>' +
                '<td style="display: none;">' + '<input type="text" name="OfficeEquipmentUsagesDetailList[0].IsReturn" value="' + IsReturn + '" ></td>' +
                '<td style="display: none;">' + '<input type="text" name="OfficeEquipmentUsagesDetailList[0].Remarks" value="' + reMarks + '" ></td>' +

                '<td>' + '<label for="OfficeEquName">' + OfficeEquipmentFurName + '</td>' +
                '<td>' + '<label for="ProcurementDate" >' + ProcurementDate + '</td>' +
                '<td>' + '<label for="IssueDate">' + IssueDate + '</td>' +
                '<td>' + '<label for="IssueFor" >' + IssueFor + '</td>' +
                '<td>' + '<label for="IssueByName" >' + IssueByName + '</td>' +
                '<td>' + '<label for="PropertyCost" >' + PropertyCost + '</td>' +
                '<td>' + '<label for="IsReturn">' + IsReturnFinal + '</td>' +
                '<td>' + '<a class="deleteIcon-tempGrid" title="delete" href="#" title="delete" onclick="RemoveDb(this,0,&quot;' + OfficeEquipmentFurInfoId +'&quot;)"></a>' + '</td>' +
                '</tr>';
            $('#grid tbody').append(trClone);
            RearrengeControlName2();
        }
    })

    function RemoveDb(el, id, OfficeEquipmentFurInfoId, url) {
        $(el).parent().parent().remove();
        if (id == 0 || id == undefined) {
            $(el).parent().parent().remove();
        }
        else {
            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify({ id: id }),
                contentType: "application/json; charset=utf-8",
                error: function () {
                    $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> System Error!</span>  </div> ");
                },
                success: function (result) {
                    $(el).parent().parent().remove();
                    $("#message").html("<b style=\"color:Green\">Information has been deleted successfully.</b> ");
                }
            });
        }
        arrList = $.grep(arrList, function(value) {
            return value != OfficeEquipmentFurInfoId;
        });

        RearrengeControlName2();
    }

    function RearrengeControlName2() {
        $('#grid tbody tr').each(function (outIndex) {
            $(this).find('td').each(function (innerIndex) {
                if ($(this).find('input').length > 0) {
                    $(this).find('input').attr('name', $(this).find('input').attr('name').replace(/\[(.*?)\]/, '[' + outIndex + ']'));

                }
            })
        })
    }

</script>

<script type="text/javascript">

    $(document).ready(function () {

        $("#divEmpList").dialog({ autoOpen: false, modal: true, height: 600, width: 900, title: 'Employee', beforeclose: function (event, ui) { Closing(); } });
        //showErrMsg();
    });
    //Reporting Officer
    function openEmployee() {

        var url = '@Url.Action("EmployeeSearchTwo", "Employee")?UseTypeEmpId=1';

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'text',
            timeout: 5000,
            error: function () {
                alert('System is unable to load data please try again.');
            },
            success: function (result) {
                $('#divEmpList').html(result);
            }
        });

        $("#divEmpList").dialog('open');

        return false;
    }
    //Reviewing Officer
    function openRevOfficer() {

        var url = '@Url.Action("EmployeeSearchTwo", "Employee")?UseTypeEmpId=2';

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'text',
            timeout: 5000,
            error: function () {
                alert('System is unable to load data please try again.');
            },
            success: function (result) {
                $('#divEmpList').html(result);
            }
        });

        $("#divEmpList").dialog('open');

        return false;
    }

    function setEmpData(id, useTypeEmpId) {
        //Reporting Officer
        if (useTypeEmpId == 1) {
            $('#EmployeeId').val(id);
            GetEmployeeInfo(id);
            $("#divEmpList").dialog('close');
        }
        //Reviewing Officer
        if (useTypeEmpId == 2) {
            $('#IssueById').val(id);
            GetReviewingOfficerInfo(id);
            $("#divEmpList").dialog('close');
        }

    }
    // Reporting Officer
    function GetEmployeeInfo(empId) {
        var url = '@Url.Action("GetEmployeeInfo", "EmployeeClearanceInfo")';
        if (empId > 0) {
            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify({ empId: empId }),
                contentType: "application/json; charset=utf-8",
                success: function (obj) {
                    $('#EmpId').val(obj.EmpId);
                    $('#EmployeeName').val(obj.EmployeeName);
                    $("#Designation").val(obj.Designation);
                    $("#Department").val(obj.Department);
                    $("#Section").val(obj.Section);
                },
                failure: function (response) {
                    //alert(response.d);
                }
            });
        }
    }
    //Reviewing Officer
    function GetReviewingOfficerInfo(empId) {
        var url = '@Url.Action("GetEmployeeInfo", "EmployeeClearanceInfo")';
        if (empId > 0) {
            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify({ empId: empId }),
                contentType: "application/json; charset=utf-8",
                success: function (obj) {
                    $('#IssueByName').val(obj.EmployeeName);
                },
                failure: function (response) {
                    //alert(response.d);
                }
            });
        }
    }

    function Closing() {

    }

</script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#IssueDate").live('change', function () {
            var from = $('#IssueDate').val();
            var to = $('#ProcurementDate').val();
            getDate(from, to);
        })

        $("#ProcurementDate").live('change', function () {
            var from = $('#IssueDate').val();
            var to = $('#ProcurementDate').val();
            getDate(from, to);
        })

        function getDate(from, to) {
            $('#message').empty();
            if ((new Date(from).getTime() >= new Date(to).getTime())) {
                $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span>'Procurement Date' must be greater than 'Issue Date'.</span> </div> ");
                $('#ProcurementDate').val('');
                return;
            }
        }
    });

</script>

<script type="text/javascript">
    $(document).ready(function () {
        showErrMsg();
    });

    function showErrMsg() {
        if ('@Model.errClass' == "success" && '@Model.IsError' == "0") {
            $('#btnSave').hide();
        }
    }
    $(function () {
        var Url = window.location.href;
        $("#btnClear").live("click", function (event) {
            event.preventDefault();
            window.location.href = Url;
        });
    });

    $('#btnClear').live('click', function () {
        document.getElementById('frm').reset();
        $('#btnAdd').show();
    })

</script>
