@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.EmpClearanceInfoViewModel
@using BEPZA_MEDICAL.Web.Helpers

<div class="GroupBox">
    <div class="row">
        <span class="label">
            @Html.HiddenFor(model => model.Id)
            @Html.LabelFor(model => model.EmpId)
            <label class="required-field">
                *
            </label>
        </span><span class="field">
            @Html.HiddenFor(model => model.EmployeeId)
            @Html.TextBoxFor(model => model.EmpId, new { @class = "read-only", @style = "width:150px", @readonly = true })
            <img src='@Url.Content("~/Content/Images/btn_search.gif")' id="imgEmpSearch" alt="Search" onclick="return openEmployee();" />
        </span>

    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.EmployeeName)
            <label class="required-field">
                *
            </label>
        </span><span class="field">
            @Html.TextBoxFor(model => model.EmployeeName, new { @class = "read-only", @readonly = true })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.Department)
        </span><span class="field">
            @Html.TextBoxFor(model => model.Department, new { @class = "read-only", @readonly = true })
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.Designation)
        </span><span class="field">
            @Html.TextBoxFor(model => model.Designation, new { @class = "read-only", @readonly = true })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.Section)
        </span><span class="field">
            @Html.TextBoxFor(model => model.Section, new { @class = "read-only", @readonly = true })
        </span>
    </div>
</div>

<div class="GroupBox">

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.ClearanceFormList)
            <label class="required-field">
                *
            </label>
        </span><span class="field">
            @Html.DropDownListFor(model => model.ClearanceFormId, Model.ClearanceFormList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "select-single" })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.ClearanceDate)<label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.EditorFor(model => model.ClearanceDate)

        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.HiddenFor(model => model.ResponsibleEmployeeId)
            @Html.LabelFor(model => model.ResponsibleEmployeeName)
            <label class="required-field">
                *
            </label>
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.ResponsibleEmployeeName, new { @class = "read-only", @readonly = true })

        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.ResponsibleEmployeeDesignation)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.ResponsibleEmployeeDesignation, new { @class = "read-only", @readonly = true })
        </span>

    </div>

    <div class="row">
        <div>
            <div class="clear"></div>
            <div class="button-crude fixedAddButton" style="text-align: right;">
                <input id="btnEmpClearanceInfoAdd" type="button" value="Add" />
            </div>
            <div class="clear">
            </div>
            <table id="EmpClearanceInfoGrid" class="contenttable fixedcontenttable custom-grid">
                <thead>
                    <tr>
                        <th>
                            SL No.
                        </th>
                        <th>
                            Clearance Form
                        </th>
                        <th>
                            Clearance Date
                        </th>

                        <th>
                            Responsible Person
                        </th>
                        <th>
                            Designation
                        </th>
                        <th>
                            Add Check List
                        </th>
                        <th>
                            Remove
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.EmpClearanceFormDetails.Count; i++)
                    {
                    var item2 = Model.EmpClearanceFormDetails.ToList()[i];
                    <tr>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.EmpClearanceFormDetails[i].Id)
                        </td>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.EmpClearanceFormDetails[i].EmpClearanceInfoId)
                        </td>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.EmpClearanceFormDetails[i].ClearanceFormId)
                        </td>
                        <td style="display: none;">
                            @*@Html.HiddenFor(m => m.EmpClearanceFormDetails[i].ClearanceDate)*@
                            @Html.TextBoxFor(m => m.EmpClearanceFormDetails[i].ClearanceDate, "{0:yyyy-MM-dd}")

                        </td>
                        <td style="display: none;">
                            @Html.HiddenFor(m => m.EmpClearanceFormDetails[i].ResponsibleEmployeeId)
                        </td>
                        <td class="sNo">
                            <label style="text-align:center"> @(i + 1)</label>
                        </td>
                        <td>
                            @Html.HiddenFor(m => m.EmpClearanceFormDetails[i].ClearanceFormName)
                            <label> @item2.ClearanceFormName</label>
                        </td>
                        <td>
                            <label> @item2.ClearanceDate.ToString("dd-MM-yyyy")</label>
                        </td>
                        <td>
                            @Html.HiddenFor(m => m.EmpClearanceFormDetails[i].ResponsibleEmployeeName)
                            <label> @item2.ResponsibleEmployeeName</label>
                        </td>
                        <td>
                            @Html.HiddenFor(m => m.EmpClearanceFormDetails[i].ResponsibleEmployeeDesignation)
                            <label> @item2.ResponsibleEmployeeDesignation</label>
                        </td>
                        <td>
                            @if (@item2.Id > 0)
                            {
                            <a href="#" class="" title="Add Step" onclick="AddCheckList(this,@item2.Id,'@Url.Action("addchecklist")')">
                                <img src='@Url.Content("~/Content/Images/addItem.png")' alt="add Comment" style="border: none; " />
                            </a>
                            }
                        </td>
                        <td>
                            <a href="#" class="deleteIcon-tempGrid" title="delete" onclick="RemoveDb(this,@item2.Id,'@item2.ClearanceFormId','@Url.Action("deleteempclearanceformdetail")')">

                            </a>
                        </td>
                    </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>

</div>

<div class="GroupBox">
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.Remarks)
        </span><span class="field">
            @Html.EditorFor(model => model.Remarks)
        </span>
    </div>
    <div class="clear"></div>
    <div class="row">
        <span class="label">
            @Html.CheckBoxFor(model => model.isAddAttachment, new { onclick = "disableUpload();" })
            @Html.LabelFor(model => model.isAddAttachment)
        </span>
        <span class="field">
            <div id="divFileAttach">
                @*<span id="spAttachment" class="label-right">
                    @Html.LabelFor(model => model.Attachment)
                </span>*@

                @Html.HiddenFor(model => model.Attachment)
                @Html.HiddenFor(model => model.FileName)
                <input type="file" name="Attachment" id="Attachment" />
                <a href="@Model.FilePath" visible="true" runat="server" target="_blank">@Model.FileName</a>
            </div>
        </span>

    </div>
</div>

<div class="clear">
</div>
<div id="divEmpList">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white;
        padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>

<script type="text/javascript">

    $(function () {
        var Url = window.location.href;
        $("#btnClear").live("click", function (event) {
            event.preventDefault();
            window.location.href = Url;
        });
    });

    $(function () {

        $(".addItem").click(function () {
            $(".validation-summary-errors ").empty();
        });

    });

    $(document).ready(function () {
        disableUpload();
        showErrMsg();
    });

    function showErrMsg() {
        if ('@Model.errClass' == "success" && '@Model.IsError' == "0") {
            $('input[name="btnSave"]').hide();
        }
    }

    function disableUpload() {
        var IsSelect = $('#isAddAttachment').attr('checked');
        if (IsSelect) {
            $('#File').show();
            // $('#spAttachment').show();
            $('#divFileAttach').show();
        }
        else {
            $('#File').hide();
            //$('#spAttachment').hide();
            $('#divFileAttach').hide();
        }
    }


    // ******** functions for open popup *************
    $(document).ready(function () {

        $("#divEmpList").dialog({ autoOpen: false, modal: true, height: 600, width: 940, title: 'Employee', beforeclose: function (event, ui) { Closing(); } });

    });


    function openEmployee() {

        var url = '@Url.Action("EmployeeSearch", "Employee")?searchEmpType=active';

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'text',
            timeout: 5000,
            error: function () {
                alert('System is unable to load data please try again.');
            },
            success: function (result) {
                $('#divEmpList').html(result);
            }
        });

        $("#divEmpList").dialog('open');

        return false;
    }

    function setData(id) {
        $('#EmployeeId').val(id)
        GetEmployeeInfo(id);
        $("#divEmpList").dialog('close');

    }

    function Closing() {

    }
    // ---------------------------------

    function GetEmployeeInfo(empId) {
        var url = '@Url.Action("GetEmployeeInfo", "EmployeeClearanceInfo")';
        if (empId > 0) {
            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify({ empId: empId }),
                contentType: "application/json; charset=utf-8",
                success: function (obj) {
                    $("#EmpId").val(obj.EmpId);
                    $('#EmployeeName').val(obj.EmployeeName);
                    $('#Department').val(obj.Department);
                    $('#Designation').val(obj.Designation);
                    $('#Section').val(obj.Section);
                },
                failure: function (response) {
                    //alert(response.d);
                }
            });
        }
    }

</script>


<script type="text/javascript">

    var arrClearFormList = [];

    //pupulate existing data from database
    var EmpClearanceFormDetails = @Html.Raw(Json.Encode(Model.EmpClearanceFormDetails));
    $.each( EmpClearanceFormDetails, function( key, value ) {
        arrClearFormList.push(String( value.ClearanceFormId ));
    });

    $('#btnEmpClearanceInfoAdd').live('click', function (e) {
        e.preventDefault();
        $("#message").empty();

        var sno=$('#EmpClearanceInfoGrid tr').length;
        var empClearanceInfoId = $('#Id').val();
        var clearanceFormId = $('#ClearanceFormId').val();
        var clearanceFormName = $("#ClearanceFormId option:selected").text();
        var clearanceDate = $("#ClearanceDate").val();
        var responsibleEmployeeId = $("#ResponsibleEmployeeId").val();
        var responsibleEmployeeName = $("#ResponsibleEmployeeName").val();
        var responsibleEmployeeDesignation = $("#ResponsibleEmployeeDesignation").val();

        //checking duplicate entry
        var index = $.inArray(clearanceFormId, arrClearFormList);

        if (responsibleEmployeeName == null || responsibleEmployeeName == "") {
            $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Please fill up the red marked field(s)</span>  </div> ");
            return;
        }

        if (clearanceFormId == null || clearanceFormId == "") {
            $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Please fill up the red marked field(s)</span>  </div> ");
            return;
        }

        if (index >= 0) {
            $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> Duplicate Entry</span>  </div> ");
            return;
        }
        else {
            //push to arry
            arrClearFormList.push(clearanceFormId);

            var trClone = '<tr>' +
           '<td style="display: none;">' + '<input type="text" value="0" name="EmpClearanceFormDetails[0].Id"></td>' +
           '<td style="display: none;">' + '<input type="text" name="EmpClearanceFormDetails[0].EmpClearanceInfoId" value="' + empClearanceInfoId + '"></td>' +
           '<td style="display: none;">' + '<input type="text" name="EmpClearanceFormDetails[0].ClearanceFormId" value="' + clearanceFormId + '" ></td>' +
           '<td style="display: none;">' + '<input type="text" name="EmpClearanceFormDetails[0].ClearanceDate" value="' + clearanceDate + '" ></td>' +
           '<td style="display: none;">' + '<input type="text" name="EmpClearanceFormDetails[0].ResponsibleEmployeeId" value="' + responsibleEmployeeId + '" ></td>' +

           '<td class="sNo">' + '<label  style="text-align:center">' + sno + '</td>' +
           '<td>' + '<label for="ClearanceFormId">' + clearanceFormName + '</td>' +
           '<td>' + '<label for="ClearanceDate" >' + clearanceDate + '</td>' +
            '<td>' + '<label for="ResponsibleEmployeeName">' + responsibleEmployeeName + '</td>' +
           '<td>' + '<label for="ResponsibleEmployeeDesignation" >' + responsibleEmployeeDesignation + '</td>' +
           '<td></td>' +
           '<td><a class="deleteIcon-tempGrid" href="#" title="delete" onclick="RemoveDb(this,0,&quot;' + clearanceFormId +'&quot;,&quot;/PRM/JobGrade/DeleteEmpClearanceFormDetail&quot;)"></a></td>' +
           '</tr>';
            $('#EmpClearanceInfoGrid tbody').append(trClone);
            RearrengeControlName2();
        }
    })

    function RemoveDb(el, id, clearanceFormId, url) {

        if (id == 0 || id == undefined) {
            $(el).parent().parent().remove();

            arrClearFormList = $.grep(arrClearFormList, function(value) {
                return value != clearanceFormId;
            });
        }
        else {
            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify({ Id: id }),
                contentType: "application/json; charset=utf-8",
                error: function () {
                    $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> System Error!</span>  </div> ");
                },
                success: function (result) {
                    var errMsg = result.Message;
                    var errg = result.Success;
                    if (errg) {
                        $("#message").html('<b style=\"color:Green\">' + errMsg + '</b>');
                        $(el).parent().parent().remove();

                        arrClearFormList = $.grep(arrClearFormList, function(value) {
                            return value != clearanceFormId;
                        });
                    }
                    else {
                        $("#message").html('<b style=\"color:red\">' + errMsg + '</b>');
                    }
                }
            });
        }

        arrangeSno();
        RearrengeControlName2();
    }

    function arrangeSno()
    {
        var i=0;
        $('#EmpClearanceInfoGrid tr').each(function() {
            $(this).find(".sNo").html(i);
            i++;
        });
    }

    function RearrengeControlName2() {
        $('#EmpClearanceInfoGrid tbody tr').each(function (outIndex) {
            $(this).find('td').each(function (innerIndex) {
                if ($(this).find('input').length > 0) {
                    $(this).find('input').attr('name', $(this).find('input').attr('name').replace(/\[(.*?)\]/, '[' + outIndex + ']'));

                }
            })
        })
    }

</script>


<script type="text/javascript">
    $(function () {
        $("select#ClearanceFormId").change(function () {
            // LoadChecklist();
            setResponsibleEmpInfo();
        })
    });

    function LoadChecklist() {
        var chkForm = $('select#ClearanceFormId').val();
        var ddlCheckList = $('select#ClearanceChecklistId');
        ddlCheckList.empty();
        ddlCheckList.append($('<option/>', {
            value: '',
            text: '@Content.DDLOptionalLabel()'
        }));
        if (chkForm != null && chkForm != '') {
            $.getJSON('@Url.Action("GetChecklist", "EmployeeClearanceInfo")', { clearanceFormId: chkForm }, function (data) {
                $.each(data, function (index, data) {
                    ddlCheckList.append($('<option/>', {
                        value: data.Id,
                        text: data.Name
                    }));
                });
            });

        }
        else {
            // alert(data);
            $("#ddlCheckList>option").remove();
            $("#ddlCheckList").html("<option value=\"" + "" + "\">" + "[Select One]" + "</option>");
        }
    }

    function setResponsibleEmpInfo() {
        var clearanceFormId = $('select#ClearanceFormId').val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetResponsibleEmpInfo", "EmployeeClearanceInfo")',
            data: '{clearanceFormId: "' + clearanceFormId + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var Id = data.Id
                var EmployeeId = data.EmployeeId;
                var EmployeeName = data.EmployeeName;
                var Designation = data.Designation;
                $('#ResponsibleEmployeeId').val(EmployeeId);
                $('#ResponsibleEmployeeName').val(EmployeeName);
                $('#ResponsibleEmployeeDesignation').val(Designation);
            },
            failure: function (response) {
                //alert(response.d);
            }
        });

    }
</script>


@*Add Check List*@

<script type="text/javascript">
    $(document).ready(function () {

        $("#NewCheckList").dialog({ autoOpen: false, modal: true, height: 600, width: 900, title: 'Add Check List', beforeclose: function (event, ui) { Closing(); } });
        //showErrMsg();
    });

    function AddCheckList(el, id, href) {
        var url = href + '/' + id;
        //  var url = $(this).attr('href');
        $("#NewCheckList").dialog({
            title: 'Add Check List',
            autoOpen: false,
            resizable: false,
            height: 550,
            width: 800,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            open: function (event, ui) {
                $(this).load(url);

            },
            close: function () {
                //  $(this).dialog('close');
                // $("#ChkListDetailGrid > tbody> tr").remove();
            }
        });

        $("#NewCheckList").dialog('open');
        return false;
    }

    function Closing() {

    }
</script>

<div id='NewCheckList' style="height: 20px">

</div>

@*End Check List*@
