@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.ACRforOfficer.OfficerBioDataViewModel

@{
    Layout = null;
}
@using (Html.BeginForm(Model.ActionType, "ACRforOfficer"))
{
    <fieldset>
        <div class="message">
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="@Model.ErrorClass">
                    @Model.Message
                </div>
            }
            @Html.ValidationSummary(false, BEPZA_MEDICAL.Web.Utility.Common.ValidationSummaryHead)
        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.HiddenFor(model => model.OfficerInfoId)
                    @Html.HiddenFor(model => model.EmployeeId)
                    @Html.LabelFor(model => model.EmpId)
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.EmpId, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRDate)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.ACRDate, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeName, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRPeriodFrom)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.ACRPeriodFrom, new { @class = "read-only", @readonly = true })
                </span>

            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeDesignation)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeDesignation, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRPeriodTo)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.ACRPeriodTo, new { @class = "read-only", @readonly = true })
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeDepartment)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeDepartment, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.SeniorityNumber)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.SeniorityNumber, new { @class = "read-only", @readonly = true })
                </span>

            </div>
        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.DateofBirth)
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.DateofBirth, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.FatherName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.FatherName, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.MaritalStatus)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.MaritalStatus, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.NumberofChildren)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.NumberofChildren, new { @class = "read-only", @readonly = true })
                </span>

            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.ServiceOrCadreName)
                </span><span class="field">
                    @Html.EditorFor(model => model.ServiceOrCadreName)
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.DateOfJoinIng)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.DateOfJoinIng, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.DateOfJoiningInCurrentPost)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.DateOfJoiningInCurrentPost, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.SalaryScaleName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.SalaryScaleName, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.CurrentBasicSalary)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.CurrentBasicSalary, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    <label>10. Education Qualification</label>
                </span>
            </div>

            <div class="clear">
            </div>

            <div class="row" align="center">
                <div style="width: 80%">
                    <div class="clear"></div>
                    <table id="grid" class="contenttable">
                        <thead>
                            <tr>
                                <th>
                                    Examination Name
                                </th>
                                <th>
                                    Academic Institution
                                </th>
                                <th>
                                    Passing Year
                                </th>
                                <th>
                                    Division/Grade
                                </th>
                                <th>
                                    Board/University
                                </th>
                                <th>
                                    Subject
                                </th>

                            </tr>
                        </thead>

                        <tbody>
                            @for (int i = 0; i < Model.EducationQualificationList.Count; i++)
                            {
                                var item1 = Model.EducationQualificationList.ToList()[i];
                                <tr>
                                    <td>
                                        <label> @item1.ExaminationName</label>
                                    </td>
                                    <td>
                                        <label> @item1.AcademicInstitution</label>
                                    </td>
                                    <td>
                                        <label> @item1.PassingYear</label>
                                    </td>
                                    <td>
                                        <label> @item1.DivisionOrGrade</label>
                                    </td>
                                    <td>
                                        <label> @item1.BoardOrUniversity</label>
                                    </td>
                                    <td>
                                        <label> @item1.Subject</label>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="clear" style="height:10px">
                </div>
            </div>
            <div class="row">
                <span class="label">
                    <label>11. Training</label>
                </span>
            </div>

            <div class="row" align="center">
                <div style="width: 80%">
                    <div class="clear"></div>
                    <table id="grid" class="contenttable">
                        <thead>
                            <tr>
                                <th>
                                    Training Title
                                </th>
                                <th>
                                    Institution
                                </th>
                                <th>
                                    Training Type
                                </th>
                                <th>
                                    Location
                                </th>
                                <th>
                                    Country
                                </th>
                                <th>
                                    Training Year
                                </th>

                            </tr>
                        </thead>

                        <tbody>
                            @for (int i = 0; i < Model.TrainingList.Count; i++)
                            {
                                var item2 = Model.TrainingList.ToList()[i];
                                <tr>
                                    <td>
                                        <label> @item2.TrainingTitle</label>
                                    </td>
                                    <td>
                                        <label> @item2.Institution</label>
                                    </td>
                                    <td>
                                        <label> @item2.TraingType</label>
                                    </td>
                                    <td>
                                        <label> @item2.Location</label>
                                    </td>
                                    <td>
                                        <label> @item2.Country</label>
                                    </td>
                                    <td>
                                        <label> @item2.TrainingYear</label>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="clear" style="height:10px">
                </div>
            </div>
            <div class="row">
                <span class="label" style="width: 50%">
                    <label>12. Proficiency in Foreign Language</label>
                </span>
            </div>

            <div class="row" align="center">
                <div style="width: 80%">
                    <div class="clear"></div>
                    <table id="grid" class="contenttable">
                        <thead>
                            <tr>
                                <th>
                                    Language
                                </th>
                                <th>
                                    Speaking
                                </th>
                                <th>
                                    Reading
                                </th>
                                <th>
                                    Writing
                                </th>
                            </tr>
                        </thead>

                        <tbody>
                            @for (int i = 0; i < Model.LanguageList.Count; i++)
                            {
                                var item1 = Model.LanguageList.ToList()[i];
                                <tr>
                                    <td>
                                        <label> @item1.Language</label>
                                    </td>
                                    <td>
                                        <label> @item1.Speaking</label>
                                    </td>
                                    <td>
                                        <label> @item1.Reading</label>
                                    </td>
                                    <td>
                                        <label> @item1.Writing</label>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="clear" style="height:10px">
                </div>
            </div>
            <div class="row">
                <span class="label" style="width: 50%">
                    <label>13. Service Duration Under Reporting Officer</label>
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.FromDate)
                </span><span class="field">
                    @Html.EditorFor(model => model.FromDate)
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ToDate)
                </span><span class="field">
                    @Html.EditorFor(model => model.ToDate)
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.WorkingDescription)
                </span><span class="field" style="width: 50%">
                    @Html.TextAreaFor(model => model.WorkingDescription)
                </span>
            </div>
            <div class="clear" style="height:10px">
            </div>

        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label" style="width:18%">
                    @Html.HiddenFor(model => model.ReportingOfficerId)
                    @Html.LabelFor(model => model.NameOfReportingOfficer, new { @class = "label-required" })
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.NameOfReportingOfficer, new { @class = "read-only required", @readonly = true })
                    @*<img src='@Url.Content("~/Content/Images/btn_search.gif")' id="imgEmpSearch" alt="Search" onclick="return openEmployee();" />*@
                </span>
            </div>
            <div class="row">
                <span class="label" style="width:18%">
                    @Html.LabelFor(model => model.Designation)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.Designation, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label" style="width:18%">
                    @Html.LabelFor(model => model.Department)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.Department, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label" style="width:18%">
                    @Html.LabelFor(model => model.ReportingDate)
                </span><span class="field">
                    @Html.EditorFor(model => model.ReportingDate)
                </span>
            </div>

        </div>

        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.NextApproverId, new { @class = "label-required" })
                </span><span class="field">
                    @Html.DropDownListFor(model => model.NextApproverId, @Model.ApproverList)
                </span>
            </div>
        </div>
        <div class="clear">
        </div>
        <div class="button-crude">
            @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned || (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsEditAssigned)
            {
                <input type="submit" value="@Model.ButtonText" name="btnCreate" id="btnCreate" style="margin: 0 10px 0 0;" />
            }
            @if (Model.DeleteEnable && (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsDeleteAssigned)
            {
                @Html.ActionLink("Delete", "DeleteBioData", new { id = Model.OfficerInfoId }, new { @class = "delete-confirm", @style = "margin: 0 10px 0 0;" })
            }
            <div class="clear">
            </div>
        </div>
    </fieldset>
}
<div id="divEmpList">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white;
        padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>

<div class="button-crude button-left" style="float: left;">
    @Html.ActionLink("Back to List", "Index")
</div>
<br />
<div class="clear">
</div>
<script type="text/javascript">

    $(document).ready(function () {

        $("#divEmpList").dialog({ autoOpen: false, modal: true, height: 600, width: 900, title: 'Employee', beforeclose: function (event, ui) { Closing(); } });
        //showErrMsg();
    });

    function openEmployee() {

        var url = '@Url.Action("EmployeeSearch", "Employee")?searchEmpType=active';

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'text',
            timeout: 5000,
            error: function () {
                alert('System is unable to load data please try again.');
            },
            success: function (result) {
                $('#divEmpList').html(result);
            }
        });

        $("#divEmpList").dialog('open');

        return false;
    }

    function setData(id) {
        $('#ReportingOfficerId').val(id);
        GetEmployeeInfo(id);
        $("#divEmpList").dialog('close');

    }

    function GetEmployeeInfo(empId) {
        var url = '@Url.Action("GetEmployeeInfo", "EmployeeClearanceInfo")';
        if (empId > 0) {
            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify({ empId: empId }),
                contentType: "application/json; charset=utf-8",
                success: function (obj) {
                    $('#NameOfReportingOfficer').val(obj.EmployeeName);
                    $("#Designation").val(obj.Designation);
                    $("#Department").val(obj.Department);
                },
                failure: function (response) {
                    //alert(response.d);
                }
            });
        }
    }

    function Closing() {

    }

</script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#FromDate").live('change', function () {
            var from = $('#FromDate').val();
            var to = $('#ToDate').val();
            getDate(from, to);
        })
        $("#ToDate").live('change', function () {
            var from = $('#FromDate').val();
            var to = $('#ToDate').val();
            getDate(from, to);
        })

        function getDate(from, to) {
            $('.message').empty();
            $('#FromDate').removeClass('border-red');
            $('#ToDate').removeClass('border-red');

            if ((new Date(from).getTime() > new Date(to).getTime())) {
                $('#FromDate').addClass('border-red');
                $('#ToDate').addClass('border-red');
                $(".message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span>'To Date' must be greater than or equal to 'From Date'.</span>  </div> ");
                return;
            }
        }
    });

</script>
