@using BEPZA_MEDICAL.Web.Utility
@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.ACRforOfficer.OfficerInfoViewModel

@using (Html.BeginForm(Model.ActionType, "ACRforOfficer"))
{
    <fieldset>
        <div class="message">
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="@Model.ErrorClass">
                    @Model.Message
                </div>
            }
            @Html.ValidationSummary(false, BEPZA_MEDICAL.Web.Utility.Common.ValidationSummaryHead)
        </div>

        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.HiddenFor(model => model.DateofJoining)
                    @Html.HiddenFor(model => model.PRLDate)
                    @Html.HiddenFor(model => model.EmployeeId)
                    @Html.LabelFor(model => model.EmpId, new { @class = "label-required" })
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.EmpId, new { @class = "read-only", @readonly = true })
                    <img src='@Url.Content("~/Content/Images/btn_search.gif")' id="imgEmpSearch" alt="Search" onclick="return openEmployee();" />
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRDate, new { @class = "label-required" })
                </span><span class="field">
                    @Html.EditorFor(model => model.ACRDate)
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeName, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRPeriodFrom, new { @class = "label-required" })
                </span><span class="field">
                    @Html.EditorFor(model => model.ACRPeriodFrom)
                </span>

            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeDesignation)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeDesignation, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRPeriodTo, new { @class = "label-required" })
                </span><span class="field">
                    @Html.EditorFor(model => model.ACRPeriodTo)
                </span>

            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeDepartment)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeDepartment, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.SeniorityNumber)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.SeniorityNumber, new { @class = "read-only", @readonly = true })
                </span>

            </div>
        </div>

        <div class="GroupBox">
            <div class="row">
                <span class="label" style="width:18%">
                    @Html.HiddenFor(model => model.ReportingOfficerId)
                    @Html.LabelFor(model => model.NameOfReportingOfficer, new { @class = "label-required" })
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.NameOfReportingOfficer, new { @class = "read-only required", @readonly = true })
                    @*<img src='@Url.Content("~/Content/Images/btn_search.gif")' id="imgEmpSearch" alt="Search" onclick="return openEmployee();" />*@
                </span>
            </div>
            <div class="row">
                <span class="label" style="width:18%">
                    @Html.LabelFor(model => model.Designation)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.Designation, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label" style="width:18%">
                    @Html.LabelFor(model => model.Department)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.Department, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label" style="width:18%">
                    @Html.LabelFor(model => model.ReportingDate)
                </span><span class="field">
                    @if (Model.ReportingDateEditable)
                    {
                        @Html.EditorFor(model => model.ReportingDate)
                    }
                    else
                    {
                        String reportingDate = Convert.ToDateTime(Model.ReportingDate).ToString(DateAndTime.GlobalDateFormat);
                        @Html.TextBoxFor(model => reportingDate , new { @class = "read-only", @readonly = true })
                    }
                </span>
            </div>

        </div>

        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.NextApproverId, new { @class = "label-required" })
                </span><span class="field-LargeWidth">
                    @Html.DropDownListFor(model => model.NextApproverId, @Model.ApproverList)
                </span>
            </div>
        </div>
        <div class="clear">
        </div>
        <div class="button-crude">
            @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned || (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsEditAssigned)
            {
                <input type="submit" value="@Model.ButtonText" name="btnCreate" id="btnCreate" style="margin: 0 10px 0 0;" />
            }
            @if (Model.DeleteEnable && (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsDeleteAssigned)
            {
                @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "delete-confirm" })
            }
            <div class="clear">
            </div>
        </div>
    </fieldset>
}
<div id="divEmpList">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white;
        padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>
<div class="button-crude button-left" style="float: left;">
    @Html.ActionLink("Back to List", "Index")
</div>
<br />
<div class="clear">
</div>

<script type="text/javascript">

    $(document).ready(function () {

        $("#divEmpList").dialog({ autoOpen: false, modal: true, height: 600, width: 900, title: 'Employee', beforeclose: function (event, ui) { Closing(); } });
        //showErrMsg();
    });

    function openEmployee() {

        var url = '@Url.Action("EmployeeSearch", "Employee")?searchEmpType=active';

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'text',
            timeout: 5000,
            error: function () {
                alert('System is unable to load data please try again.');
            },
            success: function (result) {
                $('#divEmpList').html(result);
            }
        });

        $("#divEmpList").dialog('open');

        return false;
    }

    function GetApproverInformation(empId) {
        var url = '@Url.Action("GetApproverInformation", "ACRforOfficer")';
        if (empId == '') {
            var empId = $('#EmpId').val();
        }
        $('#NextApproverId').empty();
        if (empId.length > 0) {
            $.ajax({
                url: url,
                type: 'GET',
                data: { EmpId: empId },
                dataType: 'json',
                timeout: 5000,
                error: function () {
                    alert('System is unable to load data please try again.');
                },
                success: function (data) {
                    $.each(data, function () {
                        $('#NextApproverId').append($("<option></option>").val(this['Id']).html(this['FullName']));
                    });
                }
            });
        }
        return false;
    }

    function setData(id) {
        $('#EmployeeId').val(id);
        GetEmployeeInfo(id);
        $("#divEmpList").dialog('close');

    }

    function GetEmployeeInfo(empId) {
        var url = '@Url.Action("GetEmployeeInfo", "ACRforStaff")';
        if (empId > 0) {
            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify({ empId: empId }),
                contentType: "application/json; charset=utf-8",
                success: function (obj) {
                    $('#EmpId').val(obj.EmpId);
                    $('#EmployeeName').val(obj.EmployeeName);
                    $("#Designation").val(obj.Designation);
                    $("#Department").val(obj.Department);
                    $("#SeniorityNumber").val(obj.SeniorityPosition);
                    $("#DateofJoining").val(obj.JoiningDate);
                    $("#PRLDate").val(obj.PRLDate);
                    GetApproverInformation(obj.EmpId);
                },
                failure: function (response) {
                    //alert(response.d);
                }
            });
        }
    }

    function Closing() {

    }

</script>

<script type="text/javascript">
    $(document).ready(function () {
        /*
        $("#ACRPeriodFrom").live('change', function () {
            $('.message').empty();

            var from = $('#ACRPeriodFrom').val();
            var to = $('#ACRPeriodTo').val();
            var dateOfJoining = $("#DateofJoining").val();
            var prlDate = $("#PRLDate").val();
            if (new Date(from).getTime() > new Date(dateOfJoining).getTime()) {
                if (to!='') {
                      getDate(from, to);
                }
            }
            else {
                $(".message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span>ACR Period From must be Greater than Joining Date.</span>  </div> ");
                $('#ACRPeriodFrom').val('');
                return;
            }
        })

        $("#ACRPeriodTo").live('change', function () {
            $('.message').empty();

            var from = $('#ACRPeriodFrom').val();
            var to = $('#ACRPeriodTo').val();
            var dateOfJoining = $("#DateofJoining").val();
            var prlDate = $("#PRLDate").val();
            //var RedtDate = new Date().setFullYear(new Date(prlDate).getFullYear() + 1);
            //alert(RedtDate);

            if (new Date(to).getTime() < new Date(prlDate).getTime()) {
                getDate(from, to);
            }
            else {
                $(".message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span>ACR Period to must be Less than PRL Date.</span>  </div> ");
                $('#ACRPeriodTo').val('');
                return;
            }
        })

        function getDate(from, to) {
            $('.message').empty();
            if ((new Date(from).getTime() > new Date(to).getTime())) {
                $(".message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span>ACR Period To must be Greater than ACR Period From.</span>  </div> ");
                $('#ACRPeriodTo').val('');
                return;
            }
        }
        */
        GetApproverInformation('');
    });

</script>