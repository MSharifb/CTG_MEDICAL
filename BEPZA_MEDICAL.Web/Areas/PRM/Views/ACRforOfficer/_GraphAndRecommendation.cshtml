@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.ACRforOfficer.GraphAndRecommendation

@{
    Layout = null;
}

@using (Html.BeginForm(Model.ActionType, "ACRforOfficer", FormMethod.Post, new { id = "frm", @encType = "multipart/form-data" }))
{
    <fieldset>
        <div class="message">
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="@Model.ErrorClass">
                    @Model.Message
                </div>
            }
            @Html.ValidationSummary(false, BEPZA_MEDICAL.Web.Utility.Common.ValidationSummaryHead)
        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.HiddenFor(model => model.OfficerInfoId)
                    @Html.HiddenFor(model => model.EmployeeId)
                    @Html.LabelFor(model => model.EmpId)
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.EmpId, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRDate)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.ACRDate, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeName, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRPeriodFrom)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.ACRPeriodFrom, new { @class = "read-only", @readonly = true })
                </span>

            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeDesignation)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeDesignation, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRPeriodTo)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.ACRPeriodTo, new { @class = "read-only", @readonly = true })
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeDepartment)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeDepartment, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.SeniorityNumber)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.SeniorityNumber, new { @class = "read-only", @readonly = true })
                </span>

            </div>
        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                   <label>1. Short Comments</label>
                </span>
            </div>
            <div style="padding-left:30px">
                <div class="row">
                    <span class="label">
                        @Html.LabelFor(model => model.SpecialQualification)
                    </span>
                    <span class="field" style="width: 50%">
                        @Html.TextAreaFor(model => model.SpecialQualification)
                    </span>
                </div>
                <div class="row">
                    <span class="label">
                        @Html.LabelFor(model => model.HonestyAndGoodwill)
                    </span>
                    <span class="field" style="width: 50%">
                        @Html.TextAreaFor(model => model.HonestyAndGoodwill)
                    </span>
                </div>
                <div class="row">
                    <span class="label">
                        @Html.LabelFor(model => model.NecessityforTraining)
                    </span>
                    <span class="field" style="width: 50%">
                        @Html.TextAreaFor(model => model.NecessityforTraining)
                    </span>
                </div>
                </div>
                <div class="row">
                    <span class="label">
                        <label>2. Qualification for Promotion</label>
                    </span>
                </div>
            <div style="padding-left:30px">
                <div class="row">
                    <span class="field">
                        @Html.CheckBoxFor(model => model.A, new { @class = "rchk" })
                        <label> A. Eligible for Promotion</label>
                    </span>
                </div>
                <div class="row">
                    <span class="field">
                        @Html.CheckBoxFor(model => model.B, new { @class = "rchk" })
                        <label> B. Not Eligible for Promotion Yet</label>

                    </span>
                </div>
                <div class="row">
                    <span class="field">
                        @Html.CheckBoxFor(model => model.C, new { @class = "rchk" })
                        <label> C. Highly Recommend for Promotion</label>

                    </span>
                </div>
                <div class="row">
                    <span class="field">
                        @Html.CheckBoxFor(model => model.D, new { @class = "rchk" })
                        <label> D. Recently Promoted, So next promotion will not be considerable presently.</label>

                    </span>
                </div>
                </div>
            <div class="row">
                <span class="label" style="width: 50%">
                    @Html.LabelFor(model => model.OthersRecommendation)
                </span>
            </div>
            <div class="row" style="padding-left: 182px">
                <span class="field" style="width: 61%">
                    @Html.TextAreaFor(model => model.OthersRecommendation)
                </span>
            </div>
                <div class="clear"></div>

            </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.HiddenFor(model => model.ReportingOfficerId)
                    @Html.LabelFor(model => model.NameOfReportingOfficer, new { @class = "label-required" })
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.NameOfReportingOfficer, new { @class = "read-only required", @readonly = true })
                    @*<img src='@Url.Content("~/Content/Images/btn_search.gif")' id="imgEmpSearch" alt="Search" onclick="return openEmployee();" />*@
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.Designation)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.Designation, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.Department)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.Department, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.ReportingDate)
                </span><span class="field">
                    @Html.EditorFor(model => model.ReportingDate)
                </span>
            </div>

        </div>
        <div class="GroupBox">
            <div class="clear"></div>
            <div class="row">
                <div id="divFileAttach">
                    <span id="spAttachment" class="label-right">
                        @Html.LabelFor(model => model.Attachment)
                    </span>
                    <span class="field">
                        @Html.HiddenFor(model => model.Attachment)
                        @Html.HiddenFor(model => model.FileName)
                        <input type="file" name="Attachment" id="Attachment" />
                        <a href="@Model.FilePath" visible="true" runat="server" target="_blank">@Model.FileName</a>
                    </span>
                </div>
            </div>
            <div class="clear"></div>
        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.NextApproverId, new { @class = "label-required" })
                </span><span class="field">
                    @Html.DropDownListFor(model => model.NextApproverId, @Model.ApproverList)
                </span>
            </div>
        </div>
        <div class="clear">
        </div>
        <div class="button-crude">
            @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned || (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsEditAssigned)
            {
                <input type="submit" value="@Model.ButtonText" name="btnCreate" id="btnCreate" style="margin: 0 10px 0 0;" />
            }
            @if (Model.DeleteEnable && (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsDeleteAssigned)
            {
                @Html.ActionLink("Delete", "DeleteGraphAndRecommendation", new { id = Model.OfficerInfoId }, new { @class = "delete-confirm", @style = "margin: 0 10px 0 0;" })
            }
            <div class="clear">
            </div>
        </div>
    </fieldset>
}
<div id="divEmpList">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white;
        padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>

<div class="button-crude button-left" style="float: left;">
    @Html.ActionLink("Back to List", "Index")
</div>
<br />
<div class="clear">
</div>
<script type="text/javascript">

    $(document).ready(function () {

        $("#divEmpList").dialog({ autoOpen: false, modal: true, height: 600, width: 900, title: 'Employee', beforeclose: function (event, ui) { Closing(); } });
        //showErrMsg();
    });

    function openEmployee() {

        var url = '@Url.Action("EmployeeSearch", "Employee")?searchEmpType=active';

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'text',
            timeout: 5000,
            error: function () {
                alert('System is unable to load data please try again.');
            },
            success: function (result) {
                $('#divEmpList').html(result);
            }
        });

        $("#divEmpList").dialog('open');

        return false;
    }

    function setData(id) {
        $('#ReportingOfficerId').val(id);
        GetEmployeeInfo(id);
        $("#divEmpList").dialog('close');

    }

    function GetEmployeeInfo(empId) {
        var url = '@Url.Action("GetEmployeeInfo", "EmployeeClearanceInfo")';
        if (empId > 0) {
            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify({ empId: empId }),
                contentType: "application/json; charset=utf-8",
                success: function (obj) {
                    $('#NameOfReportingOfficer').val(obj.EmployeeName);
                    $("#Designation").val(obj.Designation);
                    $("#Department").val(obj.Department);
                },
                failure: function (response) {
                    //alert(response.d);
                }
            });
        }
    }

    function Closing() {

    }

</script>
<script type="text/javascript">
    $(".rchk").live('click', function () {
        if ($(this).attr('checked')) {
            // uncheck other chekbox
            $('input.rchk').not(this).attr('checked', false);
        }

    });
</script>

