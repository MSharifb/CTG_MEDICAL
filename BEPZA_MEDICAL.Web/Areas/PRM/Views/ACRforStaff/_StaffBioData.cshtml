@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.ACRforStaff.StaffBioDataViewModel

@{
    Layout = null;
}
@using (Html.BeginForm(Model.ActionType, "ACRforStaff"))
{
    <fieldset>
        <div class="message">
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="@Model.ErrorClass">
                    @Model.Message
                </div>
            }
            @Html.ValidationSummary(false, BEPZA_MEDICAL.Web.Utility.Common.ValidationSummaryHead)
        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.HiddenFor(model => model.StaffInfoId)
                    @Html.HiddenFor(model => model.EmployeeId)
                    @Html.LabelFor(model => model.EmpId)
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.EmpId, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRDate)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.ACRDate, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeName, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRPeriodFrom)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.ACRPeriodFrom, new { @class = "read-only", @readonly = true })
                </span>

            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeDesignation)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeDesignation, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ACRPeriodTo)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.ACRPeriodTo, new { @class = "read-only", @readonly = true })
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeDepartment)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.EmployeeDepartment, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.SeniorityNumber)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.SeniorityNumber, new { @class = "read-only", @readonly = true })
                </span>

            </div>
        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.DateofBirth)
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.DateofBirth, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.FatherName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.FatherName, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.SalaryScaleName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.SalaryScaleName, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.CurrentBasicSalary)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.CurrentBasicSalary, new { @class = "read-only", @readonly = true })
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.DateOfJoinIng)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.DateOfJoinIng, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    <label>Passed in Departmental Examination?</label>
                </span><span class="field">
                    @Html.RadioButtonFor(m => m.PassInDepExam, true, new { @checked = true })@Html.Label("Yes")
                </span>
                <span class="field">
                    @Html.RadioButtonFor(m => m.PassInDepExam, false)@Html.Label("No")
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.DateOfJoiningInCurrentPost)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.DateOfJoiningInCurrentPost, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ExamDate)
                </span><span class="field">
                    @Html.EditorFor(model => model.ExamDate)
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmploymentType)
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.EmploymentType, new { @class = "read-only", @readonly = true })
                </span>
            </div>

            <div class="row">
                <span class="label">
                    <label>Education Qualification</label>
                </span>
            </div>

            <div class="clear">
            </div>

            <div class="row" align="center">
                <div style="width: 80%">
                    <div class="clear"></div>
                    <table id="grid" class="contenttable">
                        <thead>
                            <tr>
                                <th>
                                    Examination Name
                                </th>
                                <th>
                                    Academic Institution
                                </th>
                                <th>
                                    Passing Year
                                </th>
                                <th>
                                    Division/Grade
                                </th>
                                <th>
                                    Board/University
                                </th>
                                <th>
                                    Subject
                                </th>

                            </tr>
                        </thead>

                        <tbody>
                            @for (int i = 0; i < Model.EducationQualificationList.Count; i++)
                            {
                                var item1 = Model.EducationQualificationList.ToList()[i];
                                <tr>
                                    <td>
                                        <label> @item1.ExaminationName</label>
                                    </td>
                                    <td>
                                        <label> @item1.AcademicInstitution</label>
                                    </td>
                                    <td>
                                        <label> @item1.PassingYear</label>
                                    </td>
                                    <td>
                                        <label> @item1.DivisionOrGrade</label>
                                    </td>
                                    <td>
                                        <label> @item1.BoardOrUniversity</label>
                                    </td>
                                    <td>
                                        <label> @item1.Subject</label>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="clear" style="height:10px">
                </div>
            </div>
            <div class="row">
                <span class="label">
                    <label>Training</label>
                </span>
            </div>

            <div class="row" align="center">
                <div style="width: 80%">
                    <div class="clear"></div>
                    <table id="grid" class="contenttable">
                        <thead>
                            <tr>
                                <th>
                                    Training Title
                                </th>
                                <th>
                                    Institution
                                </th>
                                <th>
                                    Training Type
                                </th>
                                <th>
                                    Location
                                </th>
                                <th>
                                    Country
                                </th>
                                <th>
                                    Training Year
                                </th>

                            </tr>
                        </thead>

                        <tbody>
                            @for (int i = 0; i < Model.TrainingList.Count; i++)
                            {
                                var item2 = Model.TrainingList.ToList()[i];
                                <tr>
                                    <td>
                                        <label> @item2.TrainingTitle</label>
                                    </td>
                                    <td>
                                        <label> @item2.Institution</label>
                                    </td>
                                    <td>
                                        <label> @item2.TraingType</label>
                                    </td>
                                    <td>
                                        <label> @item2.Location</label>
                                    </td>
                                    <td>
                                        <label> @item2.Country</label>
                                    </td>
                                    <td>
                                        <label> @item2.TrainingYear</label>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="clear" style="height:10px">
                </div>
            </div>
            <div class="row">
                <span class="label" style="width: 50%">
                    <label>Proficiency in Foreign Language</label>
                </span>
            </div>

            <div class="row" align="center">
                <div style="width: 80%">
                    <div class="clear"></div>
                    <table id="grid" class="contenttable">
                        <thead>
                            <tr>
                                <th>
                                    Language
                                </th>
                                <th>
                                    Speaking
                                </th>
                                <th>
                                    Reading
                                </th>
                                <th>
                                    Writing
                                </th>
                            </tr>
                        </thead>

                        <tbody>
                            @for (int i = 0; i < Model.LanguageList.Count; i++)
                            {
                                var item1 = Model.LanguageList.ToList()[i];
                                <tr>
                                    <td>
                                        <label> @item1.Language</label>
                                    </td>
                                    <td>
                                        <label> @item1.Speaking</label>
                                    </td>
                                    <td>
                                        <label> @item1.Reading</label>
                                    </td>
                                    <td>
                                        <label> @item1.Writing</label>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="clear" style="height:10px">
                </div>
            </div>
            <div class="row">
                <span class="label" style="width: 50%">
                    <label>Service Duration Under Reporting Officer</label>
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.FromDate)
                </span><span class="field">
                    @Html.EditorFor(model => model.FromDate)
                </span>
                <span class="label-right" style="width: 2%">
                    @Html.LabelFor(model => model.ToDate)
                </span><span class="field" style="margin-left:15px">
                    @Html.EditorFor(model => model.ToDate)
                </span>
            </div>
            <div class="clear" style="height:10px">
            </div>
        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.ApproverComments)
                </span>
                <span class="field" style="width:570px;">
                    @Html.TextAreaFor(model => model.ApproverComments)
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.NextApproverId, new { @class = "label-required" })
                </span><span class="field">
                    @Html.DropDownListFor(model => model.NextApproverId, @Model.ApproverList)
                </span>
            </div>
        </div>
        <div class="clear">
        </div>
        <div class="button-crude">
            @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned || (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsEditAssigned)
            {
                <input type="submit" value="@Model.ButtonText" name="btnCreate" id="btnCreate" style="margin: 0 10px 0 0;" />
            }
            @*@if (Model.DeleteEnable && (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsDeleteAssigned)
                {
                    @Html.ActionLink("Delete", "DeleteBioData", new { id = Model.StaffInfoId }, new { @class = "delete-confirm", @style = "margin: 0 10px 0 0;" })
                }*@
            <div class="clear">
            </div>
        </div>
    </fieldset>
}
<div class="button-crude button-left" style="float: left;">
    @Html.ActionLink("Back to List", "Index")
</div>
<br />
<div class="clear">
</div>
<script type="text/javascript">

    @*$(document).ready(function () {
        if ('@Model.ButtonText' == "Update") {
            $('#btnCreate').hide();
        }
        else {
            $('#btnCreate').show();
        }
    });*@

    $('input[name=PassInDepExam]:radio').change(function () {
        var val = $("input[name=PassInDepExam]:checked").val();
        EnableDisable(val);
    });

    function EnableDisable(val) {
        console.log(val);
        if (val == 'False') {
            $('#ExamDate').val(null);
            $('#ExamDate').attr('disabled', true);
        }
        else {
            $('#ExamDate').removeAttr('disabled');
        }
    }
    EnableDisable('@Model.PassInDepExam.ToString()');

    $("#ExamDate").live('change', function () {

        $('input[name=PassInDepExam]:radio').attr('checked', true);
    })

</script>
