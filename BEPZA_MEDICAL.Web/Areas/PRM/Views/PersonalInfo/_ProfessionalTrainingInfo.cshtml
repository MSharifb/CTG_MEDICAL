@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.ProfessionalTrainingInfoViewModel
@*@using (Ajax.BeginForm("CreateOrProfessionalTrainingInfo", "PersonalInfo", new AjaxOptions { HttpMethod = "POST" }, new { id = "frm" }))*@

@using (Html.BeginForm("CreateOrEditProfessionalTrainingInfo", "PersonalInfo"))
{
    <fieldset>
        <div class="message">
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="@Model.errClass">
                    @Model.Message
                </div>
            }
            @Html.ValidationSummary(false, BEPZA_MEDICAL.Web.Utility.Common.ValidationSummaryHead)
        </div>
        @Html.HiddenFor(model => model.EmployeeId)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.strMode)
        @Html.Partial("_EmpTopInfo", Model.EmpTop)

        <div class="GroupBox">

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.TrainingTitle)<label class="required-field">
                        *
                    </label>
                </span><span class="field">
                    @Html.EditorFor(model => model.TrainingTitle)
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.TrainingYear)
                </span><span class="field">
                    @Html.DropDownListFor(model => model.TrainingYear, Model.TrainingYearList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "select-single" })
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.OrganizedBy)
                </span><span class="field">
                    @Html.EditorFor(model => model.OrganizedBy)
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.FromDate)
                </span><span class="field">
                    @Html.EditorFor(model => model.FromDate)
                </span>

            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.TrainingTypeId)
                </span>
                <span class="field">
                    @Html.DropDownListFor(model => model.TrainingTypeId, Model.TrainingTypeList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "select-single" })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.ToDate)
                </span><span class="field">
                    @Html.EditorFor(model => model.ToDate)
                </span>

            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.LocationId)
                </span>
                <span class="field">
                    @Html.DropDownListFor(model => model.LocationId, Model.LocationList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "select-single" })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.AcademicGradeId)
                </span><span class="field">
                    @Html.DropDownListFor(model => model.AcademicGradeId, Model.AcademicGradeList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "select-single" })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.CountryId)
                <label class="required-field">*</label>
                </span><span class="field">
                    @Html.DropDownListFor(model => model.CountryId, Model.CountryList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required select-single" })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.Position)
                </span><span class="field">
                    @Html.EditorFor(model => model.Position)
                </span>


            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.Financeby)
                </span><span class="field">
                    @Html.EditorFor(model => model.Financeby)
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.Label("Duration (Hours)")
                </span><span class="field">
                    @Html.TextBoxFor(model => model.Duration)
                </span>
                <span class="label-right">
                   @Html.LabelFor(model => model.CourseDetail)
                </span><span class="field">
                   @Html.EditorFor(model => model.CourseDetail)
                </span>
            </div>      
        </div>
        <div class="button-crude">
            @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsEditAssigned || (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned)
            {
                <input type="submit" value="@Model.ButtonText" />
            }
            @if (!(new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsViewAssigned)
            {
                @Html.ActionLink("Clear", "ProfessionalTrainingInfoIndex/" + @Model.EmployeeId.ToString(), new { IsMenu = true })
            }
            @if (Model.DeleteEnable && (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned)
            {
                @Html.ActionLink("Delete", "DeleteProfessionalTrainingInfo", new { id = Model.Id }, new { @class = "delete-confirm" })
            }
        </div>
        <div class="spacer">
        </div>
        <div class="spacer">
        </div>
        <table id="jqGrid" cellpadding="0" cellspacing="0"></table>
        <div id="jqGridPager" style="text-align: center;">
        </div>
        @Html.Partial("_ProfessionalTrainingList", Model)
    </fieldset>
}
<div class="button-crude button-left">
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">

    $(document).ready(function () {
        //$("#Duration").attr("disabled", "disabled");
        //CalculateDate();

    });

    function CalculateDate() {
        var start = $('#FromDate').datepicker('getDate');
        var end = $('#ToDate').datepicker('getDate');
        var diff = new Date(end - start);
        var year = diff / 1000 / 60 / 60;
        year = year.toFixed(2);
        $('#Duration').val(year);
    }

    $(function () {
        if( @Model.CountryId == 0){
            $("#CountryId option:contains(Bangladesh)").attr('selected', 'selected');
            $("#CountryId").trigger("chosen:updated");
        }
    });

    function DeleteConfirm() {
        return confirm('Pressing OK will delete this record. Do you want to continue?')
    }
</script>
