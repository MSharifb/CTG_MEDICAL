@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.QueryAnalyzerViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/PRM/Views/Shared/_LayoutQueryAnalyzer.cshtml";
}

@*<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>*@
@using (Html.BeginForm("Index", "DynamicQueryAnalyzer", FormMethod.Post, new { id = "frmDetails" }))
{
    <div class="GroupBox" id="message">
        @Html.ValidationSummary(false, BEPZA_MEDICAL.Web.Utility.Common.ValidationSummaryHead)
    </div>
    <div id="divOrganogramLevelTree">
        <iframe src="" style="width:99%; height:98%;border: 0px solid white;padding-right: 0px;">
            Your browser does not support iframes.
        </iframe>
    </div>
    <script type="text/javascript">

        // ******** functions for open popup *************
        $(document).ready(function () {
            $("#divEmpList").dialog({ autoOpen: false, modal: true, height: 600, width: 940, title: 'Employee', beforeclose: function (event, ui) { Closing(); } });
            $("#divOrganogramLevelTree").dialog({ autoOpen: false, modal: true, height: 600, width: 900, title: 'Organogram Level', beforeclose: function (event, ui) { Closing(); } });
        });

        function openOrganogramLevelDialog() {
            var zoneId = $("#ZoneListByUserId").val();
            if (zoneId == '') {
                alert("Select Zone/Executive Office");
                return false;
            }
            var url = '@Url.Action("OrganogramLevelTreeSearchList")?zoneId=' + zoneId;
            $.ajax({
                url: url,
                type: 'GET',
                dataType: 'text',
                timeout: 5000,
                error: function () {
                    alert('System is unable to load data please try again.');
                },
                success: function (result) {
                    $('#divOrganogramLevelTree').html(result);
                }
            });
            $("#divOrganogramLevelTree").dialog('open');
            return false;
        }


        function setOrganogramId(orgNodeid, nodeName) {
            $('#OrganogramLevelId').val('');
            $('#OrganogramLevelName').val('');
            if (nodeName != 'Bangladesh Export Processing Zones Authority') {
                $('#OrganogramLevelId').val(orgNodeid);
                $('#OrganogramLevelName').val(nodeName);
                $("#divOrganogramLevelTree").dialog('close');
            }
        }


        function openEmployee() {

            //  var url = '@Url.Action("EmployeeSearch", "Employee")?searchEmpType=active';

            var url = '@Url.Action("EmployeeSearch")' + '?Type=' + $('input:radio[id=EmploymentStatus]:checked').val();

            $.ajax({
                url: url,
                type: 'GET',
                dataType: 'text',
                timeout: 5000,
                error: function () {
                    alert('System is unable to load data please try again.');
                },
                success: function (result) {
                    $('#divEmpList').html(result);
                }
            });

            $("#divEmpList").dialog('open');

            return false;
        }

        function setData(id) {
            $('#EmployeeId').val(id)
            GetEmployeeInfo(id);
            $("#divEmpList").dialog('close');

        }

        function Closing() {

        }
        // ---------------------------------

        function GetEmployeeInfo(empId) {
            var url = '@Url.Action("GetEmployeeInfo", "EmployeeClearanceInfo")';
            if (empId > 0) {
                $.ajax({
                    url: url,
                    type: 'POST',
                    dataType: 'json',
                    data: JSON.stringify({ empId: empId }),
                    contentType: "application/json; charset=utf-8",
                    success: function (obj) {
                        $("#EmpId").val(obj.EmpId);
                        $('#EmployeeName').val(obj.EmployeeName);
                        //$('#Department').val(obj.Department);
                        //$('#Designation').val(obj.Designation);
                        //$('#Section').val(obj.Section);
                    },
                    failure: function (response) {
                        //alert(response.d);
                    }
                });
            }
        }

    </script>


    <script type="text/javascript">
        $(document).ready(function () {
            dialogOpen();
            Init();
            $(".treeview li>ul").css('display', 'none'); // Hide all 2-level ul
            $(".collapsible").on('click', function (e) {
                e.preventDefault();
                $(this).toggleClass("collapse expand");
                $(this).closest('li').children('ul').slideToggle();
            });
        });

        function dialogOpen() {
            $("#divStyle").show(); // sk
            $("#divStyle").dialog({
                autoOpen: false, modal: true, height: 25, width: 150, resizable: false, title: 'Loading',
                open: function (event, ui) { }
            });
        }

        function closeDialog() {
            //var len = parent.$(".ui-icon-closethick").length;
            //parent.$(".ui-icon-closethick").each(function (i) {
            //    if (i == len - 1) {
            //        $(this).click();
            //    }

            //});
            $("#divStyle").dialog('close');
            return false;
        }

        function Init() {
            $("#divReportView").dialog({ autoOpen: false, modal: true, height: 500, width: 800, resizable: false, title: 'Query Analyzer', beforeclose: function (event, ui) { Closing(); } });
            $("#divSingleParam").dialog({
                autoOpen: false, modal: true, height: 800, width: 875, resizable: false, title: 'Report',
                close: function (ev, ui) {
                    $('input[name=Multi]').attr('checked', true);
                    $('input[name=Single]').attr('checked', false);
                },
                beforeclose: function (event, ui)
                { Closing(); }
            });

            $("#EmploymentStatus").val($('#empStatus:checked').val());

            if ($("#IsIndividual").is(":checked")) {
                if ($('#IsIndividual:checked').val() == 'False') {
                    $('#imgEmpSearch').hide();
                    $('#EmployeeId').val(0);
                    $('#EmpId').val('');
                    //$('#EmployeeName').val('');
                }

            }
        }

        function Closing() {

        }

        function showValue(obj) {
            var addRemove = false;
            if (obj.checked) {
                addRemove = true;
            }

            $("#Table").val($(obj).attr('table'));
            $("#TableName").val($(obj).attr('tableName'));
            $("#Column").val($(obj).attr('column'));
            $("#ColumnName").val($(obj).attr('columnName'));
            $("#AddRemove").val(addRemove);
            Selection();

        }

        function Selection() {
            var targetDiv = '#dvSelection';
            var url = '@Url.Action("SelectionCriteria")';
            var form = $('form#frmDetails');
            var serializedForms = form.serialize();
            dialogOpen();
            $("#divStyle").dialog('open');
            $.post(url, serializedForms, function (result) {
                $(targetDiv).html(result);
                var addRemove = $("#AddRemove").val();
                if (addRemove == "false") {
                    Logic();
                }
                else {
                    closeDialog();
                }
            }, "html");

            return false;

        }

        function SelectionLogic(obj) {
            var addRemove = false;
            if (obj.checked) {
                addRemove = true;
            }

            $("#Table").val($(obj).attr('table'));
            $("#TableName").val($(obj).attr('tableName'));
            $("#Column").val($(obj).attr('column'));
            $("#ColumnName").val($(obj).attr('columnName'));
            $("#AddRemove").val(addRemove);

            $("#divStyle").dialog('open');
            Logic();
        }

        function Logic() {
            var targetDiv = '#dvLogic';
            var url = '@Url.Action("SelectionLogic")';
            var form = $('#frmDetails');
            var serializedForms = form.serialize();

            $("#divStyle").dialog('open');
            $.post(url, serializedForms, function (result) {
                $(targetDiv).html(result);
                closeDialog();
                InitilizeLogic();
            }, "html");

            return false;
        }


        function ShowReport() {
            $('#ReportTitle').removeClass('border-red');
            $('#OrganogramLevelName').removeClass('border-red');
            var strReportHTML = "";
            $("#divReportView").text(strReportHTML);

            $("#divReportView").dialog({
                autoOpen: false, modal: true, height: 600, width: 900, closeOnEscape: false, resizable: false, title: 'Report',
                my: "left top", at: "left bottom", of: window,
                beforeclose: function (event, ui) { Closing(); }
            });

            if ($('#ReportTitle').val() == '' || $('#OrganogramLevelId').val() == null) {
                alert("Please enter Report Title");
                $('#ReportTitle').addClass('border-red');
                return false;
            }

            if (isValid() == false) {
                alert("Please select Employee Information from Category Tree");
                return false;
            }

            $(".scopelogicvalue").each(function () {
                var value = $(this).val();
                if (value == "" || value == null) {
                    var dd = $(this).addClass('border-red');
                    e.preventDefault();
                }
                else {
                    $(this).removeClass('border-red');
                }
            });
            //debugger;
            window.scrollTo(0, 0);
            executeAction('frmDetails', '@Url.Action("GetReportData")', 'divReportView');
            $('#divReportView').dialog('open');
            dialogOpen();
            console.log("Ok");
        }

        function ClearAll() {
            window.location.href = window.location.href.replace("#", "");
            return false;
        }

        function setEmpStatus() {
            $("#EmploymentStatus").val($('#empStatus:checked').val());
        }

        function chkIndividual() {
            if ($('#IsIndividual:checked').val() == 'False') {
                $('#imgEmpSearch').hide();
                $('#EmployeeId').val(0);
                $('#EmpId').val('');
                //$('#EmployeeName').val('');
            }
            else {
                $('#imgEmpSearch').show();
            }
        }

        function isValid() {
            var length = $("#QueryAnalyzerItemsList_Count").val();
            var found = false;
            for (var i = 0; i < length; i++) {
                if ($("#QueryAnalyzerItemsList_" + i + "__CategoryTable").val() == "PRM_VIEW_EmploymentInfo") {
                    found = true;
                    break;
                }
            }

            return found;
        }

    </script>



    <div id="dvDetails">
        @Html.HiddenFor(model => model.Table)
        @Html.HiddenFor(model => model.TableName)
        @Html.HiddenFor(model => model.Column)
        @Html.HiddenFor(model => model.ColumnName)
        @Html.HiddenFor(model => model.AddRemove)
        @Html.HiddenFor(model => model.OrganogramLevelId)
        @Html.HiddenFor(model => model.EmploymentStatus)
        @Html.HiddenFor(model => model.EmployeeId)

        <div class="clear"></div>
        <div class="">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ReportTitle)
                        @Html.TextBoxFor(model => model.ReportTitle)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ReportDate)<br />
                        @Html.EditorFor(model => model.ReportDate)
                    </div>

                    <div class="form-group">
                        <fieldset>
                            <legend>Category Tree</legend>
                            <div class="treeview">
                                @foreach (var table in @Model.QueryAnalyzerTableList)
                                {
                                <ul>
                                    <li>
                                        <span class="collapse collapsible">&nbsp;</span>
                                        <span>
                                            <label for="@table.strTableName">@table.strTableTitle</label>
                                        </span>
                                        @foreach (var item in @Model.QueryAnalyzerTableItemsList.Where(q => q.intTableID == table.intTableID))
                                            {
                                            <ul>
                                                <li>
                                                    <input type="checkbox" name="selectedObjects" tablename="@table.strTableTitle" table="@table.strTableName" columnname="@item.strFieldTitle" column="@item.strFieldName" value="@item.intTableID" id="@item.intTableID"
                                                           onclick="showValue(this);" />
                                                    <label for="@item.strFieldName">@item.strFieldTitle</label>
                                                </li>
                                            </ul>

                                            }
                                    </li>
                                </ul>
                                }
                            </div>
                        </fieldset>
                    </div>

                    <div class="clear"></div>
                    <fieldset>
                        <legend>Selected Query Items</legend>
                        <div id="dvSelection" style="height: 300px; overflow-y: auto;overflow-x:hidden">
                            @Html.Partial("~/Areas/PRM/Views/QueryAnalyzer/_Selection.cshtml")
                        </div>
                    </fieldset>
                </div>


                <div class="col-sm-6">
                    <fieldset>
                        <legend>Organogram Tree</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ZoneListByUserId)
                            @Html.DropDownListFor(model => model.ZoneListByUserId, Model.ZoneListByUser, @String.Format("{0}", Content.DDLOptionalAllLabel()), new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label>  Level Name</label>
                            @*@Html.TextBoxFor(model => model.OrganogramLevelName, new { @class = "read-only", @readonly = true, @style = "width:95%" })*@
                            @Html.TextBoxFor(model => model.OrganogramLevelName, new { @class = "read-only", @readonly = true, @style = "width:95%" })
                            <img class="search-img-pos" src='@Url.Content("~/Content/Images/btn_search.gif")' alt="Search" onclick="return openOrganogramLevelDialog();" />

                        </div>
                        <div class="clear"></div>
                        @*@Html.Partial("~/Areas/PRM/Views/OrganogramLevel/_TreeViewDisplay.cshtml")*@
                    </fieldset>

                    <div class="clear"></div>
                    <fieldset>
                        <legend>Employee Status</legend>
                        @Html.RadioButton("empStatus", "All", new { @onclick = "setEmpStatus()", @checked = true })
                        @Html.Label("All")
                        @Html.RadioButton("empStatus", "Active", new { @onclick = "setEmpStatus()" })
                        @Html.Label("Active")
                        @Html.RadioButton("empStatus", "Inactive", new { @onclick = "setEmpStatus()" })
                        @Html.Label("Inactive")
                    </fieldset>

                    <div class="clear"></div>
                    <fieldset>
                        <legend>Employee Information</legend>
                        <div class="form-group">
                            @Html.RadioButtonFor(model => model.IsIndividual, "False", new { @class = "chkIndividual", onclick = "return chkIndividual();", @checked = true })@Html.Label("All Employee")
                            <br />
                            @Html.RadioButtonFor(model => model.IsIndividual, "True", new { @class = "chkIndividual", onclick = "return chkIndividual();" }) @Html.Label("Individual Employee")
                        </div>
                        <div class="clear"></div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmpId)
                            @Html.TextBoxFor(model => model.EmpId, new { @class = "read-only", @readonly = true, @style = "width:95%" })
                            <img src='@Url.Content("~/Content/Images/btn_search.gif")' id="imgEmpSearch" alt="Search" onclick="return openEmployee();" />
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeName)
                            @Html.TextBoxFor(model => model.EmployeeName, new { @class = "read-only", @readonly = true })
                        </div>
                    </fieldset>
                    <div class="clear"> </div>
                    <fieldset>
                        <legend>Logic Apply on</legend>
                        <div id="dvLogic" style="height: 300px; overflow-y: auto;overflow-x:hidden">
                            @Html.Partial("~/Areas/PRM/Views/QueryAnalyzer/_Logic.cshtml")
                        </div>
                    </fieldset>

                </div>
            </div>
        </div>

    </div>

    <div class="clear"></div>
    <div class="button-crude">
        <a  href="javascript:" class="button btn btn-primary" onclick="ShowReport();"><span>Process</span></a>
        <a href="javascript:" class="button btn btn-primary" onclick="ClearAll()"><span>Clear</span></a>
    </div>

    <div id="divEmpList">
        <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white;
        padding-right: 0px;">
            <p>
                Your browser does not support iframes.
            </p>
        </iframe>
    </div>

    <div id="divReportView">
        <iframe id="styleReportView" src="" width="99%" height="98%" style="border: 0px solid white;">
            <p>
                Your browser does not support iframes.
            </p>
        </iframe>
    </div>

    <div id="divSingleParam">
        <iframe id="iSingleParam" src="" width="99%" height="98%" style="border: 0px solid white;">
            <p>
                Your browser does not support iframes.
            </p>
        </iframe>
    </div>

    <div id="divStyle">Loading...</div>

}

