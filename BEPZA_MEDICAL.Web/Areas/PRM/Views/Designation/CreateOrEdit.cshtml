@model BEPZA_MEDICAL.Web.Areas.PRM.ViewModel.DesignationViewModel
@{
    Layout = "~/Areas/PRM/Views/Shared/_Layout.cshtml";
}
<style>
    .TextArea {
        width: 600px;
    }
</style>
<script type="text/javascript">
    $(function () {
        var Url = window.location.href;
        $("#btnClear").live("click", function (event) {
            event.preventDefault();
            window.location.href = Url;
        });
    });
</script>

<script type="text/javascript">

    $(function () {

        if ('@Model.ActionType' == 'Edit') {
            $('#btnSave').hide();
            $('#btnUpdate').show();
        }
        else {
            $('#btnUpdate').hide();
        }
    });

    if ('@Model.ErrMsg' != "") {

        if ('@Model.IsError' == '1') {

            //            $('#message').html("<b style='color:red'>" + '@Model.ErrMsg' + "</b>");
        }
        else {
            $('#message2').html("<b style='color:green'>" + '@Model.ErrMsg' + "</b>");
        }
    }

</script>
<script type="text/javascript">

    $(document).ready(function () {

        $("#SortingOrder").keydown(function (event) {

            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
            (event.keyCode == 65 && event.ctrlKey === true) ||
            (event.keyCode >= 35 && event.keyCode <= 39)) {
                return;
            }
            else {
                if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                    event.preventDefault();
                }
            }
        });

        //$("#Rank").keydown(function (event) {

        //    if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
        //    (event.keyCode == 65 && event.ctrlKey === true) ||
        //    (event.keyCode >= 35 && event.keyCode <= 39)) {
        //        return;
        //    }
        //    else {
        //        if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
        //            event.preventDefault();
        //        }
        //    }
        //});
        //});

        //$(function () {

        $('#GradeId').live("change", function (e) {

            var JobGradeId = $('#GradeId').val();

            if ($(this).val() != '') {

                var url = '@Url.Action("GetPayScaleDetailsByGradeId", "Designation")' + '?Id=' + JobGradeId;
                $.get(url, function (response) {

                    $('#PayScaleDetails').val(response);

                });
            }
        });

        $("#PayScaleDetails").css('background-color', '#F2F5F8');

    });

</script>

<div>
    @using (Html.BeginForm(Model.ActionType, "Designation", FormMethod.Post, new { id = "frm" }))
    {
        <div class="message">
            @if (!string.IsNullOrEmpty(Model.ErrMsg))
            {
                if (@Model.IsError == 1)
                {
                    <div class="failed">
                        @Model.ErrMsg
                    </div>
                }
                else
                {
                    <div class="success">
                        @Model.ErrMsg
                    </div>
                }
            }
            @Html.ValidationSummary(false, BEPZA_MEDICAL.Web.Utility.Common.ValidationSummaryHead)
        </div>

        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @*@Html.HiddenFor(model => model.ZoneInfoId)*@
                    @Html.HiddenFor(model => model.ActionType)
                    @Html.LabelFor(model => model.Name)                   
                    <label style='color: red'>*</label>
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.Name)
                </span>
                <span class="label-right">
                    @*@Html.LabelFor(model => model.Rank)
                        <label style='color: red'>*</label>*@
                </span>
                <span class="field">
                    @*@Html.TextBoxFor(model => model.Rank, new { @style = "width:50px" })*@
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.NameB)
                    <label style='color: red'>*</label>
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.NameB)
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.GradeId)
                    <label style='color: red'>*</label>
                </span>
                <span class="field">
                    @Html.DropDownListFor(model => model.GradeId, Model.JobGradeList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required" })
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.PayScaleDetails)
                    <label style='color: red'>*</label>
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.PayScaleDetails, new { @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmployeeClassId)
                    <label style='color: red'>*</label>
                </span>
                <span class="field">
                    @Html.DropDownListFor(model => model.EmployeeClassId, Model.EmployeeClassList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required" })
                </span>
            </div>

            <div class="row">
                <span class="label">@Html.LabelFor(model => model.JobDescription)</span> <span class="field">
                    @Html.TextAreaFor(model => model.JobDescription, new { @class = "TextArea" })
                </span>
            </div>
            <div class="row">
                <span class="label">@Html.LabelFor(model => model.Remarks)</span> <span class="field">
                    @Html.TextAreaFor(model => model.Remarks, new { @class = "TextArea" })
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.SortingOrder)
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.SortingOrder, new { @style = "width:50px" })
                </span>
            </div>
            
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.ShortName)
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.ShortName)
                </span>
            </div>

            <div class="spacer">
            </div>
            <div class="clear">
            </div>
        </div>
        <div class="GroupBox">
            <div class="button-crude">
                @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned)
                {
                    <input type="submit" value="Save" id="btnSave" name="btnSubmit" style="margin-right: 8px;" />
                    <input type="submit" value="Update" id="btnUpdate" name="btnSubmit" />
                }
                <input type="button" value="Clear" id="btnClear" name="btnClear" />
            </div>
            <div class="clear">
            </div>
        </div>
    }
</div>

<div class="button-crude button-left" style="margin: 5px">
    @Html.ActionLink("Back to List", "Index", "Designation")
</div>
