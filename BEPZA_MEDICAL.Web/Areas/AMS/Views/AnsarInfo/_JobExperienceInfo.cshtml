@model BEPZA_MEDICAL.Web.Areas.AMS.ViewModel.JobExperienceInfoViewModel
@*@using (Ajax.BeginForm("CreateOrEditJobExperienceInfo", "PersonalInfo", new AjaxOptions { HttpMethod = "POST" }, new { id = "frm" }))*@
@using (Html.BeginForm("CreateOrEditJobExperienceInfo", "AnsarInfo"))
{
    <fieldset>
        <div class="message">
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="@Model.errClass">
                    @Model.Message
                </div>
            }
            @Html.ValidationSummary(false, BEPZA_MEDICAL.Web.Utility.Common.ValidationSummaryHead)
        </div>
        @Html.HiddenFor(model => model.EmployeeId)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.strMode)
        @Html.Partial("_EmpTopInfo", Model.EmpTop)
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.Organization1)<label class="required-field">
                        *
                    </label>
                </span>
                <span class="field" style="width:80%">
                    @Html.EditorFor(model => model.Organization1)
                </span>
                @*<span class="label-right">
                    @Html.LabelFor(model => model.FromDate)<label class="required-field">
                        *
                    </label>
                </span><span class="field">
                    @Html.EditorFor(model => model.FromDate)
                </span>*@                
            </div>
            <div class="row">
                <span class="label" >
                    @Html.LabelFor(model => model.Address)
                </span>
                <span class="field" style="width:80%">
                    @Html.TextAreaFor(model => model.Address, new { @maxlength = 200 })
                </span>
                @*<span class="label-right">
                    @Html.LabelFor(model => model.EndDate)<label class="required-field">
                        *
                    </label>
                </span><span class="field">
                    @Html.EditorFor(model => model.EndDate)
                </span>
             <div class="clear"></div>*@
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.FromDate)<label class="required-field">
                        *
                    </label>
                </span>
                <span class="field">
                    @Html.EditorFor(model => model.FromDate)
                </span>  
                <span class="label-right">
                    @Html.LabelFor(model => model.EndDate)<label class="required-field">
                        *
                    </label>
                </span><span class="field">
                    @Html.EditorFor(model => model.EndDate)
                </span>
                @*<div class="clear"></div>*@
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.OrganizationTypeId)<label class="required-field">
                        *
                    </label>
                </span><span class="field">
                    @Html.DropDownListFor(model => model.OrganizationTypeId, Model.OrganizationTypeList, @String.Format("{0}", Content.DDLOptionalLabel()))
                </span>              
                <span class="label-right">
                    @Html.Label("Duration")
                </span>
                <span class="field">
                    @Html.HiddenFor(model => model.Duration)
                    @Html.TextBoxFor(model => model.StrDuration, new { @readonly = true })
                </span>
            </div>            
 
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.Responsibility)
                </span>
                <span class="field">
                    @Html.TextAreaFor(model => model.Responsibility, new { @maxlength = 200 })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.Remarks)
                </span>
                <span class="field">
                    @Html.TextAreaFor(model => model.Remarks, new { @maxlength = 200 })
                </span>
                <div class="clear"></div>
            </div>
            

        </div>
        <div class="button-crude">
            @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsEditAssigned || (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned)
            {
                <input type="submit" value="@Model.ButtonText" />
            }&nbsp;
            @if (!(new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsViewAssigned)
            {
                @Html.ActionLink("Clear", "JobExperienceInfoIndex/" + @Model.EmployeeId.ToString(), new { IsMenu = true })
            } &nbsp;
            @if (Model.DeleteEnable && (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned)
            {
                @Html.ActionLink("Delete", "DeleteJobExperienceInfo", new { id = Model.Id }, new { @class = "delete-confirm" })
            }
        </div>
        <div class="spacer">
        </div>
        <div class="spacer">
        </div>
        <table id="jqGrid" cellpadding="0" cellspacing="0"></table>
        <div id="jqGridPager" style="text-align: center;">
        </div>
        @Html.Partial("_JobExperienceList", Model)
    </fieldset>
}
<div class="button-crude button-left">
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">

    $(document).ready(function () {
        $("#Duration").attr("disabled", "disabled");
        //CalculateDate();

    });


    function DeleteConfirm() {

        return confirm('Pressing OK will delete this record. Do you want to continue?')
    }

    function CalculateDuration() {


    }

    function CalculateDate() {
        if ($('#FromDate').val() != '' && $('#EndDate').val() != '') {
            var start = $('#FromDate').datepicker('getDate');
            var end = $('#EndDate').datepicker('getDate');
            var diff = new Date(end - start);
            var year = diff / 1000 / 60 / 60 / 24 / 365;
            year = year.toFixed(2);
            $('#Duration').val(year);

            $.get('@Url.Action("GetDateDiff", "AnsarInfo")', { startDate: $('#FromDate').val(), endDate: $('#EndDate').val() }, function (data) {
                if (data.Duration != null) {
                    $('#StrDuration').val(data.Duration);
                }
            });
        }
        else {
            $('#Duration').val("");
            $('#StrDuration').val("");
        }
    }

    $(function () {

        $('#FromDate').live("change", function () {
            CalculateDate();
        })

        $('#EndDate').live("change", function () {
            CalculateDate();
        })

    });

</script>

<script type="text/javascript">

    $(function () {

        if ('@Model.InactiveDate' != '') {
            fnDisableEditMode();
            $(".delete-confirm").hide();
        }

    });

</script>