@model BEPZA_MEDICAL.Web.Areas.CPF.Models.MembershipInformation.MembershipInformationViewModel
@using BEPZA_MEDICAL.Web.Helpers
<script src="@Url.Content("~/Scripts/listEditor.js")" type="text/javascript"></script>
<script type="text/javascript">

    $(document).ready(function () {

        showErrMsg();
    });


    function showErrMsg() {
        if ('@Model.IsError' == "1") {
            var msg = '@Model.ErrMsg'.replace(/#/gi, "<br/>* ");
            $("#message").html("<b>" + msg + "</b>").css("color", "red");
        }
    }

</script>
<script type="text/javascript">
    $(function () {

        $("#WitnessMembershipID").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("AutoCompleteMembershipList", "MembershipInformation")',
                    type: 'POST',
                    dataType: 'json',
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.MembershipID, value: item.MembershipID };
                        }));
                    }
                });
            },
            select: function (event, ui) {
                $('#WitnessMembershipID').val(ui.item ? ui.item.value : '');
                GetMembershipInformation(ui.item.value);
            }
        });
        $("#WitnessMembershipID").keydown(function (event) {
            if (event.keyCode == 46 || event.keyCode == 8) {
                $('#WitnessName').val('');
                $('#WitnessAddress').val('');
            }
        });

    });

    function GetMembershipInformation(witnessMembershipID) {

        var url = '@Url.Action("GetMembershipInformation", "MembershipInformation")';

        if (witnessMembershipID != '') {
            $.post(url, { membershipID: witnessMembershipID }, function (obj) {
                if (obj.Result == false) {
                    $('#WitnessName').val('');
                    $('#WitnessAddress').val('');
                    alert('System is unable to load data please try again.');
                }
                else if (obj.Result == 'Inactive') {
                    $('#WitnessName').val('');
                    $('#WitnessAddress').val('');

                    alert('The selected member is either inactive or not approved.');
                }
                else {
                    $('#WitnessMembershipID').val(obj.WitnessMembershipID);
                    $('#WitnessName').val(obj.WitnessName);
                    $('#WitnessAddress').val(obj.WitnessAddress);
                }
            }, "json");
        }
        return false;
    }

</script>
<div class="GroupBox">
    @if (Model.Mode == "Edit")
    {
        @Html.HiddenFor(model => model.ApprovalStatusId)
        @Html.HiddenFor(model => model.MembershipStatus)
    }
    <fieldset>
        <legend>Applicant Information</legend>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.EmployeeCode)<label style='color: red'>*</label>
            </span><span class="field">
                @Html.HiddenFor(model => model.EmployeeId)
                @Html.TextBoxFor(model => model.EmployeeCode, new { @class = "read-only", @readonly = true, @style = "text-align:right;" })
            </span><span class="label-right">
                @Html.LabelFor(model => model.OfficeName)
            </span><span class="field">
                @Html.EditorFor(model => model.OfficeName)
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.EmployeeName)
            </span><span class="field">
                @Html.EditorFor(model => model.EmployeeName)
            </span>
            <span class="label-right">
                @Html.LabelFor(model => model.DepartmentName)
            </span>
            <span class="field">
                @Html.EditorFor(model => model.DepartmentName)
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.DesignationName)
            </span><span class="field">
                @Html.EditorFor(model => model.DesignationName)
            </span>
            <span class="label-right">
                @Html.LabelFor(model => model.SectionName)
            </span><span class="field">
                @Html.EditorFor(model => model.SectionName)
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.JoiningDate)
            </span><span class="field">
                @Html.EditorFor(model => model.JoiningDate)
            </span><span class="label-right">
                @Html.LabelFor(model => model.PermanentDate)

            </span><span class="field">
                @Html.EditorFor(model => model.PermanentDate)

            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.PresentPayScale)
            </span><span class="field">
                @Html.EditorFor(model => model.PresentPayScale)
            </span><span class="label-right">
                @Html.LabelFor(model => model.PresentBasicPay)
            </span><span class="field">
                @Html.TextBoxFor(model => model.PresentBasicPay)
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.Nationality)
            </span><span class="field">
                @Html.EditorFor(model => model.Nationality)
            </span><span class="label-right">
                @Html.LabelFor(model => model.DateOfBirth)
            </span><span class="field">
                @Html.EditorFor(model => model.DateOfBirth)
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.PresentAddress)
            </span>
            <span class="field">
                @Html.TextAreaFor(model => model.PresentAddress, new { @maxlength = "500", @class = @"address-area", @readonly = true })
            </span>
            <span class="label-right">
                @Html.LabelFor(model => model.PermanentAddress)
            </span><span class="field">
                @Html.TextAreaFor(model => model.PermanentAddress, new { @maxlength = "500", @class = @"address-area", @readonly = true })
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.EmployeeCategory)
            </span>
            <span class="field">
                @Html.EditorFor(model => model.EmployeeCategory)
            </span>
        </div>
    </fieldset>
</div>
<fieldset>
    <legend></legend>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.ApplicationDate)<label style='color: red'>*</label>
        </span>
        <span class="field">
            @Html.EditorFor(model => model.ApplicationDate)
        </span>
        <span class="label-right">@Html.LabelFor(model => model.MembershipID)<label style='color: red'>*</label></span>
        <span class="field">
            @Html.EditorFor(model => model.MembershipID, new { @class = "required" })
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.BankId)
        </span>
        <span class="field">
            @Html.DropDownListFor(model => model.BankId, Model.BankList, @String.Format("{0}", Content.DDLOptionalLabel()))
        </span>
        <span class="label-right">@Html.LabelFor(model => model.BankBranchId)</span>
        <span class="field">
            @Html.DropDownListFor(model => model.BankBranchId, Model.BankBranchList, @String.Format("{0}", Content.DDLOptionalLabel()))
        </span>
    </div>
    <div class="row">
        <span class="label">@Html.LabelFor(model => model.AccountNumber)</span>
        <span class="field">@Html.EditorFor(model => model.AccountNumber)</span>
    </div>
</fieldset>
<fieldset>
    <legend>Membership Witness</legend>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.WitnessMembershipID)
        </span><span class="field">
            @Html.EditorFor(model => model.WitnessMembershipID)
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.WitnessName)
        </span><span class="field">
            @Html.EditorFor(model => model.WitnessName)
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.WitnessAddress)
        </span><span class="field">
            @Html.TextAreaFor(model => model.WitnessAddress, new { @maxlength = "500", @readonly = true, @class = @"address-area" })
        </span>
    </div>
</fieldset>
<fieldset>
    @if (Model.IsConfigurableApprovalFlow)
    {

        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.ApprovedById)<label style='color: red'>*</label>
            </span>
            <span class="field-LargeWidth">
                @Html.DropDownListFor(model => model.ApprovedById, @Model.ApproverList, new { @class = "required" })
            </span>
        </div>
    }
    else
    {
        <div class="row">
            <span class="label">
                @Html.HiddenFor(model => model.ApprovedById)
                @Html.LabelFor(model => model.ApprovedById)
            </span>
            <span class="field">
                @Html.EditorFor(model => model.ApproverEmpId)
                <img src='@Url.Content("~/Content/Images/btn_search.gif")' onclick="return openEmployee();" alt="Find" title="Find" />
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.ApproverName)
            </span>
            <span class="field">
                @Html.EditorFor(model => model.ApproverName)
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.ApproverDesignation)
            </span>
            <span class="field">
                @Html.EditorFor(model => model.ApproverDesignation)
            </span>
        </div>
    }
</fieldset>

<fieldset>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.MembershipAppliedByInOffline)
        </span>
        <span class="field-LargeWidth">
            @Html.TextBoxFor(model => model.MembershipAppliedByInOffline, new { @class = "read-only", @readonly = true })
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.MembershipAppliedDateInOffline)
        </span><span class="field">
            @Html.TextBoxFor(model => model.MembershipAppliedDateInOffline, new { @class = "read-only", @readonly = true })
        </span>
    </div>
</fieldset>

<div id="divEmpList">
    <iframe id="styleAdvance" width="99%" height="98%" style="border: 0 solid white;
        padding-right: 0;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        $("#divEmpList").dialog({ autoOpen: false, modal: true, height: 600, width: 900, title: 'Employee', beforeclose: function (event, ui) { Closing(); } });
        showErrMsg();

    });


    function showErrMsg() {
        if ('@Model.IsError' == "1") {
            var msg = '@Model.ErrMsg'.replace(/#/gi, "<br/>* ");
            $("#message").html("<b>" + msg + "</b>").css("color", "red");
        }
    }


    function openEmployee() {

        var url = '@Url.Action("ActiveEmployeeSearchList", "Employee")';
        url = url.replace('CPF', 'PRM');

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'text',
            error: function () {
                alert('System is unable to load data please try again.');
            },
            success: function (result) {
                $('#divEmpList').html(result);
            }
        });

        $("#divEmpList").dialog('open');
        return false;
    }

    function setData(id) {
        $('#ApprovedById').val(id);
        GetEmployeeInfo();
        $("#divEmpList").dialog('close');
    }


    function Closing() {

    }

    function GetEmployeeInfo() {
        var empId = $('#ApprovedById').val();

        var url = '@Url.Action("GetEmployeeInfo", "MembershipApplication")';
        var form = $('#frm');
        var serializedForm = form.serialize();

        $('#ApproverEmpId').val('');
        $('#ApproverName').val('');
        $('#ApproverDesignation').val('');
        if (empId > 0) {
            $.post(url, serializedForm, function (obj) {

                if (obj.Result == 'InActiveEmployee') {
                    alert('Employee must be active for membership.');
                    return;
                }

                else {
                    $("#ApproverEmpId").val(obj.EmployeeId);
                    $('#ApproverName').val(obj.EmployeeName);
                    $("#ApproverDesignation").val(obj.Designation);
                }

            }, "json");

        }
        return false;
    }

</script>

<style type="text/css">
    .address-area {
        background: #F2F5F8;
    }

    #JoiningDate, #PermanentDate, #PresentBasicPay input[type='text'] {
        height: 25px !important;
    }

    #PresentBasicPay {
        background: #F2F5F8;
    }
</style>

