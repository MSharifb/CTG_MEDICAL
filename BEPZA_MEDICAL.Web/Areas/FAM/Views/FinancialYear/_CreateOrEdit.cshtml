@using BEPZA_MEDICAL.Web.Areas.FAM.Models.FinancialYearInfo
@model FinancialYearInformationModel
@using (Ajax.BeginForm("Index", null, new AjaxOptions { HttpMethod = "POST", OnComplete = "OnComplete" }, new { id = "frm", action = Url.Action(Model.Mode == "Create" ? "Create" : "Edit") }))
{


    @Html.HiddenFor(m => m.Id)   
    
    <div class="GroupBox">
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.FinancialYearName)
                <label style='color: red'>
                    *</label>
            </span><span class="field">
                @Html.EditorFor(model => model.FinancialYearName)
            </span><span class="label-right">
                @Html.LabelFor(model => model.IsActive)
            </span><span class="field">
                @Html.EditorFor(model => model.IsActive)
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.FinancialYearStartDate)
                <label style='color: red'>
                    *</label>
            </span><span class="field">
                @Html.EditorFor(model => model.FinancialYearStartDate)
                @Html.HiddenFor(m => m.FinancialYearStartDate)
            </span><span class="label-right">
                @Html.LabelFor(model => model.FinancialYearEndDate)
                <label style='color: red'>
                    *</label>
            </span><span class="field">
                @Html.EditorFor(model => model.FinancialYearEndDate)
                @Html.HiddenFor(m => m.FinancialYearEndDate)
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.FinancialYearVoucherFormat)
                <label style='color: red'>
                    *</label>
            </span><span class="field">
                @Html.EditorFor(model => model.FinancialYearVoucherFormat)
            </span><span class="label-right">
                @Html.LabelFor(model => model.IsClose)
            </span><span class="field">
                @Html.EditorFor(model => model.IsClose)
            </span>
        </div>
    </div>
    
    <div class="clear">
    </div>
    <div class="button-crude">
        @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned)
        {
            <input type="submit" value="Save" id="btnSave" name="btnSubmit" style="display: none;" />
        }
        else
        {
        }
        @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsEditAssigned)
        {
            <input type="submit" value="Update" id="btnUpdate" name="btnSubmit" style="display: none;" />
        }
        <input type="button" value="Clear" id="btnClear" name="btnClear" onclick="document.getElementById('frm').reset();" />
        <div class="clear">
        </div>
    </div>
    
}
<div class="button-crude button-left">
    @Ajax.ActionLink("Back to List", "BackToList", new AjaxOptions { OnComplete = "OnCompleteBacktoList" })
</div>
<div class="clear">
</div>
<script type="text/javascript">

 $('#IsActive').live('click', function () { 
    if ($("#IsActive").attr('checked')==1)
    {
    $('#IsClose').attr('checked', false);
    }
});

$('#IsClose').live('click', function(){
    if($('#IsClose').attr('checked')==1)
    {
    $('#IsActive').attr('checked', false);
    }
});

$(function () {
    var mode = '@Model.Mode';
    $.validator.unobtrusive.parse('#frm');

    if (mode == 'Create') {
        $('#btnSave').show();
        $('#btnUpdate').hide();
    }
    else {
        $('#FinancialYearStartDate').attr('disabled',true)
        $('#FinancialYearEndDate').attr('disabled',true)
        $('.ui-datepicker-trigger').hide();
        $('#btnUpdate').show();
        $('#btnSave').hide();
        
    }    
});



//$('#IsActive').live('click',function(){
//        alert('1');
//        if('#IsActive'.checked)
//        {
//            alert('2');
//            $('#IsClose').attr('checked', false);
//        }
//    });

function OnCompleteBacktoList(content) {
    if (content.statusText == 'OK') {
        $('.search-content').hide();
        $('.frm-content').html(content.responseText);
    } else {
        $('#message').text('An error has occoured. Please try again.').css({ 'color': 'red' });
    }
}

function OnComplete(content) {
    var data = content.responseText;
    if (data.toLowerCase().indexOf("updated") >= 0) {
                    
            $("#message").show();
            $('#message').text(data).css({ 'color':'green' });
            $("#message").delay(3000).hide('slow');

        $.get(
                "@Url.Action("BackToList")",
                {},
                function(r){
                    if(r != ''){
                        //$('.search-content').show();
                        $('.frm-content').html(r);
                    }
                    else{
                        //$('.search-content').hide();
                        $("#message").show();
                        $('#message').text(data).css({ 'color':'red' });
                        $("#message").delay(3000).hide();
                    }
                }
            );
    }
    else if (data.toLowerCase().indexOf("saved") >= 0) {
        $("#message").show();
        $('#message').text(data).css({ 'color':'green' });
        $("#message").delay(3000).hide('slow');

        $.get(
                "@Url.Action("BackToList")",
                {},
                function(r){
                    if(r != ''){
                        //$('.search-content').show();
                        $('.frm-content').html(r);
                    }
                    else{
                        //$('.search-content').hide();
                        $("#message").show();
                        $('#message').text(data).css({ 'color':'red' });
                        $("#message").delay(3000).hide();
                    }
                }
            );
    }
    else {
        //$('.search-content').hide();
        $("#message").show();
        $('#message').text(data).css({ 'color':'red' });
        $("#message").delay(3000).hide('slow');
    }
}


</script>
<style>
    .label
    {
        width: 185px;
    }
    .label-right
    {
        width: 185px;
    }
</style>
@*@model BEPZA_MEDICAL.Web.Areas.FAM.Models.VendorInfo.VendorInformationModel
@using BEPZA_MEDICAL.Web.Helpers
<script src="@Url.Content("~/Scripts/listEditor.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        $(".addItem").click(function () {
            $(".validation-summary-errors ").empty();
        });
    });
</script>
<table width="100%" class="contenttable">
    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.VendorName)
                <label style='color: red'>
                    *</label>
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.VendorName)
            </div>
        </td>

        <td >
            <div class="editor-label">
                @Html.LabelFor(model => model.ContactPerson)
            </div>
        </td>
        <td >
            <div class="editor-field" >
                @Html.EditorFor(model=>model.ContactPerson)
            </div>
        </td>

    </tr>


    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ContactNumber)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ContactNumber)
            </div>
        </td>

        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.EMail)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model=> model.EMail)
            </div>
        </td>

        <td>
        
        </td>

    </tr>

    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model=> model.Address)            
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model=>model.Address)            
            </div>
        </td>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model=>model.IsActive)            
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model=>model.IsActive)
            </div>
        </td>

    </tr>
</table>

*@