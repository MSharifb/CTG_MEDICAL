@model BEPZA_MEDICAL.Web.Areas.SMS.ViewModel.SecurityPersonnelEmpInfoViewModel
@using (Html.BeginForm(Model.ActionType, "SecurityPersonnelInfo"))
{
    <fieldset>
        <div class="message">
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="@Model.ErrorClass">
                    @Model.Message
                </div>
            }
            @Html.ValidationSummary(false, BEPZA_MEDICAL.Web.Utility.Common.ValidationSummaryHead)
        </div>
        <div class="GroupBox">
            <div class="leftColumn">
                <div class="row">
                    <span class="label" style="width:32%">
                        @Html.HiddenFor(model => model.EmployeeId)
                        @Html.LabelFor(model => model.BEPZAID)
                    </span><span class="field" style="width:60%">
                        @Html.TextBoxFor(model => model.BEPZAID, new { @class = "read-only", @readonly = true })
                        @if (Model.Id == 0)
                        {
                            <img src='@Url.Content("~/Content/Images/btn_search.gif")' onclick="return openEmployee();" alt="Find" title="Find" />
                        }
                    </span>
                </div>
                <div class="row">
                    <span class="label" style="width:32%">
                        @Html.LabelFor(model => model.TitleId)
                    </span><span class="field" style="width:60%">
                        @Html.DropDownListFor(model => model.TitleId, Model.TitleList, @String.Format("{0}", Content.DDLOptionalLabel()))
                    </span>
                </div>
                <div class="row">
                    <span class="label" style="width:32%">
                        @Html.LabelFor(model => model.FullName, new { @class = "label-required" })
                    </span>
                    <span class="field" style="width:60%">
                        @Html.TextBoxFor(m => m.FullName, new { @class = "read-only", @readonly = true })
                    </span>
                </div>
            </div>
            <div class="rightColumn">
                <div class="row">
                    <div class="field" style="width: auto;">
                        @{
                            if (Model.IsPhotoExist)
                            {
                                <div class="Photo-Top">
                                    <img alt="Employe Photo" height="110" width="110" src="@Url.Action("GetImage", "SecurityPersonnelInfo", new { id = Model.EmployeeId, isPhoto = true })" />
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="clear">
            </div>
        </div>

        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.FirstName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.FirstName)
                </span><span class="label-right">
                    @Html.LabelFor(model => model.LastName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.LastName)
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.FatherName)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.FatherName)
                </span><span class="label-right">
                    @Html.LabelFor(model => model.DateofBirth)
                </span><span class="field">
                    @Html.EditorFor(model => model.DateofBirth)
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => Model.DistrictId)
                </span>
                <span class="field district">
                    @Html.DropDownListFor(model => model.DistrictId, Model.DistrictList, @String.Format("{0}", Content.DDLOptionalLabel()))
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.BloodGroup)
                </span><span class="field">
                    @Html.TextBoxFor(model => model.BloodGroup, new { @class = "read-only", @readonly = true })
                    @*@Html.DropDownListFor(model => model.BloodGroupId, Model.BloodGroupList, @String.Format("{0}", Content.DDLOptionalLabel()))*@
                </span>
            </div>
            <div class="clear">
            </div>
        </div>

        <div class="GroupBox">

            <div class="row">

                <span class="label">
                    @Html.LabelFor(model => model.DesignationName)
                </span>
                <span class="field" style="width:40%">
                    @Html.TextBoxFor(model => model.DesignationName, new { @class = "read-only", @readonly = true })
                </span>
            </div>


            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.DateofJoining)
                </span>
                <span class="field">
                    @Html.EditorFor(model => model.DateofJoining)
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => Model.DateofPromotion)
                </span><span class="field">
                    @Html.EditorFor(model => model.DateofPromotion)
                </span>
            </div>
                    @Html.HiddenFor(model => model.IsActive)
                    @Html.HiddenFor(model => Model.InactiveDate)
            @*<div class="row HideDateButton">
                <span class="label">
                    @Html.LabelFor(model => model.IsActive)
                </span>
                <span class="field">
                    @Html.DropDownListFor(m => m.IsActive, new List<SelectListItem>() { new SelectListItem { Text = "Active", Value = "true", Selected = Model.IsActive }, new SelectListItem { Text = "Inactive", Value = "false", Selected = Model.IsActive } })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => Model.InactiveDate)
                </span>
                <span class="field">
                    @Html.EditorFor(model => model.InactiveDate)
                </span>
            </div>*@

        </div>


        <div class="clear">
        </div>
        <div class="button-crude">
            @if ((new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsAddAssigned || (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsEditAssigned)
            {
                <input type="submit" value="@Model.ButtonText" name="btnCreate" id="btnCreate" style="margin: 0 10px 0 0;" />
            }
            @if (Model.DeleteEnable && (new BEPZA_MEDICAL.Web.Utility.AppConstant()).IsDeleteAssigned)
            {
                @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "delete-confirm" })
            }
            <div class="clear">
            </div>
        </div>
    </fieldset>

}
<div class="button-crude button-left" style="float: left;">
    @Html.ActionLink("Back to List", "Index")
</div>
<br />
<div class="clear">
</div>

<div id="divEmpList">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white;
        padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>
<br />
<div class="clear">
</div>

<script type="text/javascript">

    if ('@Model.InactiveDate' != '') {
        fnDisableEditMode();
        $(".delete-confirm").hide();
    }

    $("#FirstName, #LastName,#TitleId").focusout(function () {
        $("#FullName").val(($('#TitleId').val() == '' ? '' : ($('#TitleId option:selected').text()) + ' ') + $.trim($('#FirstName').val()) + ' ' + $.trim($('#LastName').val()));
    });

</script>

<script type="text/javascript">
    $(document).ready(function () {
        buttonHide();
        $("#divEmpList").dialog({ autoOpen: false, modal: true, height: 600, width: 900, title: 'Employee', beforeclose: function (event, ui) { Closing(); } });

        if ($("#FatherName").val() == "" || $("#DistrictId").val() == "") {
            $("#FatherName").attr("readonly", true).css('background-color', '#F2F5F8');
            $(".district select").css('background-color', '#F2F5F8');
            $('.district option:not(:selected)').attr('disabled', true);
        }
        else {
            $("#FatherName").attr("readonly", false).css('background-color', '#FFFFFF');
            $(".district select").css('background-color', '#FFFFFF');
            $('.district option:not(:selected)').attr('disabled', false);
        }

        if ('@Model.InactiveDate' == '') {
            $('.HideDateButton').find('span.field #InactiveDate').attr('readonly', true).css('background-color', '#F2F5F8');
            $('.HideDateButton').find('span.field').find('img').hide();
        }
    });

    function buttonHide() {
        if ('@Model.ErrorClass' == "success delete-emp" && '@Model.IsError' == "0") {
            $('#btnCreate').hide();
        }
    }

    $('#IsActive').live('change', function () {

        if ($('#IsActive option:selected').text() == 'Inactive') {
            var d = new Date();
            var dateStr = (d.getFullYear() + '-' + ("0" + (d.getMonth() + 1)).slice(-2) + '-' + ("0" + d.getDate()).slice(-2));
            $('#InactiveDate').val(dateStr);
            $('.HideDateButton').find('span.field #InactiveDate').attr('readonly', false).css('background-color', '#FFFFFF');
            $('.HideDateButton').find('span.field').find('img').show();
        }
        else {
            $('#InactiveDate').val('');
            $('.HideDateButton').find('span.field #InactiveDate').attr('readonly', true).css('background-color', '#F2F5F8');
            $('.HideDateButton').find('span.field').find('img').hide();
        }

    });

</script>

<script type="text/javascript">

    function openEmployee() {
        var url = '@Url.Action("EmployeeSearch", "OnlineWelfareFundApplicationInformation")?UseTypeEmpId=1';
        url = url.replace("SMS", "WFM");

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'text',
            timeout: 5000,
            error: function () {
                alert('System is unable to load data please try again.');
            },
            success: function (result) {
                $('#divEmpList').html(result);
            }
        });

        $("#divEmpList").dialog('open');
        return false;
    }

    function setData(id) {
        $('#EmployeeId').val(id)
        GetEmployeeInfo();
        $("#divEmpList").dialog('close');

    }

    function GetEmployeeInfo() {
        var empId = $('#EmployeeId').val();

        $('#FullName').val('');
        $("#DesignationName").val('');
        $("#BEPZAID").val('');
        $('#DateofBirth').val('');
        $("#DateofJoining").val('');
        $("#FatherName").val('');
        $("#DistrictId").val('');
        $("#TitleId").val('');
        $("#FirstName").val('');
        $("#LastName").val('');
        $("#BloodGroup").val('');

        var url = '@Url.Action("GetEmployeeInfo", "SecurityPersonnelInfo")';

        if (empId > 0) {
            $.post(url, { id: empId }, function (obj) {
                $('#FullName').val(obj.EmployeeName);
                $("#DesignationName").val(obj.Designation);
                $("#BEPZAID").val(obj.EmpID);
                $('#DateofBirth').val(obj.DOB);
                $("#DateofJoining").val(obj.DOJ);
                $("#FatherName").val(obj.FatherName);
                $("#DistrictId").val(obj.DistrictId);
                $("#TitleId").val(obj.TitleId);
                $("#FirstName").val(obj.FirstName);
                $("#LastName").val(obj.LastName);
                $("#BloodGroup").val(obj.BloodGroup);

                if (obj.FatherName == "" || obj.DistrictId == "") {
                    $("#FatherName").attr("readonly", true).css('background-color', '#F2F5F8');
                    $(".district select").css('background-color', '#F2F5F8');
                    $('.district option:not(:selected)').attr('disabled', true);
                }
                else {
                    $("#FatherName").attr("readonly", false).css('background-color', '#FFFFFF');
                    $(".district select").css('background-color', '#FFFFFF');
                    $('.district option:not(:selected)').attr('disabled', false);
                }
            }, "json");
        }

        return false;
    }

    function Closing() {

    }
</script>