//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BEPZA_MEDICAL.DAL.FAR
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERP_BEPZAFAREntities : DbContext
    {
        public ERP_BEPZAFAREntities()
            : base("name=ERP_BEPZAFAREntities")
        {
            // Get the ObjectContext related to this DbContext
            var objectContext = (this as IObjectContextAdapter).ObjectContext;

            // Sets the command timeout for all the commands
            objectContext.CommandTimeout = 3600;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FAR_AccidentInformation> FAR_AccidentInformation { get; set; }
        public virtual DbSet<FAR_AdditionalInfoofVehicle> FAR_AdditionalInfoofVehicle { get; set; }
        public virtual DbSet<FAR_AdditionalInfoofVehicleDetail> FAR_AdditionalInfoofVehicleDetail { get; set; }
        public virtual DbSet<FAR_AssetCondition> FAR_AssetCondition { get; set; }
        public virtual DbSet<FAR_AssetMaintenanceInformation> FAR_AssetMaintenanceInformation { get; set; }
        public virtual DbSet<FAR_AssetMaintenanceInformationDetail> FAR_AssetMaintenanceInformationDetail { get; set; }
        public virtual DbSet<FAR_AssetStatus> FAR_AssetStatus { get; set; }
        public virtual DbSet<FAR_DepreciationMethod> FAR_DepreciationMethod { get; set; }
        public virtual DbSet<FAR_Location> FAR_Location { get; set; }
        public virtual DbSet<FAR_MaintenanceTypeInformation> FAR_MaintenanceTypeInformation { get; set; }
        public virtual DbSet<FAR_SparePartInformation> FAR_SparePartInformation { get; set; }
        public virtual DbSet<FAR_Supplier> FAR_Supplier { get; set; }
        public virtual DbSet<FAR_Catagory> FAR_Catagory { get; set; }
        public virtual DbSet<FAR_SubCategory> FAR_SubCategory { get; set; }
        public virtual DbSet<FAR_AssetTransfer> FAR_AssetTransfer { get; set; }
        public virtual DbSet<FAR_Repair> FAR_Repair { get; set; }
        public virtual DbSet<FAR_SaleDisposal> FAR_SaleDisposal { get; set; }
        public virtual DbSet<FAR_FixedAsset> FAR_FixedAsset { get; set; }
        public virtual DbSet<acc_Accounting_Period_Information> acc_Accounting_Period_Information { get; set; }
        public virtual DbSet<FAR_Depreciation> FAR_Depreciation { get; set; }
        public virtual DbSet<FAR_DepreciationDetail> FAR_DepreciationDetail { get; set; }
    
        public virtual ObjectResult<FAR_uspVoucherPosting_Result> FAR_uspVoucherPosting(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FAR_uspVoucherPosting_Result>("FAR_uspVoucherPosting", idParameter);
        }
    
        public virtual ObjectResult<SP_FAR_AssetRegisterWithDepreciationCalRpt_Result> SP_FAR_AssetRegisterWithDepreciationCalRpt(string zoneList, Nullable<int> param_financialyYearId, Nullable<int> option, Nullable<int> assetCategoryId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var param_financialyYearIdParameter = param_financialyYearId.HasValue ?
                new ObjectParameter("param_financialyYearId", param_financialyYearId) :
                new ObjectParameter("param_financialyYearId", typeof(int));
    
            var optionParameter = option.HasValue ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(int));
    
            var assetCategoryIdParameter = assetCategoryId.HasValue ?
                new ObjectParameter("AssetCategoryId", assetCategoryId) :
                new ObjectParameter("AssetCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FAR_AssetRegisterWithDepreciationCalRpt_Result>("SP_FAR_AssetRegisterWithDepreciationCalRpt", zoneListParameter, param_financialyYearIdParameter, optionParameter, assetCategoryIdParameter);
        }
    
        public virtual ObjectResult<SP_FAR_AssetTransferHistoryRpt_Result> SP_FAR_AssetTransferHistoryRpt(string zoneList, Nullable<int> fixedAssetId, Nullable<int> subCategoryId, Nullable<int> toLocationId, Nullable<int> toBeneficiaryEmployeeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fixedAssetIdParameter = fixedAssetId.HasValue ?
                new ObjectParameter("FixedAssetId", fixedAssetId) :
                new ObjectParameter("FixedAssetId", typeof(int));
    
            var subCategoryIdParameter = subCategoryId.HasValue ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(int));
    
            var toLocationIdParameter = toLocationId.HasValue ?
                new ObjectParameter("ToLocationId", toLocationId) :
                new ObjectParameter("ToLocationId", typeof(int));
    
            var toBeneficiaryEmployeeIdParameter = toBeneficiaryEmployeeId.HasValue ?
                new ObjectParameter("ToBeneficiaryEmployeeId", toBeneficiaryEmployeeId) :
                new ObjectParameter("ToBeneficiaryEmployeeId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FAR_AssetTransferHistoryRpt_Result>("SP_FAR_AssetTransferHistoryRpt", zoneListParameter, fixedAssetIdParameter, subCategoryIdParameter, toLocationIdParameter, toBeneficiaryEmployeeIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_FAR_FixedAssetRegisterRpt_Result> SP_FAR_FixedAssetRegisterRpt(string zoneList, Nullable<int> fixedAssetId, Nullable<int> categoryId, Nullable<int> subCategoryId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var fixedAssetIdParameter = fixedAssetId.HasValue ?
                new ObjectParameter("FixedAssetId", fixedAssetId) :
                new ObjectParameter("FixedAssetId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var subCategoryIdParameter = subCategoryId.HasValue ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FAR_FixedAssetRegisterRpt_Result>("SP_FAR_FixedAssetRegisterRpt", zoneListParameter, fixedAssetIdParameter, categoryIdParameter, subCategoryIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_FAR_FixedAssetScheduleRpt_Result> SP_FAR_FixedAssetScheduleRpt(string zoneList, Nullable<int> itemTypeId, Nullable<int> categoryId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string refurbishmentType)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var itemTypeIdParameter = itemTypeId.HasValue ?
                new ObjectParameter("ItemTypeId", itemTypeId) :
                new ObjectParameter("ItemTypeId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var refurbishmentTypeParameter = refurbishmentType != null ?
                new ObjectParameter("RefurbishmentType", refurbishmentType) :
                new ObjectParameter("RefurbishmentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FAR_FixedAssetScheduleRpt_Result>("SP_FAR_FixedAssetScheduleRpt", zoneListParameter, itemTypeIdParameter, categoryIdParameter, fromDateParameter, toDateParameter, refurbishmentTypeParameter);
        }
    
        public virtual ObjectResult<SP_FAR_GetDepreciationByFixedAssetId_Result> SP_FAR_GetDepreciationByFixedAssetId(Nullable<int> fixedAssetId)
        {
            var fixedAssetIdParameter = fixedAssetId.HasValue ?
                new ObjectParameter("FixedAssetId", fixedAssetId) :
                new ObjectParameter("FixedAssetId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FAR_GetDepreciationByFixedAssetId_Result>("SP_FAR_GetDepreciationByFixedAssetId", fixedAssetIdParameter);
        }
    
        public virtual ObjectResult<SP_FAR_GetDepreciationStatus_Result> SP_FAR_GetDepreciationStatus(string fixedAssetId, Nullable<System.DateTime> processDate)
        {
            var fixedAssetIdParameter = fixedAssetId != null ?
                new ObjectParameter("FixedAssetId", fixedAssetId) :
                new ObjectParameter("FixedAssetId", typeof(string));
    
            var processDateParameter = processDate.HasValue ?
                new ObjectParameter("ProcessDate", processDate) :
                new ObjectParameter("ProcessDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FAR_GetDepreciationStatus_Result>("SP_FAR_GetDepreciationStatus", fixedAssetIdParameter, processDateParameter);
        }
    
        public virtual ObjectResult<SP_FAR_GetNextFinancialYear_Result> SP_FAR_GetNextFinancialYear(Nullable<int> param_financialYearId)
        {
            var param_financialYearIdParameter = param_financialYearId.HasValue ?
                new ObjectParameter("param_financialYearId", param_financialYearId) :
                new ObjectParameter("param_financialYearId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FAR_GetNextFinancialYear_Result>("SP_FAR_GetNextFinancialYear", param_financialYearIdParameter);
        }
    
        public virtual ObjectResult<SP_FAR_GetUniqueMRRList_Result> SP_FAR_GetUniqueMRRList(Nullable<int> param_ZoneInfoIdId)
        {
            var param_ZoneInfoIdIdParameter = param_ZoneInfoIdId.HasValue ?
                new ObjectParameter("param_ZoneInfoIdId", param_ZoneInfoIdId) :
                new ObjectParameter("param_ZoneInfoIdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FAR_GetUniqueMRRList_Result>("SP_FAR_GetUniqueMRRList", param_ZoneInfoIdIdParameter);
        }
    
        public virtual ObjectResult<SP_FAR_LocationWiseAssetListRpt_Result> SP_FAR_LocationWiseAssetListRpt(string zoneList, Nullable<int> itemTypeId, Nullable<int> categoryId, Nullable<int> subCategoryId, Nullable<int> locationId, Nullable<System.DateTime> startPeriod, Nullable<System.DateTime> endPeriod, string beneficiaryEmpID)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var itemTypeIdParameter = itemTypeId.HasValue ?
                new ObjectParameter("ItemTypeId", itemTypeId) :
                new ObjectParameter("ItemTypeId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var subCategoryIdParameter = subCategoryId.HasValue ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("StartPeriod", startPeriod) :
                new ObjectParameter("StartPeriod", typeof(System.DateTime));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("EndPeriod", endPeriod) :
                new ObjectParameter("EndPeriod", typeof(System.DateTime));
    
            var beneficiaryEmpIDParameter = beneficiaryEmpID != null ?
                new ObjectParameter("BeneficiaryEmpID", beneficiaryEmpID) :
                new ObjectParameter("BeneficiaryEmpID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FAR_LocationWiseAssetListRpt_Result>("SP_FAR_LocationWiseAssetListRpt", zoneListParameter, itemTypeIdParameter, categoryIdParameter, subCategoryIdParameter, locationIdParameter, startPeriodParameter, endPeriodParameter, beneficiaryEmpIDParameter);
        }
    
        public virtual int SP_FAR_ProcDepreciationCal(Nullable<int> zoneInfoId, Nullable<int> param_financialyYearId, Nullable<System.DateTime> processDate, string remarks, string user, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var zoneInfoIdParameter = zoneInfoId.HasValue ?
                new ObjectParameter("ZoneInfoId", zoneInfoId) :
                new ObjectParameter("ZoneInfoId", typeof(int));
    
            var param_financialyYearIdParameter = param_financialyYearId.HasValue ?
                new ObjectParameter("param_financialyYearId", param_financialyYearId) :
                new ObjectParameter("param_financialyYearId", typeof(int));
    
            var processDateParameter = processDate.HasValue ?
                new ObjectParameter("ProcessDate", processDate) :
                new ObjectParameter("ProcessDate", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FAR_ProcDepreciationCal", zoneInfoIdParameter, param_financialyYearIdParameter, processDateParameter, remarksParameter, userParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual int SP_FAR_ProcDepreciationCalRollback(Nullable<int> zoneInfoId, Nullable<int> param_depreId, Nullable<System.DateTime> processDate, string remarks, string user, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var zoneInfoIdParameter = zoneInfoId.HasValue ?
                new ObjectParameter("ZoneInfoId", zoneInfoId) :
                new ObjectParameter("ZoneInfoId", typeof(int));
    
            var param_depreIdParameter = param_depreId.HasValue ?
                new ObjectParameter("param_depreId", param_depreId) :
                new ObjectParameter("param_depreId", typeof(int));
    
            var processDateParameter = processDate.HasValue ?
                new ObjectParameter("ProcessDate", processDate) :
                new ObjectParameter("ProcessDate", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FAR_ProcDepreciationCalRollback", zoneInfoIdParameter, param_depreIdParameter, processDateParameter, remarksParameter, userParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual int SP_FAR_ProcDepreciationCalRollbackIndividual(Nullable<int> zonrInfoId, Nullable<int> depreciationId, Nullable<int> detailId, string user, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var zonrInfoIdParameter = zonrInfoId.HasValue ?
                new ObjectParameter("ZonrInfoId", zonrInfoId) :
                new ObjectParameter("ZonrInfoId", typeof(int));
    
            var depreciationIdParameter = depreciationId.HasValue ?
                new ObjectParameter("DepreciationId", depreciationId) :
                new ObjectParameter("DepreciationId", typeof(int));
    
            var detailIdParameter = detailId.HasValue ?
                new ObjectParameter("DetailId", detailId) :
                new ObjectParameter("DetailId", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FAR_ProcDepreciationCalRollbackIndividual", zonrInfoIdParameter, depreciationIdParameter, detailIdParameter, userParameter, numErrorCode, strErrorMsg);
        }
    }
}
