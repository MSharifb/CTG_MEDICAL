//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BEPZA_MEDICAL.DAL.PMI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERP_BEPZAPMIEntities : DbContext
    {
        public ERP_BEPZAPMIEntities()
            : base("name=ERP_BEPZAPMIEntities")
        {
            // Get the ObjectContext related to this DbContext
            var objectContext = (this as IObjectContextAdapter).ObjectContext;

            // Sets the command timeout for all the commands
            objectContext.CommandTimeout = 3600;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PMI_ProjectZone> PMI_ProjectZone { get; set; }
        public virtual DbSet<PMI_Agency> PMI_Agency { get; set; }
        public virtual DbSet<PMI_ApprovalAuthority> PMI_ApprovalAuthority { get; set; }
        public virtual DbSet<PMI_BudgetHead> PMI_BudgetHead { get; set; }
        public virtual DbSet<PMI_BudgetType> PMI_BudgetType { get; set; }
        public virtual DbSet<PMI_ConstructionCategory> PMI_ConstructionCategory { get; set; }
        public virtual DbSet<PMI_ConstructionType> PMI_ConstructionType { get; set; }
        public virtual DbSet<PMI_EstimationUnit> PMI_EstimationUnit { get; set; }
        public virtual DbSet<PMI_Ministry> PMI_Ministry { get; set; }
        public virtual DbSet<PMI_PaymentStatus> PMI_PaymentStatus { get; set; }
        public virtual DbSet<PMI_ProcurementType> PMI_ProcurementType { get; set; }
        public virtual DbSet<PMI_ProjectStatus> PMI_ProjectStatus { get; set; }
        public virtual DbSet<PMI_SourceOfFund> PMI_SourceOfFund { get; set; }
        public virtual DbSet<vwPMIProcurementPlanFundRpt> vwPMIProcurementPlanFundRpt { get; set; }
        public virtual DbSet<vwPMIStatusInformation> vwPMIStatusInformation { get; set; }
        public virtual DbSet<CommonConfigType> CommonConfigType { get; set; }
        public virtual DbSet<PMI_BudgetZoneOrProject> PMI_BudgetZoneOrProject { get; set; }
        public virtual DbSet<PMI_EstimationSetup> PMI_EstimationSetup { get; set; }
        public virtual DbSet<PMI_EstimationZone> PMI_EstimationZone { get; set; }
        public virtual DbSet<PMI_ProcurementMethod> PMI_ProcurementMethod { get; set; }
        public virtual DbSet<PMI_ProjectDetails> PMI_ProjectDetails { get; set; }
        public virtual DbSet<PMI_ProjectTimeExtension> PMI_ProjectTimeExtension { get; set; }
        public virtual DbSet<vwPMIEstimation> vwPMIEstimation { get; set; }
        public virtual DbSet<PMI_BudgetDetailsYearlyCost> PMI_BudgetDetailsYearlyCost { get; set; }
        public virtual DbSet<PMI_BudgetMaster> PMI_BudgetMaster { get; set; }
        public virtual DbSet<acc_Accounting_Period_Information> acc_Accounting_Period_Information { get; set; }
        public virtual DbSet<PMI_EstimationHead> PMI_EstimationHead { get; set; }
        public virtual DbSet<PMI_EstimationHeadDescription> PMI_EstimationHeadDescription { get; set; }
        public virtual DbSet<PMI_EstimationMaster> PMI_EstimationMaster { get; set; }
        public virtual DbSet<vwPMIBudgetInfo> vwPMIBudgetInfo { get; set; }
        public virtual DbSet<PMI_EstimationDetails> PMI_EstimationDetails { get; set; }
        public virtual DbSet<PMI_TenderDetails> PMI_TenderDetails { get; set; }
        public virtual DbSet<PMI_ApprovalFlowDetails> PMI_ApprovalFlowDetails { get; set; }
        public virtual DbSet<PMI_ApprovalFlowMaster> PMI_ApprovalFlowMaster { get; set; }
        public virtual DbSet<PMI_ApprovalSection> PMI_ApprovalSection { get; set; }
        public virtual DbSet<PMI_ProjectApproverStatus> PMI_ProjectApproverStatus { get; set; }
        public virtual DbSet<PMI_AnnualProcurementPlanMaster> PMI_AnnualProcurementPlanMaster { get; set; }
        public virtual DbSet<vwPMIProjectSummary> vwPMIProjectSummary { get; set; }
        public virtual DbSet<PMI_ProjectMaster> PMI_ProjectMaster { get; set; }
        public virtual DbSet<PMI_AppZones> PMI_AppZones { get; set; }
        public virtual DbSet<acc_Cost_Centre_or_Institute_Information> acc_Cost_Centre_or_Institute_Information { get; set; }
        public virtual DbSet<PMI_WorkStatus> PMI_WorkStatus { get; set; }
        public virtual DbSet<PMI_BudgetDetailsYearlyBilled> PMI_BudgetDetailsYearlyBilled { get; set; }
        public virtual DbSet<PMI_BudgetDetails> PMI_BudgetDetails { get; set; }
        public virtual DbSet<PMI_AnnualProcurementPlanDetails> PMI_AnnualProcurementPlanDetails { get; set; }
        public virtual DbSet<PMI_ProgressReportDetailsYearlyBilled> PMI_ProgressReportDetailsYearlyBilled { get; set; }
        public virtual DbSet<PMI_ProgressReportDetails> PMI_ProgressReportDetails { get; set; }
        public virtual DbSet<PMI_ProgressReportMaster> PMI_ProgressReportMaster { get; set; }
        public virtual DbSet<PMI_ProjectFor> PMI_ProjectFor { get; set; }
        public virtual DbSet<PMI_Head> PMI_Head { get; set; }
        public virtual DbSet<vwPMIBudgetHead> vwPMIBudgetHead { get; set; }
        public virtual DbSet<PMI_ProgressReportAttachment> PMI_ProgressReportAttachment { get; set; }
        public virtual DbSet<vwPMINewBudgetInfo> vwPMINewBudgetInfo { get; set; }
        public virtual DbSet<PMI_ProgressReportSignature> PMI_ProgressReportSignature { get; set; }
    
        public virtual ObjectResult<sp_PMI_RptFinancialBudget_Result> sp_PMI_RptFinancialBudget(Nullable<int> financialYearId, Nullable<int> statusId, string budgetType, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var budgetTypeParameter = budgetType != null ?
                new ObjectParameter("BudgetType", budgetType) :
                new ObjectParameter("BudgetType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_RptFinancialBudget_Result>("sp_PMI_RptFinancialBudget", financialYearIdParameter, statusIdParameter, budgetTypeParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual ObjectResult<sp_PMI_RptTenderNoticeDetails_Result> sp_PMI_RptTenderNoticeDetails(Nullable<int> financialYearId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> nameOfWorksId, string zoneList, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nameOfWorksIdParameter = nameOfWorksId.HasValue ?
                new ObjectParameter("NameOfWorksId", nameOfWorksId) :
                new ObjectParameter("NameOfWorksId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_RptTenderNoticeDetails_Result>("sp_PMI_RptTenderNoticeDetails", financialYearIdParameter, fromDateParameter, toDateParameter, nameOfWorksIdParameter, zoneListParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual ObjectResult<sp_PMI_RptTenderNotice_Result> sp_PMI_RptTenderNotice(Nullable<int> financialYearId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> nameOfWorksId, string zoneList, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nameOfWorksIdParameter = nameOfWorksId.HasValue ?
                new ObjectParameter("NameOfWorksId", nameOfWorksId) :
                new ObjectParameter("NameOfWorksId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_RptTenderNotice_Result>("sp_PMI_RptTenderNotice", financialYearIdParameter, fromDateParameter, toDateParameter, nameOfWorksIdParameter, zoneListParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual ObjectResult<sp_PMI_ChartBudgetVariance_Result> sp_PMI_ChartBudgetVariance(Nullable<int> financialYearId, Nullable<int> budgetStatusId)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var budgetStatusIdParameter = budgetStatusId.HasValue ?
                new ObjectParameter("BudgetStatusId", budgetStatusId) :
                new ObjectParameter("BudgetStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_ChartBudgetVariance_Result>("sp_PMI_ChartBudgetVariance", financialYearIdParameter, budgetStatusIdParameter);
        }
    
        public virtual ObjectResult<sp_PMI_BudgetStatus_Result> sp_PMI_BudgetStatus(Nullable<int> financialYearId, Nullable<int> budgetStatusId, string zoneList)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var budgetStatusIdParameter = budgetStatusId.HasValue ?
                new ObjectParameter("BudgetStatusId", budgetStatusId) :
                new ObjectParameter("BudgetStatusId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_BudgetStatus_Result>("sp_PMI_BudgetStatus", financialYearIdParameter, budgetStatusIdParameter, zoneListParameter);
        }
    
        public virtual ObjectResult<sp_PMI_ProjectStatus_Result> sp_PMI_ProjectStatus(Nullable<int> financialYearId, string zoneList)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_ProjectStatus_Result>("sp_PMI_ProjectStatus", financialYearIdParameter, zoneListParameter);
        }
    
        public virtual ObjectResult<sp_PMI_RptProcurementPlan_Result> sp_PMI_RptProcurementPlan(Nullable<int> financialYearId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> nameOfWorksId, string zoneList, Nullable<int> statusId, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nameOfWorksIdParameter = nameOfWorksId.HasValue ?
                new ObjectParameter("NameOfWorksId", nameOfWorksId) :
                new ObjectParameter("NameOfWorksId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_RptProcurementPlan_Result>("sp_PMI_RptProcurementPlan", financialYearIdParameter, fromDateParameter, toDateParameter, nameOfWorksIdParameter, zoneListParameter, statusIdParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual ObjectResult<sp_PMI_RptProcurementPlanDetails_Result> sp_PMI_RptProcurementPlanDetails(Nullable<int> financialYearId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> nameOfWorksId, string zoneList, Nullable<int> statusId, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nameOfWorksIdParameter = nameOfWorksId.HasValue ?
                new ObjectParameter("NameOfWorksId", nameOfWorksId) :
                new ObjectParameter("NameOfWorksId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_RptProcurementPlanDetails_Result>("sp_PMI_RptProcurementPlanDetails", financialYearIdParameter, fromDateParameter, toDateParameter, nameOfWorksIdParameter, zoneListParameter, statusIdParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual ObjectResult<sp_PMI_RptProjectEstimation_Result> sp_PMI_RptProjectEstimation(Nullable<int> nameOfWorksId, string zoneList, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var nameOfWorksIdParameter = nameOfWorksId.HasValue ?
                new ObjectParameter("NameOfWorksId", nameOfWorksId) :
                new ObjectParameter("NameOfWorksId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_RptProjectEstimation_Result>("sp_PMI_RptProjectEstimation", nameOfWorksIdParameter, zoneListParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual ObjectResult<sp_PMI_RptZoneWiseBudget_Result> sp_PMI_RptZoneWiseBudget(Nullable<int> financialYearId, string zoneList, Nullable<int> statusId, Nullable<int> projectForId, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var projectForIdParameter = projectForId.HasValue ?
                new ObjectParameter("ProjectForId", projectForId) :
                new ObjectParameter("ProjectForId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_RptZoneWiseBudget_Result>("sp_PMI_RptZoneWiseBudget", financialYearIdParameter, zoneListParameter, statusIdParameter, projectForIdParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual ObjectResult<sp_PMI_RptWorkWiseBudget_Result> sp_PMI_RptWorkWiseBudget(Nullable<int> zoneId, string budgetHeadId, string budgetSubHeadId, string financialYearId, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var budgetHeadIdParameter = budgetHeadId != null ?
                new ObjectParameter("BudgetHeadId", budgetHeadId) :
                new ObjectParameter("BudgetHeadId", typeof(string));
    
            var budgetSubHeadIdParameter = budgetSubHeadId != null ?
                new ObjectParameter("BudgetSubHeadId", budgetSubHeadId) :
                new ObjectParameter("BudgetSubHeadId", typeof(string));
    
            var financialYearIdParameter = financialYearId != null ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_RptWorkWiseBudget_Result>("sp_PMI_RptWorkWiseBudget", zoneIdParameter, budgetHeadIdParameter, budgetSubHeadIdParameter, financialYearIdParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual ObjectResult<sp_Pmi_GetAccountingPeriod_Result> sp_Pmi_GetAccountingPeriod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Pmi_GetAccountingPeriod_Result>("sp_Pmi_GetAccountingPeriod");
        }
    
        public virtual ObjectResult<sp_Pmi_GetBudgetHeadInformation_Result> sp_Pmi_GetBudgetHeadInformation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Pmi_GetBudgetHeadInformation_Result>("sp_Pmi_GetBudgetHeadInformation");
        }
    
        public virtual ObjectResult<sp_PMI_PrintBudget_Result> sp_PMI_PrintBudget(Nullable<int> budgetMasterId, Nullable<int> budgetDetailsId)
        {
            var budgetMasterIdParameter = budgetMasterId.HasValue ?
                new ObjectParameter("BudgetMasterId", budgetMasterId) :
                new ObjectParameter("BudgetMasterId", typeof(int));
    
            var budgetDetailsIdParameter = budgetDetailsId.HasValue ?
                new ObjectParameter("BudgetDetailsId", budgetDetailsId) :
                new ObjectParameter("BudgetDetailsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_PrintBudget_Result>("sp_PMI_PrintBudget", budgetMasterIdParameter, budgetDetailsIdParameter);
        }
    
        public virtual ObjectResult<sp_PMI_ProgressReport_Result> sp_PMI_ProgressReport(Nullable<int> zoneId, string financialYearList, Nullable<System.DateTime> reportDate, string budgetHeadIdList)
        {
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var financialYearListParameter = financialYearList != null ?
                new ObjectParameter("FinancialYearList", financialYearList) :
                new ObjectParameter("FinancialYearList", typeof(string));
    
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));
    
            var budgetHeadIdListParameter = budgetHeadIdList != null ?
                new ObjectParameter("BudgetHeadIdList", budgetHeadIdList) :
                new ObjectParameter("BudgetHeadIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_ProgressReport_Result>("sp_PMI_ProgressReport", zoneIdParameter, financialYearListParameter, reportDateParameter, budgetHeadIdListParameter);
        }
    
        public virtual ObjectResult<sp_PMI_RptAnnualProcurementPlan_Result> sp_PMI_RptAnnualProcurementPlan(Nullable<int> id, Nullable<int> financialYearId, Nullable<int> statusId, string zoneList, Nullable<int> projectForId, ObjectParameter numErrorCode, ObjectParameter strErrorMsg)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var projectForIdParameter = projectForId.HasValue ?
                new ObjectParameter("ProjectForId", projectForId) :
                new ObjectParameter("ProjectForId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_RptAnnualProcurementPlan_Result>("sp_PMI_RptAnnualProcurementPlan", idParameter, financialYearIdParameter, statusIdParameter, zoneListParameter, projectForIdParameter, numErrorCode, strErrorMsg);
        }
    
        public virtual ObjectResult<sp_PMI_ProgressReport_M1_Result> sp_PMI_ProgressReport_M1(Nullable<int> progressReportId, Nullable<int> projectForId, string strZoneId)
        {
            var progressReportIdParameter = progressReportId.HasValue ?
                new ObjectParameter("progressReportId", progressReportId) :
                new ObjectParameter("progressReportId", typeof(int));
    
            var projectForIdParameter = projectForId.HasValue ?
                new ObjectParameter("ProjectForId", projectForId) :
                new ObjectParameter("ProjectForId", typeof(int));
    
            var strZoneIdParameter = strZoneId != null ?
                new ObjectParameter("strZoneId", strZoneId) :
                new ObjectParameter("strZoneId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_ProgressReport_M1_Result>("sp_PMI_ProgressReport_M1", progressReportIdParameter, projectForIdParameter, strZoneIdParameter);
        }
    
        public virtual ObjectResult<sp_PMI_ProgressReport_Attachment_Result> sp_PMI_ProgressReport_Attachment(Nullable<int> progressReportId)
        {
            var progressReportIdParameter = progressReportId.HasValue ?
                new ObjectParameter("progressReportId", progressReportId) :
                new ObjectParameter("progressReportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PMI_ProgressReport_Attachment_Result>("sp_PMI_ProgressReport_Attachment", progressReportIdParameter);
        }
    
        public virtual ObjectResult<SP_PRM_RptServiceVistory_Result> SP_PRM_RptServiceVistory(Nullable<int> employeeId, Nullable<int> designationId, string zoneList)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var designationIdParameter = designationId.HasValue ?
                new ObjectParameter("DesignationId", designationId) :
                new ObjectParameter("DesignationId", typeof(int));
    
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRM_RptServiceVistory_Result>("SP_PRM_RptServiceVistory", employeeIdParameter, designationIdParameter, zoneListParameter);
        }
    
        public virtual int sp_PMI_RptBudgetSummary(string zoneList, Nullable<int> projectForId, Nullable<int> budgetHeadId)
        {
            var zoneListParameter = zoneList != null ?
                new ObjectParameter("zoneList", zoneList) :
                new ObjectParameter("zoneList", typeof(string));
    
            var projectForIdParameter = projectForId.HasValue ?
                new ObjectParameter("ProjectForId", projectForId) :
                new ObjectParameter("ProjectForId", typeof(int));
    
            var budgetHeadIdParameter = budgetHeadId.HasValue ?
                new ObjectParameter("BudgetHeadId", budgetHeadId) :
                new ObjectParameter("BudgetHeadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PMI_RptBudgetSummary", zoneListParameter, projectForIdParameter, budgetHeadIdParameter);
        }
    
        public virtual ObjectResult<SP_PMI_Signature_Result> SP_PMI_Signature(Nullable<int> id, string reportType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PMI_Signature_Result>("SP_PMI_Signature", idParameter, reportTypeParameter);
        }
    }
}
